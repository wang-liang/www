[ 2016-06-06T10:11:15+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000731s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000980s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001059s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000071s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000178s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009370s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009462s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000669s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000828s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000950s ]
INFO: [ app_end ] --END-- [ RunTime:0.001024s ]

[ 2016-06-06T10:12:06+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000027s ]
INFO: [ app_init ] --END-- [ RunTime:0.000650s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000901s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001021s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0036s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000153s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.082811s ]
INFO: [ view_parse ] --END-- [ RunTime:0.082969s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000845s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000985s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001513s ]
INFO: [ app_end ] --END-- [ RunTime:0.001654s ]

[ 2016-06-06T10:14:25+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000035s ]
INFO: [ app_init ] --END-- [ RunTime:0.001010s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001374s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001531s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0064s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000118s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000268s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013693s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013847s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000744s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000868s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001262s ]
INFO: [ app_end ] --END-- [ RunTime:0.001388s ]

[ 2016-06-06T10:17:03+08:00 ] 192.168.21.77 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.000740s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001041s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001135s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000080s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000194s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015936s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016034s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000652s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000733s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001010s ]
INFO: [ app_end ] --END-- [ RunTime:0.001096s ]

[ 2016-06-06T10:20:26+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000020s ]
INFO: [ app_init ] --END-- [ RunTime:0.000595s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000760s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000827s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000057s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000137s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007958s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008048s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000543s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000600s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000769s ]
INFO: [ app_end ] --END-- [ RunTime:0.000830s ]

[ 2016-06-06T10:20:41+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000032s ]
INFO: [ app_init ] --END-- [ RunTime:0.001045s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001229s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001363s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0053s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0003s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000080s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000190s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008478s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008578s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000518s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000600s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000969s ]
INFO: [ app_end ] --END-- [ RunTime:0.001049s ]

[ 2016-06-06T10:31:46+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000627s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000775s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000843s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000056s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000130s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.006579s ]
INFO: [ view_parse ] --END-- [ RunTime:0.006648s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000505s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000561s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000723s ]
INFO: [ app_end ] --END-- [ RunTime:0.000784s ]

[ 2016-06-06T10:32:27+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000024s ]
INFO: [ app_init ] --END-- [ RunTime:0.000698s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000856s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000944s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0050s ]
SQL: INSERT INTO `sc_message` (`title`,`content`) VALUES ('window.onload事件与ready()区别','<span style=\"line-height:1.5;\">window.onload：载入HTML代码到内存à形成DOM树à载入全部资源（文本、图片、样式）à执行Javascript脚本。</span><br />
<span style=\"line-height:1.5;\">ready方法执行流程如下：载入HTML代码到内存à形成DOM树结构à执行jQuery脚本à载入全部资源（文本、图片、样式）</span><br />
<span style=\"line-height:1.5;\">所以ready方法的执行速度要快于window.onload方法</span><br />
<div>
	<br />
</div>') [ RunTime:0.0023s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000067s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000171s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.052654s ]
INFO: [ view_parse ] --END-- [ RunTime:0.052809s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000812s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000939s ]

[ 2016-06-06T10:32:28+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000024s ]
INFO: [ app_init ] --END-- [ RunTime:0.000689s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000719s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000798s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000069s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000175s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007803s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007916s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000468s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000542s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000781s ]
INFO: [ app_end ] --END-- [ RunTime:0.000873s ]

[ 2016-06-06T10:33:11+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000035s ]
INFO: [ app_init ] --END-- [ RunTime:0.001037s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001424s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001577s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0067s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 44  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000115s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000266s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013887s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014033s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000851s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000971s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.002003s ]
INFO: [ app_end ] --END-- [ RunTime:0.002277s ]

[ 2016-06-06T10:33:44+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000790s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001092s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001179s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0041s ]
SQL: UPDATE `sc_message` SET `title`='window.onload事件与ready()区别',`content`='<span style=\"line-height:1.5;\"><span style=\"line-height:2;\">window.onload：载入HTML代码到内存</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">形成DOM树</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">载入全部资源（文本、图片、样式）</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">执行Javascript脚本。</span></span><br />
<span style=\"line-height:1.5;\"><span style=\"line-height:2;\">ready方法执行流程如下：载入HTML代码到内存</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">形成DOM树结构</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">执行jQuery脚本</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">载入全部资源（文本、图片、样式）</span></span><br />
<span style=\"line-height:2;\">所以ready方法的执行速度要快于window.onload方法</span><br />
<div>
	<br />
</div>' WHERE `id` = 44 [ RunTime:0.0483s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000113s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000342s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016773s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016981s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001126s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001260s ]

[ 2016-06-06T10:42:04+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000033s ]
INFO: [ app_init ] --END-- [ RunTime:0.001062s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001364s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001505s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0065s ]
SQL: INSERT INTO `sc_message` (`title`,`content`) VALUES ('怎么解决Ajax的缓存问题？','<p>
	<span style=\"line-height:1.5;\">1)通过在url尾部追加随机数来解决Ajax缓存问题</span>
</p>
<p>
	<span style=\"line-height:1.5;\">2)通过在url尾部追加时间戳的形式来解决Ajax缓存问题</span>
</p>
<p>
	<span style=\"line-height:1.5;\">3)通过If-Modified-Since请求头来解决Ajax缓存问题</span>
</p>
<p>
	<span style=\"line-height:1.5;\">（If-Modified-Since是标准的HTTP请求头标签，在发送HTTP请求时，把浏览器端缓存页面的最后修改时间一起发到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行比较。</span>
</p>
<p>
	<span style=\"line-height:1.5;\">如果时间一致，那么返回HTTP状态码304（不返回文件内容），客户端接到之后，就直接把本地缓存文件显示到浏览器中。</span>
</p>
<p>
	<span style=\"line-height:1.5;\">如果时间不一致，就返回HTTP状态码200和新的文件内容，客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示到浏览器中）</span>
</p>
<p>
	<span style=\"line-height:1.5;\">4)通过服务器端禁用浏览器缓存(</span><span style=\"line-height:1.5;\">设置HTTP协议的</span><span style=\"line-height:1.5;\">Cache-Control选项)</span>
</p>
<p>
	<span style=\"line-height:1.5;\">header(\"Cache-Control: no-cache, must-revalidate\");</span>
</p>') [ RunTime:0.0026s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000097s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000247s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014329s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014470s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000811s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000928s ]

[ 2016-06-06T10:42:06+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000038s ]
INFO: [ app_init ] --END-- [ RunTime:0.000833s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001585s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001795s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000070s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000160s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008091s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008194s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000529s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000602s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000903s ]
INFO: [ app_end ] --END-- [ RunTime:0.001060s ]

[ 2016-06-06T10:42:26+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/45
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000032s ]
INFO: [ app_init ] --END-- [ RunTime:0.000962s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001196s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001333s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0062s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 45  [ RunTime:0.0003s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000118s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000269s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013289s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013436s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000895s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001019s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001692s ]
INFO: [ app_end ] --END-- [ RunTime:0.001837s ]

[ 2016-06-06T10:42:35+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/45
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.000759s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000908s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000993s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0044s ]
SQL: UPDATE `sc_message` SET `title`='怎么解决Ajax的缓存问题？',`content`='<p>
	<span style=\"line-height:1.5;\">1)通过在url尾部追加随机数来解决Ajax缓存问题</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">2)通过在url尾部追加时间戳的形式来解决Ajax缓存问题</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">3)通过If-Modified-Since请求头来解决Ajax缓存问题</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">If-Modified-Since是标准的HTTP请求头标签，在发送HTTP请求时，把浏览器端缓存页面的最后修改时间一起发到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行比较。</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">如果时间一致，那么返回HTTP状态码304（不返回文件内容），客户端接到之后，就直接把本地缓存文件显示到浏览器中。</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">如果时间不一致，就返回HTTP状态码200和新的文件内容，客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示到浏览器中</span>
</p>
<p>
	<span style=\"line-height:1.5;\">4)通过服务器端禁用浏览器缓存(</span><span style=\"line-height:1.5;\">设置HTTP协议的</span><span style=\"line-height:1.5;\">Cache-Control选项)</span> 
</p>
<p>
	<span style=\"line-height:1.5;\">header(\"Cache-Control: no-cache, must-revalidate\");</span> 
</p>' WHERE `id` = 45 [ RunTime:0.0779s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000115s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000293s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.016147s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016326s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001058s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001195s ]

[ 2016-06-06T10:44:43+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000032s ]
INFO: [ app_init ] --END-- [ RunTime:0.001086s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.005736s ]
INFO: [ app_begin ] --END-- [ RunTime:0.006131s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0070s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000119s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000272s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013742s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013888s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000819s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000945s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001494s ]
INFO: [ app_end ] --END-- [ RunTime:0.001621s ]

[ 2016-06-06T10:46:17+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000026s ]
INFO: [ app_init ] --END-- [ RunTime:0.000723s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000993s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001083s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0047s ]
SQL: UPDATE `sc_message` SET `title`='什么是Ajax？Ajax的核心技术是什么？Ajax如何使用？Ajax如何解析json数据？Ajax的优缺点是什么？',`content`='<p>
	<span style=\"line-height:1;\">Ajax</span><span style=\"line-height:1;\">是</span><span style=\"line-height:1;\">JS、xml、css、dom&nbsp;</span><span style=\"line-height:1;\">多种技术的结合，它是一种可以与服务器进行</span><span style=\"line-height:1;\">(</span><span style=\"line-height:1;\">同步、异步</span><span style=\"line-height:1;\">)</span><span style=\"line-height:1;\">交互的技术，特点：页面不刷新，减少用户等待时间，用户体验好</span> 
</p>
<p>
	<span style=\"line-height:1;color:#E53333;\">Ajax</span><span style=\"line-height:1;\"><span style=\"color:#E53333;\">的核心技术</span>是</span><span style=\"line-height:1;\">XMLHttpRequest</span><span style=\"line-height:1;\">，它是</span><span style=\"line-height:1;\">js</span><span style=\"line-height:1;\">中的一个对象</span> 
</p>
<p>
	<span style=\"line-height:1;color:#E53333;\">Ajax</span><span style=\"line-height:1;color:#E53333;\">使用：</span><span style=\"line-height:1;\">1</span><span style=\"line-height:1;\">、创建一个</span><span style=\"line-height:1;\">ajax</span><span style=\"line-height:1;\">对象</span><span style=\"line-height:1;\"> 2</span><span style=\"line-height:1;\">、创建一个</span><span style=\"line-height:1;\">HTTP</span><span style=\"line-height:1;\">协议</span> 
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;3</span><span><span style=\"line-height:1;\">、向服务器发出请</span><span style=\"line-height:1;\">求</span></span><span style=\"line-height:1;\"> 4</span><span style=\"line-height:1;\">、</span><span style=\"line-height:1;\">ajax</span><span style=\"line-height:1;\">接收服务器返回的信息</span> 
</p>
<p>
	<span style=\"line-height:1;\">使用场合：无刷新分页、用户名校验、百度搜索引擎</span> 
</p>
<p>
	<span style=\"line-height:1;\">$.ajax({</span> 
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;url:</span><span style=\"line-height:1;\">请求地址</span> 
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;type:get/post</span><span style=\"line-height:1;\">请求方式</span> 
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;data:</span><span style=\"line-height:1;\">给服务器传递数据</span> 
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;dataType:	html/text/xml/json</span><span style=\"line-height:1;\">服务器返回的数据类型</span> 
</p>
<p>
	<span style=\"line-height:1.5;\"><span style=\"line-height:1;\"> </span></span> 
</p>
<p>
	&nbsp;&nbsp;&nbsp;&nbsp;success:	成功请求后的回调函数
</p>
<p>
	<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;async:true/false&nbsp;&nbsp;</span><span style=\"line-height:1;\">同步、异步请求</span> 
</p>
<p style=\"text-indent:21.0000pt;\">
	<span style=\"line-height:1;\"></span><span style=\"line-height:1;\"></span> 
</p>
<p>
	<span style=\"line-height:1.5;\"><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">cache:true/false	是否进行缓存</span></span> 
</p>
<p>
	<span style=\"line-height:1;\">})</span> 
</p>
<p>
	<span style=\"line-height:1;color:#E53333;\">Ajax</span><span style=\"line-height:1;color:#E53333;\">的</span><span style=\"line-height:1;color:#E53333;\">Json</span><span style=\"line-height:1;\"><span style=\"color:#E53333;\">数据如何解析：</span>通过</span><span style=\"line-height:1;\">eval()</span><span style=\"line-height:1;\">函数，将返回的</span><span style=\"line-height:1;\">json</span><span style=\"line-height:1;\">数据转变实体对象</span> 
</p>
<p>
	<span style=\"line-height:1;\">var&nbsp;obj&nbsp;=&nbsp;eval(data);&nbsp;&nbsp;&nbsp;//data</span><span style=\"line-height:1;\">为</span><span style=\"line-height:1;\">ajax</span><span style=\"line-height:1;\">请求成功后返回的</span><span style=\"line-height:1;\">json</span><span style=\"line-height:1;\">数据</span> 
</p>
<p>
	<span style=\"line-height:1;\"><span style=\"line-height:1.5;\">Ajax 的优点是：</span><br />
<span style=\"line-height:1.5;\">1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；</span><br />
<span style=\"line-height:1.5;\">2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。</span><br />
<br />
<span style=\"line-height:1.5;\">Ajax 的缺点是不利于SEO 推广优化，因为搜索引擎无法直接访问到Ajax 请求的内容。</span><br />
<span style=\"line-height:1.5;\"></span><br />
</span>
</p>' WHERE `id` = 42 [ RunTime:0.0027s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000067s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000170s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009379s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009478s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000651s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000728s ]

[ 2016-06-06T10:46:41+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000031s ]
INFO: [ app_init ] --END-- [ RunTime:0.000990s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000941s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001120s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0053s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000077s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000170s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008777s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008889s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000567s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000650s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001145s ]
INFO: [ app_end ] --END-- [ RunTime:0.001974s ]

[ 2016-06-06T10:46:52+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.000556s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000849s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000936s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0040s ]
SQL: UPDATE `sc_message` SET `title`='什么是Ajax？Ajax的核心技术是什么？Ajax如何使用？Ajax如何解析json数据？Ajax的优缺点是什么？',`content`='<p>
	<span>Ajax</span><span>是</span><span>JS、xml、css、dom&nbsp;</span><span>多种技术的结合，它是一种可以与服务器进行</span><span>(</span><span>同步、异步</span><span>)</span><span>交互的技术，特点：页面不刷新，减少用户等待时间，用户体验好</span> 
</p>
<p>
	<span style=\"color:#E53333;\">Ajax</span><span><span style=\"color:#E53333;\">的核心技术</span>是</span><span>XMLHttpRequest</span><span>，它是</span><span>js</span><span>中的一个对象</span> 
</p>
<p>
	<span style=\"color:#E53333;\">Ajax</span><span style=\"color:#E53333;\">使用：</span><span>1</span><span>、创建一个</span><span>ajax</span><span>对象</span><span> 2</span><span>、创建一个</span><span>HTTP</span><span>协议</span> 
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;3</span><span><span>、向服务器发出请</span><span>求</span></span><span> 4</span><span>、</span><span>ajax</span><span>接收服务器返回的信息</span> 
</p>
<p>
	<span>使用场合：无刷新分页、用户名校验、百度搜索引擎</span> 
</p>
<p>
	<span>$.ajax({</span> 
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;url:</span><span>请求地址</span> 
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;type:get/post</span><span>请求方式</span> 
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;data:</span><span>给服务器传递数据</span> 
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;dataType:	html/text/xml/json</span><span>服务器返回的数据类型</span> 
</p>
<p>
	<span><span> </span></span> 
</p>
<p>
	&nbsp;&nbsp;&nbsp;&nbsp;success:	成功请求后的回调函数
</p>
<p>
	<span>&nbsp;&nbsp;&nbsp;&nbsp;async:true/false&nbsp;&nbsp;</span><span>同步、异步请求</span> 
</p>
<p style=\"text-indent:21.0000pt;\">
	<span></span><span></span> 
</p>
<p>
	<span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>cache:true/false	是否进行缓存</span></span> 
</p>
<p>
	<span>})</span> 
</p>
<p>
	<span style=\"color:#E53333;\">Ajax</span><span style=\"color:#E53333;\">的</span><span style=\"color:#E53333;\">Json</span><span><span style=\"color:#E53333;\">数据如何解析：</span>通过</span><span>eval()</span><span>函数，将返回的</span><span>json</span><span>数据转变实体对象</span> 
</p>
<p>
	<span>var&nbsp;obj&nbsp;=&nbsp;eval(data);&nbsp;&nbsp;&nbsp;//data</span><span>为</span><span>ajax</span><span>请求成功后返回的</span><span>json</span><span>数据</span> 
</p>
<p>
	<span><span>Ajax 的优点是：</span><br />
<span>1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；</span><br />
<span>2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。</span><br />
<span>Ajax 的缺点是不利于SEO 推广优化，因为搜索引擎无法直接访问到Ajax 请求的内容。</span><br />
</span> 
</p>' WHERE `id` = 42 [ RunTime:0.0023s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000060s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000146s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008032s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008119s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000667s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000741s ]

[ 2016-06-06T10:47:03+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000031s ]
INFO: [ app_init ] --END-- [ RunTime:0.000907s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000857s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000952s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0040s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000076s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000178s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008994s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009087s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000572s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000678s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000880s ]
INFO: [ app_end ] --END-- [ RunTime:0.000955s ]

[ 2016-06-06T10:48:07+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000024s ]
INFO: [ app_init ] --END-- [ RunTime:0.000662s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000815s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000899s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0044s ]
SQL: UPDATE `sc_message` SET `title`='什么是Ajax？Ajax的核心技术是什么？Ajax如何使用？Ajax如何解析json数据？Ajax的优缺点是什么？',`content`='<p>
	<span><span style=\"color:#E53333;\">Ajax</span>是JS、xml、css、dom 多种技术的结合，它是一种可以与服务器进行(同步、异步)交互的技术，特点：页面不刷新，减少用户等待时间，用户体验好<br />
<span style=\"color:#E53333;\">Ajax的核心技术</span>是XMLHttpRequest，它是js中的一个对象<br />
<span style=\"color:#E53333;\">Ajax使用：</span>1、创建一个ajax对象 2、创建一个HTTP协议<br />
&nbsp; &nbsp; 3、向服务器发出请求 4、ajax接收服务器返回的信息<br />
<span style=\"color:#E53333;\">使用场合：</span>无刷新分页、用户名校验、百度搜索引擎<br />
$.ajax({<br />
&nbsp; &nbsp; url:请求地址<br />
&nbsp; &nbsp; type:get/post请求方式<br />
&nbsp; &nbsp; data:给服务器传递数据<br />
&nbsp; &nbsp; dataType:	html/text/xml/json服务器返回的数据类型<br />
&nbsp; &nbsp; success:	成功请求后的回调函数<br />
&nbsp; &nbsp; async:true/false &nbsp;同步、异步请求<br />
&nbsp; &nbsp; cache:true/false	是否进行缓存<br />
})<br />
<span style=\"color:#E53333;\">Ajax的Json数据如何解析：</span>通过eval()函数，将返回的json数据转变实体对象<br />
var obj = eval(data); &nbsp; //data为ajax请求成功后返回的json数据<br />
<span style=\"color:#E53333;\">Ajax 的优点是：</span><br />
1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；<br />
2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。<br />
<span style=\"color:#E53333;\">Ajax 的缺点是：</span>不利于SEO 推广优化，因为搜索引擎无法直接访问到Ajax 请求的内容。<br />
</span>
</p>
<p>
	<span><span></span><br />
<span></span><br />
<span></span><br />
<span></span><br />
</span> 
</p>' WHERE `id` = 42 [ RunTime:0.0463s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000108s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000269s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012521s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012657s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000823s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000956s ]

[ 2016-06-06T10:48:18+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000033s ]
INFO: [ app_init ] --END-- [ RunTime:0.000923s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001121s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001284s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0049s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 42  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000079s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000192s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009153s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009301s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000546s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000625s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001012s ]
INFO: [ app_end ] --END-- [ RunTime:0.001093s ]

[ 2016-06-06T10:48:23+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000028s ]
INFO: [ app_init ] --END-- [ RunTime:0.000697s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000833s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000939s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0048s ]
SQL: UPDATE `sc_message` SET `title`='什么是Ajax？Ajax的核心技术是什么？Ajax如何使用？Ajax如何解析json数据？Ajax的优缺点是什么？',`content`='<p>
	<span><span style=\"color:#E53333;line-height:1.5;\">Ajax</span><span style=\"line-height:1.5;\">是JS、xml、css、dom 多种技术的结合，它是一种可以与服务器进行(同步、异步)交互的技术，特点：页面不刷新，减少用户等待时间，用户体验好</span><br />
<span style=\"color:#E53333;line-height:1.5;\">Ajax的核心技术</span><span style=\"line-height:1.5;\">是XMLHttpRequest，它是js中的一个对象</span><br />
<span style=\"color:#E53333;line-height:1.5;\">Ajax使用：</span><span style=\"line-height:1.5;\">1、创建一个ajax对象 2、创建一个HTTP协议</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; 3、向服务器发出请求 4、ajax接收服务器返回的信息</span><br />
<span style=\"color:#E53333;line-height:1.5;\">使用场合：</span><span style=\"line-height:1.5;\">无刷新分页、用户名校验、百度搜索引擎</span><br />
<span style=\"line-height:1.5;\"> $.ajax({</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; url:请求地址</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; type:get/post请求方式</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; data:给服务器传递数据</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; dataType:	html/text/xml/json服务器返回的数据类型</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; success:	成功请求后的回调函数</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; async:true/false &nbsp;同步、异步请求</span><br />
<span style=\"line-height:1.5;\"> &nbsp; &nbsp; cache:true/false	是否进行缓存</span><br />
<span style=\"line-height:1.5;\"> })</span><br />
<span style=\"color:#E53333;line-height:1.5;\">Ajax的Json数据如何解析：</span><span style=\"line-height:1.5;\">通过eval()函数，将返回的json数据转变实体对象</span><br />
<span style=\"line-height:1.5;\"> var obj = eval(data); &nbsp; //data为ajax请求成功后返回的json数据</span><br />
<span style=\"color:#E53333;line-height:1.5;\">Ajax 的优点是：</span><br />
<span style=\"line-height:1.5;\"> 1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；</span><br />
<span style=\"line-height:1.5;\"> 2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。</span><br />
<span style=\"color:#E53333;line-height:1.5;\">Ajax 的缺点是：</span><span style=\"line-height:1.5;\">不利于SEO 推广优化，因为搜索引擎无法直接访问到Ajax 请求的内容。</span><br />
</span> 
</p>
<p>
	<span><span></span><br />
<span></span><br />
<span></span><br />
<span></span><br />
</span> 
</p>' WHERE `id` = 42 [ RunTime:0.0559s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000157s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000450s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018940s ]
INFO: [ view_parse ] --END-- [ RunTime:0.019154s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000765s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000900s ]

[ 2016-06-06T10:55:15+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.000762s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000955s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001109s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0047s ]
SQL: INSERT INTO `sc_message` (`title`,`content`) VALUES ('理解Javascript事件驱动编程机制，以及window.onload的理解，以及异步，同步，阻塞，非阻塞的概念','<span style=\"color:#E53333;\"><strong>事件驱动式：</strong></span>当用户的行为（点击、移动）会被Javascript系统所捕获，并执行相应的事件处理程序，我们把这个过程就称之为事件驱动式。<br />
<span style=\"color:#E53333;\"><strong>window.onload</strong></span> 是javaScript 的页面加载完成事件，当一个Web页面加载完成后就会触发执行window.onload 里的代码，一般可以用这个事件做一些页面数据初始化之类的工作。<br />
<br />
<span></span><span style=\"color:#E53333;\">同步与异步描述的是一种行为方式，阻塞与非阻塞描述的是一种状态</span><span></span><br />
<span style=\"color:#E53333;\"><strong>异步：</strong></span>代码执行不按顺序，‘跳过’执行，待其他某些代码执行完后，再来执行，称为“异步”，例如：定时器，ajax。<br />
<span style=\"color:#E53333;\"><strong>同步：</strong></span>代码依次执行。<br />
<span style=\"color:#E53333;\"><strong>阻塞：</strong></span>同步时，因为它们在数据由内核空间复制回进程缓冲区时都是阻塞的(不能干别的事)<br />
<span style=\"color:#E53333;\"><strong>非阻塞：</strong></span>异步时，即在1数据准备完成、2由内核空间拷贝回缓冲区后 通知进程，在等待通知的这段时间里可以干别的事。<br />
<div>
	<br />
</div>') [ RunTime:0.0037s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000069s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000171s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009421s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009515s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000688s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000763s ]

[ 2016-06-06T10:55:16+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000035s ]
INFO: [ app_init ] --END-- [ RunTime:0.001339s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001475s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001631s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000091s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000290s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013783s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013971s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000569s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000655s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001071s ]
INFO: [ app_end ] --END-- [ RunTime:0.001166s ]

[ 2016-06-06T10:55:34+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000023s ]
INFO: [ app_init ] --END-- [ RunTime:0.000728s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000866s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000956s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0048s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 46  [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000087s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000253s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009717s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009818s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000564s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000668s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001105s ]
INFO: [ app_end ] --END-- [ RunTime:0.001215s ]

[ 2016-06-06T10:56:14+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000031s ]
INFO: [ app_init ] --END-- [ RunTime:0.000726s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001050s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001171s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0043s ]
SQL: UPDATE `sc_message` SET `title`='理解Javascript事件驱动编程机制，以及window.onload的理解，以及异步，同步，阻塞，非阻塞的概念',`content`='<span style=\"color:#E53333;\"><strong>事件驱动式：</strong></span>当用户的行为（点击、移动）会被Javascript系统所捕获，并执行相应的事件处理程序，我们把这个过程就称之为事件驱动式。<br />
<span style=\"color:#E53333;\"><strong>window.onload</strong></span> 是javaScript 的页面加载完成事件，当一个Web页面加载完成后就会触发执行window.onload 里的代码，一般可以用这个事件做一些页面数据初始化之类的工作。<br />
<br />
<span></span><span style=\"color:#E53333;\"><span></span><em>同步与异步描述的是一种行为方式，阻塞与非阻塞描述的是一种状态</em><span></span></span><span></span><br />
<span style=\"color:#E53333;\"><strong>异步：</strong></span>代码执行不按顺序，‘跳过’执行，待其他某些代码执行完后，再来执行，称为“异步”，例如：定时器，ajax。<br />
<span style=\"color:#E53333;\"><strong>同步：</strong></span>代码依次执行。<br />
<span style=\"color:#E53333;\"><strong>阻塞：</strong></span>同步时，因为它们在数据由内核空间复制回进程缓冲区时都是阻塞的(不能干别的事)<br />
<span style=\"color:#E53333;\"><strong>非阻塞：</strong></span>异步时，即在1数据准备完成、2由内核空间拷贝回缓冲区后 通知进程，在等待通知的这段时间里可以干别的事。<br />
<div>
	<br />
</div>' WHERE `id` = 46 [ RunTime:0.0458s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000109s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000272s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014128s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014273s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000953s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001089s ]

[ 2016-06-06T10:56:26+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000030s ]
INFO: [ app_init ] --END-- [ RunTime:0.000982s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001190s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001312s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0055s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 46  [ RunTime:0.0003s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000112s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000262s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013024s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013171s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000757s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000872s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001113s ]
INFO: [ app_end ] --END-- [ RunTime:0.001235s ]

[ 2016-06-06T10:56:35+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000025s ]
INFO: [ app_init ] --END-- [ RunTime:0.000665s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000838s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000943s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0038s ]
SQL: UPDATE `sc_message` SET `title`='理解Javascript事件驱动编程机制，以及window.onload的理解，以及异步，同步，阻塞，非阻塞的概念',`content`='<span style=\"color:#E53333;\"><strong>事件驱动式：</strong></span>当用户的行为（点击、移动）会被Javascript系统所捕获，并执行相应的事件处理程序，我们把这个过程就称之为事件驱动式。<br />
<span style=\"color:#E53333;\"><strong>window.onload</strong></span> 是javaScript 的页面加载完成事件，当一个Web页面加载完成后就会触发执行window.onload 里的代码，一般可以用这个事件做一些页面数据初始化之类的工作。<br />
<br />
<span></span>
<p>
	<span style=\"color:#E53333;\"><em><strong>同步与异步描述的是一种行为方式，阻塞与非阻塞描述的是一种状态</strong></em></span>
</p>
<span style=\"color:#E53333;\"><strong>异步：</strong></span>代码执行不按顺序，‘跳过’执行，待其他某些代码执行完后，再来执行，称为“异步”，例如：定时器，ajax。<br />
<span style=\"color:#E53333;\"><strong>同步：</strong></span>代码依次执行。<br />
<span style=\"color:#E53333;\"><strong>阻塞：</strong></span>同步时，因为它们在数据由内核空间复制回进程缓冲区时都是阻塞的(不能干别的事)<br />
<span style=\"color:#E53333;\"><strong>非阻塞：</strong></span>异步时，即在1数据准备完成、2由内核空间拷贝回缓冲区后 通知进程，在等待通知的这段时间里可以干别的事。<br />
<div>
	<br />
</div>' WHERE `id` = 46 [ RunTime:0.0582s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000107s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000261s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013918s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014078s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000911s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001042s ]

[ 2016-06-06T10:56:48+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000037s ]
INFO: [ app_init ] --END-- [ RunTime:0.001266s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001305s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001493s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0063s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 46  [ RunTime:0.0007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000297s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000524s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015806s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015966s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000901s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001050s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001841s ]
INFO: [ app_end ] --END-- [ RunTime:0.002011s ]

[ 2016-06-06T10:56:55+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/46
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000022s ]
INFO: [ app_init ] --END-- [ RunTime:0.000620s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001014s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001157s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0040s ]
SQL: UPDATE `sc_message` SET `title`='理解Javascript事件驱动编程机制，以及window.onload的理解，以及异步，同步，阻塞，非阻塞的概念',`content`='<span style=\"color:#E53333;\"><strong>事件驱动式：</strong></span>当用户的行为（点击、移动）会被Javascript系统所捕获，并执行相应的事件处理程序，我们把这个过程就称之为事件驱动式。<br />
<span style=\"color:#E53333;\"><strong>window.onload</strong></span> 是javaScript 的页面加载完成事件，当一个Web页面加载完成后就会触发执行window.onload 里的代码，一般可以用这个事件做一些页面数据初始化之类的工作。<br />
<br />
<span></span> 
<p>
	<span style=\"color:#E53333;\"><strong>同步与异步描述的是一种行为方式，阻塞与非阻塞描述的是一种状态</strong></span> 
</p>
<span style=\"color:#E53333;\"><strong>异步：</strong></span>代码执行不按顺序，‘跳过’执行，待其他某些代码执行完后，再来执行，称为“异步”，例如：定时器，ajax。<br />
<span style=\"color:#E53333;\"><strong>同步：</strong></span>代码依次执行。<br />
<span style=\"color:#E53333;\"><strong>阻塞：</strong></span>同步时，因为它们在数据由内核空间复制回进程缓冲区时都是阻塞的(不能干别的事)<br />
<span style=\"color:#E53333;\"><strong>非阻塞：</strong></span>异步时，即在1数据准备完成、2由内核空间拷贝回缓冲区后 通知进程，在等待通知的这段时间里可以干别的事。<br />
<div>
	<br />
</div>' WHERE `id` = 46 [ RunTime:0.0022s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000162s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008632s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008749s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000507s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000578s ]

[ 2016-06-06T11:42:52+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000025s ]
INFO: [ app_init ] --END-- [ RunTime:0.000772s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001172s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001295s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000072s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000189s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011668s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011788s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000629s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000701s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000845s ]
INFO: [ app_end ] --END-- [ RunTime:0.000917s ]

[ 2016-06-06T11:59:08+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000028s ]
INFO: [ app_init ] --END-- [ RunTime:0.000815s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000906s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000999s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0053s ]
SQL: INSERT INTO `sc_message` (`title`,`content`) VALUES ('PHP5 中魔术方法函数有哪几个，请举例说明各自的用法','__sleep serialize之前被调用<br />
<br />
__wakeup unserialize时被调用<br />
<br />
__toString打印一个对象时被调用<br />
<br />
__set_state调用var_export时被调用，用__set_state的返回值作为var_export的返回值<br />
<br />
__construct构造函数，实例化对象时被调用<br />
<br />
__destruct析构函数，当对象销毁时被调用<br />
<br />
__call对象调用某个方法，若存在该方法，则直接调用，若不存在，则调用__call函数<br />
<br />
__get读取一个对象属性时，若属性存在，则直接返回，若不存在，则调用__get函数<br />
<br />
__set设置一个对象的属性时，若属性存在，则直接赋值，若不存在，则调用__set函数<br />
<br />
__isset检测一个对象的属性是否存在时被调用<br />
<br />
__unset unset一个对象的属性时被调用<br />
<br />
__clone克隆对象时被调用<br />
<br />
__autoload实例化一个对象时，如果对应的类不存在，则该方法被调用<br />') [ RunTime:0.0021s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000077s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000198s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.009330s ]
INFO: [ view_parse ] --END-- [ RunTime:0.009438s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000677s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000750s ]

[ 2016-06-06T11:59:09+08:00 ] 127.0.0.1 /index.php/Admin/Index/index.html
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000031s ]
INFO: [ app_init ] --END-- [ RunTime:0.000651s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000892s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001007s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000288s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000569s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014798s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014941s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000666s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000742s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000976s ]
INFO: [ app_end ] --END-- [ RunTime:0.001063s ]

[ 2016-06-06T11:59:27+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/47
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000033s ]
INFO: [ app_init ] --END-- [ RunTime:0.000921s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000983s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001093s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0065s ]
SQL: SELECT * FROM `sc_message` WHERE `id` = 47  [ RunTime:0.0003s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000184s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000335s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011819s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011956s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001341s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001503s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.001524s ]
INFO: [ app_end ] --END-- [ RunTime:0.001688s ]

[ 2016-06-06T12:00:44+08:00 ] 127.0.0.1 /index.php/admin/index/edit/id/47
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000065s ]
INFO: [ app_init ] --END-- [ RunTime:0.001438s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.001545s ]
INFO: [ app_begin ] --END-- [ RunTime:0.001771s ]
SQL: SHOW COLUMNS FROM `sc_message` [ RunTime:0.0054s ]
SQL: UPDATE `sc_message` SET `title`='PHP5 中魔术方法函数有哪几个，请举例说明各自的用法',`content`='__sleep serialize序列化之前被调用<br />
<br />
__wakeup unserialize反序列化时被调用<br />
<br />
__toString将一个对象当作字符串输出时被调用<br />
<br />
__set_state调用var_export时被调用，用__set_state的返回值作为var_export的返回值<br />
<br />
__construct构造函数，实例化对象时被调用<br />
<br />
__destruct析构函数，当对象销毁时被调用<br />
<br />
__call对象调用某个方法，若存在该方法，则直接调用，若不存在，则调用__call函数<br />
<br />
__get读取一个对象属性时，若属性存在，则直接返回，若不存在，则调用__get函数<br />
<br />
__set设置一个对象的属性时，若属性存在，则直接赋值，若不存在，则调用__set函数<br />
<br />
__isset检测一个对象的属性是否存在时被调用<br />
<br />
__unset unset一个对象的属性时被调用<br />
<br />
__clone克隆对象时被调用<br />
<br />
__autoload实例化一个对象时，如果对应的类不存在，则该方法被调用<br />' WHERE `id` = 47 [ RunTime:0.0539s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000200s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000519s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.024155s ]
INFO: [ view_parse ] --END-- [ RunTime:0.024500s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.001372s ]
INFO: [ view_filter ] --END-- [ RunTime:0.001634s ]

[ 2016-06-06T19:26:52+08:00 ] 127.0.0.1 /index.php/admin
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000019s ]
INFO: [ app_init ] --END-- [ RunTime:0.000399s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000884s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000977s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000153s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000350s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011763s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011915s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000797s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000893s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000678s ]
INFO: [ app_end ] --END-- [ RunTime:0.000756s ]

