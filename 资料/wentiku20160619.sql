-- MySQL dump 10.13  Distrib 5.5.27, for Win32 (x86)
--
-- Host: localhost    Database: wentiku
-- ------------------------------------------------------
-- Server version	5.5.27

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `sc_category`
--

DROP TABLE IF EXISTS `sc_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sc_category` (
  `cat_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT '类别Id',
  `cat_name` varchar(30) NOT NULL COMMENT '分类名称',
  `parent_id` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT '上级分类的Id',
  PRIMARY KEY (`cat_id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sc_category`
--

LOCK TABLES `sc_category` WRITE;
/*!40000 ALTER TABLE `sc_category` DISABLE KEYS */;
INSERT INTO `sc_category` VALUES (1,'MYSQL',0),(2,'HTML',0),(4,'PHP核心技术',0),(5,'PHP典型技术及应用',0),(6,'面向对象',0),(7,'MVC思想',0),(8,'Smarty',0),(9,'SVN版本控制',0),(10,'XML与AJAX',0),(11,'ThinkPHP框架',0),(12,'Linux',0),(13,'大型网站优化',0),(14,'Redis',0),(15,'Javascript',0),(17,'常见的面试题',0);
/*!40000 ALTER TABLE `sc_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sc_message`
--

DROP TABLE IF EXISTS `sc_message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sc_message` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL COMMENT '内容',
  `title` varchar(300) DEFAULT NULL,
  `cat_id` smallint(5) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=183 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sc_message`
--

LOCK TABLES `sc_message` WRITE;
/*!40000 ALTER TABLE `sc_message` DISABLE KEYS */;
INSERT INTO `sc_message` VALUES (1,'<p>\r\n	<span style=\"line-height:1.5;\">php：缩写：Personal Home Page ==&gt;&gt;PHP：HypeText Preprocessor</span>\r\n</p>\r\n<p>\r\n	命令行脚本：<br />\r\n运行php文件：php.exe &nbsp;-f &nbsp;\"php文件路径\"<br />\r\n运行php代码：php.exe &nbsp;-r &nbsp;\"php脚本代码\"<br />\r\n直接运行php代码：形式：php.exe &nbsp;-r &nbsp;\"php脚本代码\"<br />\r\nweb软件的运行模式中，总是先在客户端（浏览器端），发起一个“请求”，然后，服务器端才产生反馈动作（就是“运行”程序），并因此而返回给该浏览器一定的信息——就是应答（响应）；<br />\r\n<span style=\"color:#E53333;\">配置apache 以运行php程序：</span><br />\r\n分2步：<br />\r\n第一步：装载php“模块”——其实就是指php语言包中的一个文件而已！<br />\r\nA：首先，我们将php语言模块，拷贝到计划的目录中来：<br />\r\nB：打开apache的配置文件：apache安装位置/ conf / httpd.conf<br />\r\n//需要给出php5apache2_2.dll的完整路径<br />\r\n131 ： LoadModule php5_module \"....amp/php/php5apache2_2.dll\"<br />\r\n第二步：告知apache，凡是“.php”后缀文件找php语言模块，这里称（application/x-httpd-php）<br />\r\n136行：AddType &nbsp;application/x-httpd-php &nbsp;.php &nbsp;.pap &nbsp;.phtml<br />\r\n然后重启apache<br />\r\n检测apache的配置语法的命令：<br />\r\n命令所在位置：apache安装位置/bin/httpd.exe<br />\r\n命令使用方式：httpd.exe &nbsp;-t<br />\r\n如果配置文件httpd.conf没有语法错误，就返回： syntax &nbsp;OK<br />\r\n用法1：强行拖入法<br />\r\n用法2：配置环境变量法：<br />\r\n在path路径中加入刚才httpd.exe文件所在的完整目录路径，注意使用英文分号（;）跟以前的内容分开<br />\r\n<span style=\"color:#E53333;\">php的配置：</span><br />\r\n时区配置：<br />\r\nphp的配置文件位置：php语言包/php.ini<br />\r\n第一步：<br />\r\n查找关键字：timezone:<br />\r\n修改为 date.timezone = PRC<br />\r\n第二步：<br />\r\n在apache的配置文件（httpd.conf)中，设置php.ini文件的路径（位置）：<br />\r\n143行-------&gt; &nbsp;PHPIniDir &nbsp;\"....../amp/php\" &nbsp;//此时不要写php.ini文件名，只要目录<br />\r\n然后重启apache；<br />\r\nphp的模块配置：<br />\r\n第一步：<br />\r\n在php.ini文件中，设定php模块所在的路径（查找关键字extension_dir)：<br />\r\nextension_dir = \"......./amp/php/ext\"<br />\r\n第二步：<br />\r\n“打开”mysql这个模块就可以了（查找关键字php_mysql.dll）：<br />\r\n将extension=php_mysql.dll 打开，然后，重启apache<br />\r\n<span style=\"color:#E53333;\">分布式权限配置：</span>就是针对某个网站的任何一个下级目录，都可以单独去设置其访问权限，并且可以不重启apache就生效。<br />\r\n第1步：<br />\r\n在该站点对应目录权限的Directorty配置中添加一条：<br />\r\nAllowOverride &nbsp;all &nbsp; &nbsp;//表示当前目录，允许“分布式”权限配置<br />\r\n第2步：<br />\r\n在该目录下的任何子目录中，创建一个特殊的文件（ .htaccess ），在该文件中写所需要的“权限内容”：<br />\r\nDeny &nbsp;from &nbsp;all<br />\r\nAllow from 192.168.3.4<br />\r\n然后访问站点路径，将会报错：Forbidden\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>','如何配置apache和php？',4),(2,'<span>PHP</span><span>是一个基于服务端来创建动态网站的脚本语言，您可以用</span><span>PHP</span><span>和</span><span>HTML</span><span>生成网站主页。</span>它大量地借用C、Java和Perl语言的语法并耦合PHP自己的特性，使WEB开发者能够快速地写出动态生成页面。它支持目前绝大多数的数据库。还有一点，PHP是完全免费的，不用花钱，你可以从PHP官方站点http://www.php.net上自由下载。而且你可以不受限制地获得源码，甚至可以从中加进你自己需要的。\r\n<p>\r\n	<br />\r\n</p>','什么是PHP？谈谈PHP的优缺点？',4),(3,'<span style=\"line-height:1.5;\">NameVirtualHost *:80</span><br />\r\n<span style=\"line-height:1.5;\">&lt;VirtualHost *:80&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; ServerName &nbsp;www.abc.com</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; DocumentRoot \"F:\\soft\\class\\php\"</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &lt;Directory \"F:\\soft\\class\\php\"&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Options Indexes</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Order Deny,Allow</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Allow From All</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &lt;/Directory&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&lt;/VirtualHost&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&lt;VirtualHost *:80&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; ServerName &nbsp;www.abc.com</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; DocumentRoot \"F:\\soft\\class\\php\"</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &lt;Directory \"F:\\soft\\class\\php\"&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Options Indexes</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Order Deny,Allow</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; Allow From All</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">DirectoryIndex &nbsp; &nbsp;index.php</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; #允许使用“分布式权限配置文件”</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; AllowOverride &nbsp;All</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &lt;/Directory&gt;</span><br />\r\n<span style=\"line-height:1.5;\">&lt;/VirtualHost&gt;</span><br />\r\n<span style=\"line-height:1.5;\">第130行：</span><br />\r\n<span style=\"line-height:1.5;\">#装载php“模块”--其实就是指php语言包中的一个文件而已！需要给出php5apache2_2.dll的完整路径</span><br />\r\n<span style=\"line-height:1.5;\">LoadModule php5_module \"F:/soft/phpsoft/php/php-5.3.13/php5apache2_2.dll\"</span><br />\r\n<span style=\"line-height:1.5;\">#告知apache，凡是\".php\"后缀文件，找php语言模块（这里称为application/x-httpd-php）</span><br />\r\n<span style=\"line-height:1.5;\">setHandler application/x-httpd-php</span><br />\r\n<span style=\"line-height:1.5;\">#第二步的另一个语法形式，作用相同，但更灵活一些</span><br />\r\n<span style=\"line-height:1.5;\">AddType &nbsp;application/x-httpd-php &nbsp;.php &nbsp;.pap &nbsp; .phtml</span><br />\r\n<span style=\"line-height:1.5;\">#让apache知道，php.ini的所在位置（此时不要写出php.ini的文件名，只要目录）：</span><br />\r\n<span style=\"line-height:1.5;\">phpIniDir \"F:\\soft\\PHPsoft\\php\\php-5.3.13\"</span><br />\r\n<br />\r\n<br />','apache虚拟主机如何配置？',4),(4,'错误处理：<br />\r\n通常分3种：<br />\r\n1，语法错误：<br />\r\n&nbsp; &nbsp; 程序在运行之前，都要先检查语法。如果语法有错误，就会立即报错，并且不会去执行程序<br />\r\n2，运行时错误：<br />\r\n&nbsp; &nbsp; &nbsp;就是在程序语法检查通过后，开始运行程序并在此过程中遇到的错误。<br />\r\n&nbsp; &nbsp; &nbsp;提示性错误：<br />\r\n&nbsp; &nbsp; &nbsp;警告性错误：<br />\r\n&nbsp; &nbsp; &nbsp;致命错误：<br />\r\n3，逻辑错误：<br />\r\n&nbsp; &nbsp; &nbsp;指程序本身可以正常执行，没有报错，但“计算结果”却出错了<br />\r\n<br />\r\n错误的分级：<br />\r\nphp语言中，将各种错误进行了不同级别的分类归纳，并形成了大约有10几个级别的错误，这就是技术层面的错误分级。<br />\r\n每一级别的错误，都有一个“代号”,这个代号其实也是一个系统内部的“常量而已”,比如：<br />\r\n系统常见错误：<br />\r\nE_ERROR: 致命错误<br />\r\nE_WARNING: 警告性错误<br />\r\nE_NOTICE: 提示性错误<br />\r\n<br />\r\n用户自定义的错误：<br />\r\nE_USER_ERROR: &nbsp; 自定义致命错误<br />\r\nE_USER_WARNING: &nbsp;自定义警告性错误<br />\r\nE_USER_NOTICE: &nbsp;自定义提示性错误<br />\r\n<br />\r\n其它：<br />\r\nE_STRICT: 严谨性语法检查错误<br />\r\nE_ALL: 代表“所有错误”<br />\r\n<br />\r\n错误的触发：<br />\r\n有两种方式会触发错误：<br />\r\n1、系统触发<br />\r\n程序运行到某行代码，确实出现了某种错误，此时系统就会报错<br />\r\nE_NOTICE: &nbsp; &nbsp; &nbsp;提示性错误 &nbsp; &nbsp; &nbsp; 会输出错误提示，并继续执行后续代码<br />\r\nE_WARNING: &nbsp;警告性错误 &nbsp; &nbsp; &nbsp; 会输出错误提示，并继续执行后续代码<br />\r\nE_ERROR： &nbsp; &nbsp; 致命错误 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 导致程序无法执行后续语句<br />\r\n<br />\r\n2、自定义触发：<br />\r\n当我们处理某些数据的时候，本来数据本身是没有错误的，但根据具体应用（业务）的需要，会要求数据满足某种条件，而该数据并不满足的时候，我们就可以在程序中“主动”去触发（创建）一个错误，以表明该数据的“非法性”。<br />\r\n主动触发用户错误：<br />\r\n语法格式：trigger_error(\"错误提示信息内容\" ，3种用户错误代号之一)；<br />\r\n其中触发了用户的致命错误(E_USER_ERROR）,也会终止程序的后续执行。<br />\r\n<br />\r\n错误报告的显示问题（display_erros）：<br />\r\n所谓错误报告，就是显示在网页上的错误提示内容!<br />\r\n有关错误报告，有2个问题需要处理：<br />\r\n一、是否显示错误报告（display_errors)：<br />\r\n有2种做法可以设定是否显示：<br />\r\n做法1：<br />\r\n在php.ini文件中，设定display_erros的值为on(显示)，off(不显示)<br />\r\n注意：前提条件是我们已经在apache中装载了php.ini文件，需要在apache的配置文件httpd.config中加入一行：<br />\r\nPHPIn &nbsp;“php.ini文件的了位置（路径）”<br />\r\n方法2：<br />\r\n直接在php的脚本文件中使用函数ini_set()来对其进行设置：<br />\r\nini_set(\"display_errors\",0); &nbsp;如果为1，就是显示。<br />\r\n注意：<br />\r\n1，不管哪种形式，该单词是一样的：display:errors<br />\r\n2，使用php.ini配置，影响的是全局（即所有php网页）；<br />\r\n3，在某个脚本代码中使用ini_set()设置，就只影响该脚本代码本身——这是常用的方式。<br />\r\n4，脚本中的设置优先于php.ini中的设置。<br />\r\n<br />\r\n二、显示哪些级别的错误报告(error_reporting);<br />\r\n显然，前提是“display_errors”设置为On(或1），表示可以显示。<br />\r\n显示哪些级别的错误报告，也有2个做法：<br />\r\n做法1：在php.ini文件中；<br />\r\nerror_reporting = E_ALL | E_STRICT<br />\r\n这个值目前代表“所有错误”，都显示<br />\r\n修改为： &nbsp;error_reporting = E_NOTICE<br />\r\n此时就只显示E_NOTICE级别的错误。<br />\r\n要想代表真正的“所有错误”，应该写为：E_ERROR | E_STRICT<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n错误日志的记录问题<br />\r\n错误日志其实就是错误报告，只是它会“写入文件中\"，此时就称为错误日志！<br />\r\n也有2个问题，每个问题也有2种做法：<br />\r\n一、是否记录(log_errors)：<br />\r\n1、php.ini中： log_errors = On &nbsp;或Off<br />\r\n2、脚本中：ini_set(\"log_erros\",1);或 0<br />\r\n补充一点： &nbsp;<br />\r\n1：ini_set(\"php配置项\",值); &nbsp; &nbsp; &nbsp; &nbsp; //用于脚本中设置php.ini中的某项值。<br />\r\n2：$v1 = ini_set(\"php配置项\"); &nbsp; //用于获取php.ini中是某项的值<br />\r\n<br />\r\n二、记录到哪里error_log：<br />\r\n一般就只有2个写法：<br />\r\n写法1：直接使用一个文件名，此时系统会自动在每个文件夹下都建立该文件名，并用其记录该文件夹下的所有网页文件发生的错误信息。<br />\r\nini_set(\"error_log\",\"my_error.txt\"); &nbsp;//记录到该文件，会自动生成my_error.txt文件<br />\r\n然后执行一个有错误的网页，可以观察到my_error.txt文件生成错误信息。<br />\r\n写法2：使用一个特殊的名字“syslog”，则此时所有错误信息都会记录到系统的“日志文件”中。系统日志文件在这里：控制面板》管理工具》事件查看器》window日志》应用程序：<br />\r\nini_set(\"error_log\",\"syslog\"); //记录到系统日志中<br />\r\n然后执行一个有错误的网页，并观察。<br />\r\n<br />\r\n自定义错误处理器：<br />\r\n就是指：<br />\r\n让系统不要去处理错误了，而完全由我们（开发者）来对错误进行处理：显示和记录。<br />\r\n做法分两步：<br />\r\n第一步：<br />\r\n设定要用于处理错误的函数名！<br />\r\nset_error_handler(“my_error_handler”);<br />\r\n第二步：<br />\r\n去定义该函数！<br />\r\nfunction my_error_handler($errCode,$errMsg,$errFile,$errLine){<br />\r\n//这里可以任意写代码：自然正常是去显示错误报告，和记录错误日志。<br />\r\n$str = \"\";<br />\r\n$str .= \"\r\n<p>\r\n	<span>程序出错啦！错误信息：</span>\";<br />\r\n$str .= \"<br />\r\n错误代号为：\" . $errCode;<br />\r\n$str .= \"<br />\r\n错误内容为：\" . $errMsg;<br />\r\n$str .= \"<br />\r\n错误文件为：\" . $errFile,<br />\r\n$str .= \"<br />\r\n错误行号为：\" . $errLine)<br />\r\n$str .= \"<br />\r\n发生时间为：\" . date(\"Y-d-m H:i:s\");<br />\r\n$str .= \"\r\n</p>\r\n\";<br />\r\necho $str; &nbsp; //输出该“构建”的错误完整处理结果<br />\r\n//也可以将该内容\"写入\"到某个文件中去，也就是所谓记录错误日志<br />\r\n//这涉及到文件操作，现在还无法做到<br />\r\n}<br />','PHP中的错误处理及错误级别',4),(5,'<span style=\"font-family:Simsun;font-size:medium;line-height:normal;\"><php  header(\"location:目标文件.php?a=\"1&amp;b=xyz&amp;cc=cctv\" );<=\"\" span\"=\"\"><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">关于history和location跳转的区别：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">href=\"javascript:history.go(-2)\";</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">href=\"javascript:location.href=\'error.php\'\";</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">这两个都可以实现跳转，history是实现前进和后退（返回）功能，属性为go(n);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">而location的对象属性为href，跳转到错误页面</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:normal;\"><span style=\"line-height:1.5;\">-------------------------------------------------------------------------------</span><span></span></span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">一般从数据库中删除的数据都是指定字段为id的记录，创建onclick事件函数进行删除</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">常用的删除函数：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">function delform(id)</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;if(window.confirm(\"你确定要删除吗？\"))</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;{</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.href = \"delete.php?id=\"+id;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}&nbsp;</span><br />\r\n<br />\r\n</span>','关于history和location跳转的二者的区别？JS点击删除时的通用代码？',15),(6,'1、在控制器中实例化一个模型类，然后由模型中的类中的方法完成<br />\r\n&nbsp; &nbsp; &nbsp;控制器决定要什么数据，而所有和数据库有关的操作全部由模型去完成<br />\r\n&nbsp; &nbsp; &nbsp;模型不仅仅生产数据，它还可以构建sql语句，调用数据库中的方法，接收由数据库返回来的数据结果，然后再将结果return返回给控制器<br />\r\n2、模型类工厂的实现：使用数组的下标？？？<br />\r\n&nbsp; &nbsp; &nbsp;这是由控制器文件在实例化一个静态对象的时候传的参数决定的，这里传的参数是模型中的类名，它是一个可变类<br />\r\n3、注意：表单中action=\"?a=$a&amp;b=$b\"后面\'？\'问号提交的数据是GET方式<br />\r\n4、html跳转：<br />\r\n&nbsp; &nbsp; &nbsp;在基础控制器类中的跳转：header(\"refresh:$time; url=$url\");<br />\r\n5、请求分发器--在点击产品列表时，报错，BaseController无法使用或访问，<br />\r\n&nbsp; &nbsp; &nbsp;解决办法：将视图中的“产品列表”中的<a>链接的地址改为\'？\'，表示要跳转的页面为index.php页面，同时要注意？后面参数为c=Product，<br />\r\n&nbsp; &nbsp; &nbsp;当在“产品列表”页面点击“用户列表”时，此时连接地址仍然是\'？\'同时传递给分发器index.php的参数为\'c\'=User，表示要调取的是用户模型和用户控制器<br />\r\n&nbsp; &nbsp; &nbsp;当点击index.php时，默认的$c=User，此时默认自动调取用户模型和用户控制器，同时加载并显示用户列表<br />\r\n6、index.php主要是确定加载哪个平台(p)的 哪个控制器(c)中的 哪个动作(a)<br />\r\n<br />\r\n</a>','有关mvc的一些总结',7),(7,'有关函数的编程思想：<br />\r\n<span style=\"color:#E53333;\">递归思想：——递归函数</span><br />\r\n就是在一个函数内部调用它自己的函数。<br />\r\n递归思想总结：<br />\r\n当面对一个“大问题”，该大问题可以经由该问题的同类问题的“小一级问题”而经过简单计算获得，<br />\r\n而且，可以获知（已知）这类问题的“最小一级问题”的答案。则此时就可以使用递归方法来解决该问题。<br />\r\n此时该函数的基本模式是：<br />\r\nfunction &nbsp;digui( $n ){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(是最小一级){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 已知的答案；<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;$jieguo = 对 digui($n-1) 进行简单运算；<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;return $jieguo;<br />\r\n}<br />\r\n<br />\r\n<span style=\"color:#E53333;\">递推（迭代）思想</span><br />\r\n如果要求一个“大问题”，且该问题有如下2个特点：<br />\r\n1，已知该问题的同类问题的最小问题的答案。<br />\r\n2，如果知道这种问题的小一级问题的答案，就可以轻松求得其“大一级”问题的答案，并且此问题的级次有一定的规律；<br />\r\n则此时就可以使用递推思想来解决该问题，代码模式为：<br />\r\n$qian = 已知的最小一级问题的答案；<br />\r\nfor( $i = 最小一级的下一级； &nbsp;$i &lt;= 最大一级的级次； ++$i）{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;$jieguo = 对 $qian 进行一定的计算，通常需要使用到$i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;$qian = $jieguo;<br />\r\n}<br />\r\necho &nbsp;“结果为：” &nbsp;. &nbsp;$jieguo;<br />\r\n通常，如果一个问题，既能使用递归算计解决，又能使用递推算法解决，则应该使用递推算法。<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />','递归思想和递推思想',4),(8,'<span style=\"line-height:1.5;\">在使用PHP的PDO扩展插入数据的时候，有时候需要获取到最后插入记录的ID作为返回信息。要怎么才能实现这个需求呢？</span><br />\r\n<span style=\"line-height:1.5;\">使用PDO的lastInsertId函数。</span><br />\r\n<span style=\"line-height:1.5;\">但是在使用的过程中发现有时候lastInsertId函数返回的是0。为什么会这样呢？</span><br />\r\n<span style=\"line-height:1.5;\">来看看lastInsertId函数在 PHP手册 上的说明。</span><br />\r\n<span style=\"line-height:1.5;\">返回最后插入行的ID或序列值。</span><br />\r\n<span style=\"line-height:1.5;\">那么lastInsertId什么情况下会返回0呢？</span><br />\r\n<span style=\"line-height:1.5;\">查看mysql手册</span><br />\r\n<span style=\"line-height:1.5;\">翻开mysql手册，在 这里 找到这一段：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_insert_id() returns the value stored into an AUTO_INCREMENT column, whether that value is automatically generated by storing NULL or 0 or was specified as an explicit value. LAST_INSERT_ID() returns only automatically generated AUTO_INCREMENT values. If you store an explicit value other than NULL or 0, it does not affect the value returned by LAST_INSERT_ID().</span><br />\r\n<span style=\"line-height:1.5;\">结论：</span><br />\r\n<span style=\"line-height:1.5;\">从手册的描述可以知道，mysql_insert_id 函数返回的是储存在有AUTO_INCREMENT约束的字段的值，如果表中的字段不使用 AUTO_INCREMENT 约束或者使用自己生成的唯一值插入，那么该函数不会返回你所存储的值，而是返回NULL或0。因此，在没有使用AUTO_INCREMENT约束的表中，或者ID是自己生成的唯一ID，lastInsertId函数返回的都是0。</span><br />\r\n<div>\r\n	<br />\r\n</div>','PDO中lastInsertId()函数返回0的原因？',1),(9,'<p>\r\n	<span><span style=\"line-height:1.5;background-color:#FFE500;\">类常量：</span></span><span><br />\r\n<span style=\"line-height:1.5;\">定义形式：const 常量名 = 常量值；const P1 = 1;&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">使用形式：类名：：常量名；$v1=C1::P1</span><br />\r\n<span style=\"line-height:1.5;\">定义类常量不能使用define()</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">普通属性（实例属性）：</span><br />\r\n<span style=\"line-height:1.5;\">定义形式：public $属性名 = 初始值；</span><br />\r\n<span style=\"line-height:1.5;\">使用形式：$对象-&gt;属性名；</span><br />\r\n<span style=\"line-height:1.5;\">$v1 = $对象-&gt;属性名；//赋值</span><br />\r\n<span style=\"line-height:1.5;\">echo $对象-&gt;属性名； //输出</span><br />\r\n<span style=\"line-height:1.5;\">相当于 obj1.style.border=\"red\";</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">静态属性：</span><br />\r\n<span style=\"line-height:1.5;\">定义形式：static $属性名 = 初始值；</span><br />\r\n<span style=\"line-height:1.5;\">使用形式：类名：：$静态属性名；</span><br />\r\n<span style=\"line-height:1.5;\">注意：</span><br />\r\n<span style=\"line-height:1.5;\">静态属性，他不属于任何一个对象，而只属于该类本身，</span><br />\r\n<span style=\"line-height:1.5;\">也可以理解为该类的所有对象所共有的数据</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">普通方法（实例方法）：</span><br />\r\n<span style=\"line-height:1.5;\">function 方法名(形参1，形参2，.... ){//方法体。。。}</span><br />\r\n<span style=\"line-height:1.5;\">调用形式：$对象名-&gt;方法名(实参1，实参2，....）；</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">静态方法：</span><br />\r\n<span style=\"line-height:1.5;\">static function 方法名(形参1，形参2，.... ){//方法体。。。}</span><br />\r\n<span style=\"line-height:1.5;\">调用形式：类名：：方法名(实参1，实参2，....）；</span><br />\r\n<span style=\"line-height:1.5;\">静态属性和方法，在类被调用时创建。类被调用，是指类被创建或者类中的任何静态成员被调用。</span><br />\r\n<span style=\"line-height:1.5;\">静态方法不需要所在类被实例化就可以直接使用。</span><br />\r\n<span style=\"line-height:1.5;\">使用的方式是 类名：：静态方法名</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">构造方法私有化：</span><br />\r\n<span style=\"line-height:1.5;\">private function __construct(){}</span><br />\r\n</span>\r\n</p>\r\n<p>\r\n	<span></span><span></span><span></span> \r\n</p>\r\n<span></span>','面向对象中的属性和方法有哪些？如何使用它们？',6),(10,'<span><span>权限的英文字母表示法：</span></span><span style=\"color:#E53333;\"><strong><br />\r\n&nbsp;r：读取权限，数字代号为\"4\"。&nbsp;</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>　w：写入权限，数字代号为\"2\"。&nbsp;</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>　x：执行或切换权限，数字代号为\"1\"。&nbsp;</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>　-：不具任何权限，数字代号为\"0\"。&nbsp;</strong></span><br />\r\n除了字符，也可以使用数字来设置权限。想知道是如何工作的，看以下例子：<br />\r\n<span>execute=1</span><br />\r\n<span>write=2</span><br />\r\n<span>read=4</span><span style=\"color:#E53333;\">&nbsp;</span><span></span><br />\r\n<span style=\"color:#E53333;\"><strong>对于指定的三种不同用户级别总结如下:</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>0 ＝ 没有任何权限 （不能读，不能写，不能执行） （常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>1 ＝ 只能执行 （看起来不太常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>2 ＝ 只能写 （看起来不太常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>3 ＝ 只能写和执行 （看起来不太常见<span></span>）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>4 ＝ 只读 （常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>5 ＝ 只读和执行 （常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>6 ＝ 读和写 （常见）</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>7 ＝ 读，写和执行 （常见）</strong></span><br />\r\n要给三个不同的用户级别设置访问权限，只需要把三个数字粘在一起就可以了。举例:<br />\r\nchmod 770 junk<br />\r\n将给文件拥有者和所属用户组所有权限（读，写和执行），而对于其他用户没有任何权限。<br />\r\nchmod 666 junk<br />\r\n将给所有用户（文件拥有者，所属用户组，其他用户）读写权限，但是没有执行权限。请注意这个<br />\r\n666 权限设置里会经常用到，有人认为这是整个Linux（或者其他Unix 里）的精髓所在。<br />\r\nchmod 411 junk<br />\r\n将给文件拥有者以只读权限，对于所属用户组和其他用户只有执行权限。这个看起来好像没什么实<br />\r\n际用处，但是对于北美的Linux 用户可能会感到很有趣，因为411 电话号码是他们用来获得电话号<br />\r\n码查号帮助的。<br />\r\n文件访问权限的数字表示法叫做“八位组”因为是基于八进制的（我们的日常计数系统是基于十进<br />\r\n制）。八进制有八个数值从0 到7，最大数字是7。对应的，十进制有十个数字从0 到9，最大数<br />\r\n字是9。八进制表示法对于二进制的文件权限表示法的确非常方便，每一个标志都可以通过设置成<br />\r\n0 或者1 来表示“允许”或者“不允许”，如以下的例子：<br />\r\n<strong><span style=\"color:#E53333;\">用户级别： 文件拥有者 用户组 其他用户</span></strong><br />\r\n<span style=\"color:#E53333;\"><strong>权限设置例子 rwx rw- r--</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong> 缺省权限 --- --x - wx</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>权限的二进制表示法 111 110 100</strong></span><br />\r\n<span style=\"color:#E53333;\"><strong>权限的八进制表示法 7 &nbsp; 6 &nbsp; 4</strong></span><br />','文件权限的表示法及含义',5),(11,'<span style=\"line-height:1.5;color:#E53333;\">查看本机IP地址的方法：</span><br />\r\n<span style=\"line-height:1.5;\">ipconfig &nbsp; 或者网络/本地连接/详细信息查看</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">查看本机网卡MAC物理地址的方法：</span><br />\r\n<span style=\"line-height:1.5;\">ipconfig/all</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">查看域名对应的IP地址方法：</span><br />\r\n<span style=\"line-height:1.5;\">ping www.baidu.com</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">什么是DNS，主要作用是什么？</span><br />\r\n<span style=\"line-height:1.5;\">域名解析服务，主要用来解析域名，将域名解析为对应的IP地址，然后使得计算机识别（计算机只能识别二进制）</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">本机的域名是什么？对应的IP是多少？</span><br />\r\n<span style=\"line-height:1.5;\">localhost	对应的IP是 127.0.0.1</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">php是基于b/s模式还是c/s模式？</span><br />\r\n<span style=\"line-height:1.5;\">php属于b/s模式 &nbsp;因为php是服务器端脚本</span><br />\r\n<span style=\"line-height:1.5;\">b/s &nbsp; b指的是broswer (浏览器) &nbsp;/s指的服务器 server &nbsp;如所有的网站</span><br />\r\n<span style=\"line-height:1.5;\">c/s &nbsp;c指client 客户端 /s 指服务器 &nbsp; &nbsp; &nbsp;如QQ</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">查看端口指令：</span>netstat -ano</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">检测apache的httpd.conf文件错误位置：</span>httpd –t</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">开启apache指令：</span>net start apache2.2&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">关闭apache指令：</span>net stop apache2.2&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\"></span><br />','cmd下有关apache的指令、查看端口指令以及PHP中有关IP、DNS、域名和MAC地址的相关问题？',4),(12,'Javascript中void是一个操作符，该操作符指定要计算一个表达式但是不返回值。<br />\r\nvoid 操作符用法格式如下：<br />\r\n1. javascript:void (expression)<br />\r\n2. javascript:void expression<br />\r\nexpression 是一个要计算的 Javascript 标准的表达式。表达式外侧的圆括号是可选的，但是写上去是一个好习惯。<br />\r\n你可以使用 void 操作符指定超级链接。表达式会被计算但是不会在当前文档处装入任何内容。<br />\r\n下面的代码创建了一个超级链接，当用户以后不会发生任何事。<br />\r\n当用户链接时，void(0) 计算为0，但 Javascript 上没有任何效果。<br />\r\n<span></span><a href=\"javascript:void(0)\"></a>&lt;a href=javascript:void(0)<!-- a--><strong>&nbsp;</strong>&gt;单此处什么也不会发生&lt;/a&gt;<br />\r\n<span style=\"color:#E53333;\"><strong>a href= # 与 a href=javascript:void(0) 的区别：</strong></span><br />\r\n<span style=\"color:#E53333;\">#</span>包含了一个位置信息<br />\r\n默认的锚是#top 也就是网页的上端<br />\r\n而javascript:void(0) &nbsp;仅仅表示一个死链接<br />\r\n这就是为什么有的时候页面很长，浏览链接明明是#，但还是跳到了页首<br />\r\n而javascript:void(0) 则不是如此，所以调用脚本的时候最好用void(0)<br />\r\n<br />','Javascript中的 void 运算符',15),(13,'在写查询语句的时候，有一条 Select 语句没有加 “Order By”，返回的数据是不确定的。<br />\r\n那么如果Select 语句如果不加 “Order By”， MySQL会怎么排序呢？<br />\r\n对于 MyISAM 表<br />\r\nMySQL Select 默认排序是按照物理存储顺序显示的。（不进行额外排序）.<br />\r\n也就是说 SELECT * FROM tbl – 会产生“表扫描”。如果表没有删除、替换、更新操作，记录会显示为插入的顺序。<br />\r\nInnoDB 表<br />\r\n同样的情况，会按主键的顺序排列。再次强调，这只是潜规则，不靠谱的。<br />\r\n<br />\r\n理解与推测：<br />\r\n“Select” 不加 “Order by”时， MySQL 会尝试以尽可能快的方法（MySQL 实际的方法不见得快）返回数据。<br />\r\n由于访问主键、索引大多数情况会快一些（在Cache里）所以返回的数据有可能以主键、索引的顺序输出，<br />\r\n这里并不会真的进行排序，主要是由于主键、索引本身就是排序放到内存的，所以连续输出时可能是某种序列。<br />\r\n在一些情况下消耗硬盘寻道时间最短的数据会先返回。<br />\r\n如果只查询单个表，在特殊的情况下是有规律的。<br />\r\n<br />\r\n总结：<br />\r\n不能依赖 MySQL 的默认排序<br />\r\n如果你想排序，总是加上 Order By<br />\r\n对于MYISAM表MySQL Select 默认排序是按照物理存储顺序显示的。<br />\r\n对于InnoDB表，则会按主键的顺序排列。<br />\r\n默认mysql会以索引进行排序，但并不意味着它一定会返回有规律的数据格式，在一些情况下消耗硬盘寻道时间最短<br />\r\n的数据会先返回，因此如果想要排序的话，Order by 是必须要加的，如果想更深入地了解mysql内部的排序规则，只<br />\r\n能看看Mysql的源代码了。<br />','MySQL默认的排序规则',1),(14,'<p>\r\n	<span style=\"line-height:1.5;\"> </span> \r\n</p>\r\n<p>\r\n	<span></span><span style=\"color:#E53333;line-height:1.5;\"><strong>什么是Unicode。</strong></span><br />\r\n<span style=\"line-height:1.5;\"> Unicode的基本目标是统一所有的编码，即它包含所有的字符集。这样只要一个系统支持Unicode，那么，就能处理这些字符集。一般Unicode有两个字节。现在的windows操作系统都是支持Unicode的。&nbsp;</span><br />\r\n<strong><span style=\"color:#E53333;line-height:1.5;\">什么是UTF8呢？</span></strong><br />\r\n<span style=\"line-height:1.5;\"> UTF8 == Unicode Transformation Format -- 8 bit&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 是Unicode传送格式。即把Unicode文件转换成BYTE的传送流。UTF8是一种Unicode编码，即它的编码的字符集和Unicode是一致的。但编码的方式不一样。对于英文字符来讲，UTF8的编码和一般的一样，用到一个字节。但对于中文来讲，那么要用三个字节表示。</span><br />\r\n<span style=\"line-height:1.5;\"> 网页编码英文译为web page encoding，是在网页中指定其特定的字符编码格式的库。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> GBK：是国家标准GB2312基础上扩容后兼容GB2312的标准。GBK的文字编码是用双字节来表示的，即不论中、英文字符均使用双字节来表示，为了区分中文，将其最高位都设定成1。GBK包含全部中文字符，是国家编码，通用性比UTF8差，不过UTF8占用的数据库比GBK大。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> UTF-8：Unicode TransformationFormat-8bit，允许含BOM，但通常不含BOM。是用以解决国际上字符的一种多字节编码，它对英文使用8位（即一个字节），中文使用24为（三个字节）来编码。UTF-8包含全世界所有国家需要用到的字符，是国际编码，通用性强。UTF-8编码的文字可以在各国支持UTF8字符集的浏览器上显示。如果是UTF8编码，则在外国人的英文IE上也能显示中文，他们无需下载IE的中文语言支持包。&nbsp;UTF-8版本虽然具有良好的国际兼容性，但中文需要比GBK/BIG5版本多占用50%的数据库存储空间，因此并非推荐使用，仅供对国际兼容性有特殊要求的用户使用。简单地说：对于中文较多的网站，适宜用GBK编码节省数据库空间。对于英文较多的网站，适宜用UTF-8节省数据库空间。&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>GBK、GB2312等与UTF8如何转换？</strong></span><br />\r\n<span style=\"line-height:1.5;\"> GBK、GB2312等与UTF8之间都必须通过Unicode编码才能相互转换：GBK、GB2312——Unicode——UTF8；UTF8——Unicode——GBK、GB2312。使用Windows记事本的“另存为”，可以在GBK、Unicode、Unicode big endian和UTF-8这几种编码方式间相互转换。&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>如何让浏览器正确识别网页编码？</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 一般在网页中都要有如下一句：，指示此网页的字符集编码是GB2312。（或者UTF-8）&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>页面有时候指定了编码为什么有时会出现乱码？</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 这可能是页面申明编码与文件本身编码不一致，更多时候是以错误编码打开页面然后保存导致的，或者是用某些FTP软件直接在线修改文件，由于软件编码配置错误而导致转换错了编码。这时候使用window的记事本打开，用“另存为”保存为对应的编码即可解决问题。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 在windows操作系统上使用IE作为浏览器时，常常会发生这样的问题：在浏览使用UTF-8编码的网页时，浏览器无法自动识别该页面所用的编码，即使网页已经声明过编码格式：，由此造成某些含有中文UTF-8编码的页面产生空白输出。</span><br />\r\n<span style=\"line-height:1.5;\"> 如果使用的是Firefox、Sarafi的浏览器这不会造成这个问题。这是由于IE解析网页编码时以HTML内的标签优先，而后才是HTTP header内的讯息，而mozilla系列的浏览器则刚刚相反。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 由于UTF-8为3个字节表示一个汉子，而普通的GB2312或BIG5是两个。页面输出时，由于上述原因，使浏览器解析、输出的内容时，如果在前有奇数个全角字符，IE把UTF-8当作两个字节解析时出现半个汉字的情况，这时该半个汉字会和的&lt;结合成一个乱码字，导致IE无法读完部分，使整个页面为空百输出，而这个时候如果察看源文件的话，会发现实际上整个页面全部已经输出了，但浏览器不显示内容。最简单的解决办法是把放在之前。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">注意的是unicode一个中文字符占2个字节，而UTF-8一个中 文字符占3个字节）。从unicode到uft-8并不是直接的对</span><span style=\"color:#E53333;line-height:1.5;\">应，而是要过一些算法和规则来转换。</span><span style=\"line-height:1.5;\">&nbsp;</span><span style=\"color:#E53333;\"></span><span style=\"color:#E53333;\"></span> \r\n</p>\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160605/20160605174210_59573.png\" alt=\"\" />','有关字符编码的问题',4),(15,'<p>\r\n	这句话的意思是第一行数据的Prices列的数据被截断，\r\n</p>\r\n<p>\r\n	应该是你的数据长度过长，检查下你数据库表中Prices的数据类型和精度，\r\n</p>\r\n<p>\r\n	如果第一行的数据超过了表中的设置，就会出现这种情况，比较好的办法是把表中Prices的数据长度改长点&nbsp;\r\n</p>','Data truncated for column \'Prices\' at row 1怎么解决？',1),(16,'where 1=1; 这个条件始终为True，在不定数量查询条件情况下，1=1可以很方便的规范语句。<br />\r\n如果用户在多条件查询页面中，不选择任何字段、不输入任何关键词，那么，必将返回表中所有数据；<br />\r\n如果用户在页面中，选择了部分字段并且输入了部分查询关键词，那么，就按用户设置的条件进行查询。<br />\r\n其实，where 1=1的应用，不是什么高级的应用，也不是所谓的智能化的构造，<br />\r\n仅仅只是为了满足多条件查询页面中不确定的各种因素而采用的一种构造一条正确能运行的动态SQL语句的一种方法。<br />\r\nwhere 1=0; 这个条件始终为false，结果不会返回任何数据，只有表结构，可用于快速建表<br />','SQL语句中的where 1=1详解',1),(17,'<span style=\"color:#E53333;line-height:1.5;\"><strong>插入数据：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> insert 【into】 表名 【(字段名1，字段名2，......)】 values(值表达式1，值表达式2，.......)，(........)，.....;</span><br />\r\n<span style=\"line-height:1.5;\"> 可以插入多条同一主键的数据???--不可以，这里的id如果设定为主键，就无法插入；</span><br />\r\n<span style=\"line-height:1.5;\"> replace也可以插入一条数据，如果数据已经存在，则更新原来的数据</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>删除数据：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> delete from &nbsp;表名 &nbsp;【where 条件】【order by 排序字段】【limit 限定行数】</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>修改数据：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> update 表名 set &nbsp;字段1=值1，字段2=值2，.......【where 条件】【order by 排序字段】【limit 限定行数】</span><br />\r\n<span style=\"line-height:1.5;\"> 其中的数据值如果有字符串或时间值，需要用单引号；</span><br />\r\n<span style=\"line-height:1.5;\"> 特别注意 where条件的使用！！！</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>客户端cmd操作数据库的常用命令：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> mysql -hlocalhost -uroot -p; &nbsp;登录mysql数据库；</span><br />\r\n<span style=\"line-height:1.5;\"> set names gbk; &nbsp;设定当前数据库的环境编码；客户端cmd默认的是gbk编码；</span><br />\r\n<span style=\"line-height:1.5;\"> show databases; &nbsp;显示所有数据库；</span><br />\r\n<span style=\"line-height:1.5;\"> create database &nbsp;db1 charset utf8; &nbsp; 创建一个数据库db1 &nbsp;设定字符集utf8；</span><br />\r\n<span style=\"line-height:1.5;\"> drop database db1; &nbsp;删除数据库db1；</span><br />\r\n<span style=\"line-height:1.5;\"> use db_name; &nbsp;选择数据库；&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> create table news; &nbsp;创建一个数据表news；</span><br />\r\n<span style=\"line-height:1.5;\"> show create database db_name &nbsp;显示数据库的创建语句；</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>索引：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 索引是系统内部自动维护的隐藏的‘数据表’,它的作用是加快数据的读取速度。</span><br />\r\n<span style=\"line-height:1.5;\"> 建立索引的形式为： 索引类型（要建立索引的字段名）</span><br />\r\n<span style=\"line-height:1.5;\"> 索引类型有如下几个：</span><br />\r\n<span style=\"line-height:1.5;\"> 普通索引：形式：key (字段名)</span><br />\r\n<span style=\"line-height:1.5;\"> 唯一索引：形式：unique key (字段名)</span><br />\r\n<span style=\"line-height:1.5;\"> 主键索引：形式：primary key (字段名)</span><br />\r\n<span style=\"line-height:1.5;\"> 全文索引：形式：fulltext (字段名)</span><br />\r\n<span style=\"line-height:1.5;\"> 外键索引：形式：foreign key (字段名) references &nbsp;其它表(对应其它表中的字段名);</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>约束：</strong></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">约束</span></span><span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">就是要求数据满足什么条件的一种“规定”。</span><br />\r\n<span style=\"line-height:1.5;\"> 主要有如下几种约束：</span></span><br />\r\n<span style=\"line-height:1.5;\"> 主键约束：形式：primary key (字段名)；</span><br />\r\n<span style=\"line-height:1.5;\"> 唯一约束：形式：unique key (字段名)；</span><br />\r\n<span style=\"line-height:1.5;\"> 外键约束：形式：foreign key (字段名) &nbsp;references &nbsp;其它表名(对应其它表名中的字段名);</span><br />\r\n<span style=\"line-height:1.5;\">\"XX约束，它们只是同一件事情的不同说法，同时也称为 XX索引\"</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>表选项列表：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 表选项就是创建一个表的时候，对该表的整体设定，有如下几个：</span><br />\r\n<span style=\"line-height:1.5;\"> charset = 要使用的字符编码，</span><br />\r\n<span style=\"line-height:1.5;\"> engine = 要使用的存储引擎（也叫表类型），</span><br />\r\n<span style=\"line-height:1.5;\"> auto_increment = 设定当前表的自增长字段的初始值，默认是1</span><br />\r\n<span style=\"line-height:1.5;\"> comment = ‘该表的一些说明文字’</span><br />\r\n<span style=\"line-height:1.5;\"> engine常用的有2种：InnoDB和MyIsam；默认InnoDB</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>基本查询：</strong></span><br />\r\n<span style=\"line-height:1.5;\"> select【all | distinct】 字段或表达式列表 【from字句】【where 字句】【group by 字句】【having 字句】【order by 字句】【limit 字句】;</span><br />\r\n<span style=\"line-height:1.5;\"> concat( )函数是mysql中的系统函数，用于“连接”字符串</span><br />\r\n<span style=\"line-height:1.5;\"> 每个输出项（字符串或表达式）都可以有一个别名&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 形式： XX as 别名；（可以是中文名，不用加引号）</span><br />\r\n<span style=\"line-height:1.5;\"> eg：count (*) &nbsp;as &nbsp;数量</span><br />\r\n<span style=\"line-height:1.5;\"> 注意，实际上表的字段并没有改变，而只是改变了“结果集”的字段名；</span><br />\r\n<span style=\"line-height:1.5;\"> all 和 distinct</span><br />\r\n<span style=\"line-height:1.5;\"> 用于设定select出来的数据，是否消除“重复性”，默认值all（显示所有）；</span><br />\r\n<span style=\"line-height:1.5;\"> distinct 消除重复的行，将多行重复的数据显示为1行</span><br />\r\n<span style=\"line-height:1.5;\"> from 字句</span><br />\r\n<span style=\"line-height:1.5;\"> 表示select部分从中“取得”数据的数据源--其实就是表</span><br />\r\n<span style=\"line-height:1.5;\"> 通常，后面就是表名。</span><br />\r\n<span style=\"line-height:1.5;\"> where 字句</span><br />\r\n<span style=\"line-height:1.5;\"> 就是对from子句中的“数据源”中的数据进行筛选的条件设定，</span><br />\r\n<span style=\"line-height:1.5;\"> 筛选的机制是“一行一行进行判断”；</span><br />\r\n<span style=\"line-height:1.5;\"> is 运算符：空值和布尔值的判断</span><br />\r\n<span style=\"line-height:1.5;\"> XX is null</span><br />\r\n<span style=\"line-height:1.5;\"> XX is not null</span><br />\r\n<span style=\"line-height:1.5;\"> XX is true</span><br />\r\n<span style=\"line-height:1.5;\"> XX is false</span><br />\r\n<span style=\"line-height:1.5;\"> between运算符：范围判断</span><br />\r\n<span style=\"line-height:1.5;\"> XX between 值1 and 值2；</span><br />\r\n<span style=\"line-height:1.5;\"> 其实相当于： &nbsp;XX &gt;=值1 &nbsp;and &nbsp;XX &lt;= 值2；</span><br />\r\n<span style=\"line-height:1.5;\"> in运算符：给定确定数据的范围判断</span><br />\r\n<span style=\"line-height:1.5;\"> XX in (值1，值2，值3，......)</span><br />\r\n<span style=\"line-height:1.5;\"> like运算符：对字符串进行模糊查找</span><br />\r\n<span style=\"line-height:1.5;\"> XX like‘要查找的内容’</span><br />\r\n<span style=\"line-height:1.5;\"> 它依赖与一下两个字符 % 和 _ &nbsp; ( _ 表示一个任意的字符)</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;\'%联想%\' &nbsp; 找出表中‘联想’这一行的所有数据行</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;\'联想%\' &nbsp; &nbsp;找出以\'联想\'开头的这一行的所有数据行</span><br />\r\n<span style=\"line-height:1.5;\"> group by 字句：分组</span><br />\r\n<span style=\"line-height:1.5;\"> group by 字段1【desc/asc】，字段2【desc/asc】，........</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>什么叫做分组？</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 分组就是将多行数据，以某种标准（就是指定的字段）来进行“分类”存放</span><br />\r\n<span style=\"line-height:1.5;\"> 特别注意：分组之后的结果，一定要理解为：只有一个一个组了</span><br />\r\n<span style=\"line-height:1.5;\"> 则结果是：在select语句中的“输出（取出）”部分，只应该出现“组的信息”：</span><br />\r\n<span style=\"line-height:1.5;\"> select &nbsp;组信息1， 组信息2， ..... &nbsp;from &nbsp;数据源 &nbsp; group &nbsp;by &nbsp;字段；</span><br />\r\n<span style=\"line-height:1.5;\"> 实际应用中，分组之后：</span><br />\r\n<span style=\"line-height:1.5;\"> 1、分组依据本身的信息，其实就是该分组依据的字段名；</span><br />\r\n<span style=\"line-height:1.5;\"> 2、每一组的“数量”信息：就是用count（*）获得；这个也是内部系统函数！</span><br />\r\n<span style=\"line-height:1.5;\"> 3、原来数据中的“类型字段的聚合信息”，包括如下几个：</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;最大值：max(字段名) &nbsp; 原始形式为 &nbsp;max()</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;最小值：min(字段名) &nbsp; &nbsp;原始形式为 &nbsp;min()</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;平均值：avg(字段名) &nbsp; &nbsp;原始形式为 &nbsp;avg()</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;总和值：sum(字段名) &nbsp; 原始形式为 &nbsp;sum()</span><br />\r\n<span style=\"line-height:1.5;\"> 这4个是内部系统函数！！！</span><br />\r\n<span style=\"line-height:1.5;\"> select pinpai, count(*) as 数量 from product group by pinpai;</span><br />\r\n<span style=\"line-height:1.5;\"> 表示每一种品牌的商品数量</span><br />\r\n<span style=\"line-height:1.5;\"> select pinpai, count(*) as 数量, max(price) as 最高价,min(price) as 最低价,avg(price) as 平均价,sum(price) as 总价, chandi &nbsp;from product group by pinpai</span><br />\r\n<span style=\"line-height:1.5;\"> having 子句</span><br />\r\n<span style=\"line-height:1.5;\"> 和where作用一样，由于分组之后限定了范围，可用条件语句比较少</span><br />\r\n<span style=\"line-height:1.5;\"> select pinpai, count(*) as 数量, max(price) as 最高价,min(price) as 最低价,avg(price) as 平均价,sum(price) as 总价, chandi &nbsp;from product group by pinpai having 平均价 &gt; 5000</span><br />\r\n<span style=\"line-height:1.5;\"> 找出平均价大于5000的商品</span><br />\r\n<span style=\"line-height:1.5;\"> having &nbsp;count(*) &gt; 2</span><br />\r\n<span style=\"line-height:1.5;\"> 此时count(*)是独立计算的结果(与select上面那条语句没有关系)：</span><br />\r\n<span style=\"line-height:1.5;\"> order by 字句</span><br />\r\n<span style=\"line-height:1.5;\"> 对前面取得的数据以设定的标准（字段）来进行排序以输出结果。</span><br />\r\n<span style=\"line-height:1.5;\"> order by &nbsp;字段1【desc/asc】，字段2【desc/asc】，........</span><br />\r\n<span style=\"line-height:1.5;\"> (asc，默认值)</span><br />\r\n<span style=\"line-height:1.5;\"> limit 起始行号 &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> /*找出价格最高的一件商品*/</span><br />\r\n<span style=\"line-height:1.5;\"> select * from product order by desc limit 0, 1</span><br />\r\n<span style=\"line-height:1.5;\"> 将商品按降序排列，取出一行</span><br />\r\n<span style=\"line-height:1.5;\"> select字段依赖于from?????&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 这是由于要查找的字段是从from中的表中读取(表中必须包含这些字段)</span><br />\r\n<span style=\"line-height:1.5;\"> 完整的select查询语句结构：</span><br />\r\n<span style=\"line-height:1.5;\"> select * from product [where ...] order by &nbsp;protype_id, price desc &nbsp;[having ...] &nbsp;limit 2,2</span><br />','MySQL数据库常用的操作命令',1),(18,'创建一张数据表的数据类型：<br />\r\n整数类型：<br />\r\n形式：类型名【(M)】【unsigned】【zerofill】<br />\r\ntinyint:(1) 占用1个字节(8位2进制) &nbsp;&nbsp;<br />\r\nsmallint:(2) &nbsp;占用2个字节(16位2进制) &nbsp; &nbsp;<br />\r\nmediumint:(3) &nbsp;占用3个字节(24位2进制) &nbsp;<br />\r\nint(4) &nbsp; 占用4个字节(32位2进制)<br />\r\nbigint:(8) &nbsp;占用8个字节(64位2进制)<br />\r\nunsigned &nbsp; 用于设定该整数为“无符号数”，其实就是没有负数。<br />\r\nint(8)对于整数类型 括号里面的值不影响类型实际可以存储的范围，只是代表显示宽度，当实际内容不到这个宽度的时候在前面用0填充<span>（只有在创建表的时候使用了ZEROFILL才有这个效果）</span>，也就是说 &nbsp;int(4) &nbsp;int(6) &nbsp;int(8) 不会影响它的可存储范围，它还是-2147483648-2147483647，它还是占用4个字节，只是如果在创建表的时候指定这一列用ZEROFILL修饰了，那么取回值得时候如果不够这里指定的位数，会在前面填0<br />\r\n小数类型：<br />\r\nfloat：单精度浮点型<br />\r\ndouble：双精度浮点型<br />\r\ndecimal(10,3)：定点数，总位数为10，小数位数为3；<br />\r\n字符类型：<br />\r\nvarchar() &nbsp;可变长度字符串，最大长度\'65535\'，字符编码不同，存储长度也不同<br />\r\ngbk编码：65535/2 个 &nbsp; &nbsp; &nbsp; utf8编码：65535/3 个<br />\r\nchar() &nbsp; 定长字符串，手机号，邮政编码....<br />\r\n如果小于设定长度，不够的会自动补满<br />\r\nenum类型：单选项字符串数据类型，用于存储表单中的‘单选项值’<br />\r\n形式：enum(\"选项1\",\"选项2\",\"选项3\");<br />\r\n共65535个选项,对应数字(1,2,3,4,5,.....)<br />\r\nset类型：多选项字符串数据类型，用于存储表单中的‘多选项值’<br />\r\n形式：set(\"选项1\",\"选项2\",\"选项3\");&nbsp;<br />\r\n最多64个选项，对应的数字(1,2,4,8,16,.....)<br />\r\ntext类型：长文本字符类型，可存65535个字符;<br />\r\n其它了解：<br />\r\nbinary类型： 定长二进制字符串类型，存储二进制值<br />\r\nvarbinary类型：变长二进制字符串类型，存储二进制值<br />\r\nblob类型：二进制字符串类型，存储二进制值，但其用来存储图片，\"其它文件\"。<br />\r\n日期类型：<br />\r\ndatetime类型：时间日期类型 &nbsp;\'2015-7-8 10:12:23\' 或now()<br />\r\ndate类型：日期类型 \'2015-7-8\'或now()<br />\r\ntime类型：时间类型 \'13:45:50\'或now()<br />\r\nyear类型：年份类型 \'2015\'<br />\r\ntimestamp：时间戳类型：就是指一个时间的“数据值”--本质其实一个数字，类是js中的GetTime()，或php中的Time()，它们都得到一个“整数数字”，这个字段通常不用插入数据；<br />\r\n它的一个重要作用：会自动获得时间戳的数据值---相当于“now()”<br />\r\n时间日期类型通常使用‘单引号’引起来，跟字符串一样！<br />\r\n<br />\r\n字段属性可以有多个：主要如下几个：<br />\r\nauto_increment &nbsp;只用于整数类型，让该字段的值自动增长<br />\r\nprimary key &nbsp;用于设定该字段为主键，此时该字段的值就可以‘唯一确定’一行数据<br />\r\nnot null &nbsp;用于设定字段是否为空，默认为空<br />\r\ndefault &nbsp;默认值 &nbsp;用于设定该字段的默认值，如果没有设定是可为空的<br />\r\ncomment &nbsp;注释，\'字段说明文字\'<br />\r\nunique key &nbsp;设定该字段是唯一的，也就是不重复的。','MySQL数据表的字段类型',1),(19,'<span style=\"color:#E53333;line-height:1.5;\">什么是会话控制？</span><br />\r\n<span style=\"line-height:1.5;\"> 出现原因:http是无状态协议的,每次都是不同的服务器请求,无法维护两个请求事务之间的关系.</span><br />\r\n<span style=\"line-height:1.5;\"> 会话控制:能够在网站中跟踪一个变量,通过对变量的跟踪,就可以使多个请求事物之间建立联系,根据授权和用户身份显示不同的内容,不同页面</span><br />\r\n<span style=\"line-height:1.5;\"> COOKIE:是服务器设置在客户端的文本文件,保存客户端的个人信息.</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">什么是COOKIE？</span><br />\r\n<span style=\"line-height:1.5;\"> 1.cookie是在http协议下,服务器或脚本在客户端保存维护信息的一种方式</span><br />\r\n<span style=\"line-height:1.5;\"> 2.cookie是web服务器保存在客户端的一个很小的文本文件,保存客户端的信息,提高网页的处理效率,降低服务器负担</span><br />\r\n<span style=\"line-height:1.5;\"> 3.cookie保存在客户端,通常在浏览器的cookie临时文件夹中,可以手动的删除.如果cookie太多超过系统的允许范围,系统将自动删除</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">cookie的工作原理：</span><br />\r\n<span style=\"line-height:1.5;\"> 1.当用户访问基于php技术的网站时,在php中可以使用setcookie()函数生成一个cookie,系统经过处理,将cookie发送到客户端并保存在C:\\Documents and Setting\\用户名\\Cookies目录下</span><br />\r\n<span style=\"line-height:1.5;\"> 2.cookie是http标头的一部分,在它之前不能有任何输出，空格和换行都不可以</span><br />\r\n<span style=\"line-height:1.5;\"> 3.当客户端再次访问网站时,浏览器会自动把cookie目录下与该站点对应的cookie信息发送到服务器,服务器将自动把客户端传来的cookie转化成php的变量,.php5中存放在$_COOKIE全局数据中</span><br />\r\n<span style=\"line-height:1.5;\"> 4.接受和处理cookie.使用$_COOKIE获取</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">COOKIE的参数设定：</span><br />\r\n<span style=\"line-height:1.5;\"> Setcookie(键，值，有效期=0，有效路径=‘’，有效域名=‘’，是否仅安全连接传输=false，是否HTTPonly=false)</span><br />\r\n<span style=\"line-height:1.5;\"> 1、 键：设置cookie的名字，数据是在响应阶段被传输到浏览器端的</span><br />\r\n<span style=\"line-height:1.5;\"> 2、 值：设置cookie的值</span><br />\r\n<span style=\"line-height:1.5;\"> Tip：增加，修改，删除，都使用该函数setcookie()完成！</span><br />\r\n<span style=\"line-height:1.5;\"> 3、 有效期：默认浏览器关闭（会话周期结束）时，COOKIE失效。也成之为：会话COOKIE（临时COOKIE）</span><br />\r\n<span style=\"line-height:1.5;\"> 允许设置COOKIE的有效期，语法上，使用setcookie的第三个参数进行设置，通过unix时间戳</span><br />\r\n<span style=\"line-height:1.5;\"> （从1970年到现在的秒数，PHP函数time()来获取当前时间戳。）来设置COOKIE的有效期。</span><br />\r\n<span style=\"line-height:1.5;\"> 当用户下次访问您的站点的时候，浏览器会先检查您站点的所有cookie,如果某个cookie已经过期，浏览器不会把这个cookie随页面请求一起发送给服务器，而是删除这个已经过期的cookie。时间点是从cookie被创建时候当前时间开始计算。</span><br />\r\n<span style=\"line-height:1.5;\"> 谁来判断该COOKIE是否过期？(是否在有效期内)</span><br />\r\n<span style=\"line-height:1.5;\"> 浏览器 &nbsp;OR &nbsp;服务器？</span><br />\r\n<span style=\"line-height:1.5;\"> 是浏览器判断该COOKIE是否过期的。</span><br />\r\n<span style=\"line-height:1.5;\"> 在设置COOKIE时，同时将COOKIE的有效期，告知（传输）到浏览器端。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">如何删除COOKIE：</span><br />\r\n<span style=\"line-height:1.5;\"> Time()-1:	删除COOKIE通用做法，强制设为过期。</span><br />\r\n<span style=\"line-height:1.5;\"> 注意: 当cookie被删除时,它的值在当前页面仍然有效.如果要把cookie设置成在浏览器关闭后就失效.那么可以把expiretime的值设为0,或者不设此值</span><br />\r\n<span style=\"line-height:1.5;\"> 4、 path有效路径（使用较少）：默认仅在当前目录及其后代目录有效。使用空字符串表示</span><br />\r\n<span style=\"line-height:1.5;\"> 默认值！通常如果需要设置，就是将COOKIE设置为 / 根目录下有效，表示整站有效。</span><br />\r\n<span style=\"line-height:1.5;\"> 5、 有效域（使用频率较高）：某个域名下设置的COOKIE，仅仅可以在当前域名下所使用</span><br />\r\n<span style=\"line-height:1.5;\"> COOKIE，支持在一级域名内（所有的二级域名之间）进行COOKIE数据共享。</span><br />\r\n<span style=\"line-height:1.5;\"> 6、 secure是否仅安全连接（https）传输：</span><br />\r\n<span style=\"line-height:1.5;\"> 告知浏览器，我们所设置的cookie，是否仅仅在https这个协议下，才会被发送到浏览器端！ 用 参数 第六个完成设置：默认值false，表示都可以（http和https）。</span><br />\r\n<span style=\"line-height:1.5;\"> 7、 HTTPONLY：</span><br />\r\n<span style=\"line-height:1.5;\"> 所设置好的COOKIE，是否仅仅在http请求时所使用。</span><br />\r\n<span style=\"line-height:1.5;\"> COOKIE还可以通过浏览器端的脚本（javascript）获取到。</span><br />\r\n<span style=\"line-height:1.5;\"> function getCookie(){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;alert(document.cookie);</span><br />\r\n<span style=\"line-height:1.5;\"> }</span><br />\r\n<span style=\"line-height:1.5;\"> 如果需要禁止浏览器端其他脚本使用该cookie，则使用第七个参数即可，默认false，设置为true表示除了http请求，其它地方（javascript）不可以用</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">COOKIE的有效期：</span><br />\r\n<span style=\"line-height:1.5;\"> 设置方法如下：</span><br />\r\n<span style=\"line-height:1.5;\"> setcookie(\"cookie_name\", \"abcd\", time()+3600);</span><br />\r\n<span style=\"line-height:1.5;\"> 解释：这个cookie有3600秒的有效期；</span><br />\r\n<span style=\"line-height:1.5;\"> cookie有效期在退出作用域那一刻开始生效；</span><br />\r\n<span style=\"line-height:1.5;\"> 重新访问又有3600秒，设置cookie时，不会考虑之前的是否设置cookie和cookie是否有效，可以认为是强制设置。</span><br />\r\n<span style=\"line-height:1.5;\"> 如果关闭浏览器重新打开又重新算（当然这个要在浏览器端设置了关闭浏览器立即失效的开关）。cookie其实就是从打开页面产生cookie开始算起，如果你打开页面产生cookie的时间有1800秒了，假如设置的3600秒失效，再次刷新页面（不重新设置cookie的情况下）就剩1800秒了。</span><br />\r\n<span style=\"line-height:1.5;\"> PHP手册上关于setcookie函数的expire参数有这样一个解释：</span><br />\r\n<span style=\"line-height:1.5;\"> If set to 0, or omitted, the cookie will expire at the end of the session (when the browser closes).&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 如果设为0 或者忽略该参数, cookie将在session结束时(或关闭浏览器时)过期</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">COOKIE的注意事项：</span><br />\r\n<span style=\"line-height:1.5;\">1.setcookie()之后在当前页面echo时不会输出,必须刷新或到下一个页面才会输出</span><br />\r\n<span style=\"line-height:1.5;\">2.不同浏览对cookie的处理不同,客户端可以禁用cookie,而且对浏览器的数量有限制</span><br />\r\n<span style=\"line-height:1.5;\">3.避免过度依赖cookie,因为客户端会禁止掉cookie</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">什么是SESSION？</span><br />\r\n<span style=\"line-height:1.5;\"> 1.session从用户访问页面开始,到断开与网站的连接为止,形成一个会话的生命周期.在会话期间,分配客户唯一的一个sessionID,用来标识当前用户,与其他用户进行区分</span><br />\r\n<span style=\"line-height:1.5;\"> 2.session会话时,session会分别保存在客户端和服务器端的两个文件,对于客户端:使用临时的cookie保存(cookie的名称为PHPSESSID)或者通过url字符串的形式传递.服务器端也以文本的形式保存在指定的session目录中</span><br />\r\n<span style=\"line-height:1.5;\"> 3.session通过id接受每一次访问的请求,从而识别当前用户,跟踪和保持用户的具体资料,以及session变量,可在session中存储数字或文字资料.比如session_name.这些信息都保存在服务器端</span><br />\r\n<span style=\"line-height:1.5;\"> 4.sessionID可以作为会话信息保存到数据库中,进行session持久化.这样可以跟踪用户的登陆次数,在线与否,在线时间</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">如何销毁SESSION?</span><br />\r\n<span style=\"line-height:1.5;\"> 1、unset($_SESSION[\'XXX\']):用于删除单个session变量</span><br />\r\n<span style=\"line-height:1.5;\"> 注意:不要使用unset($_SESSION),此函数不可用,会删除全局的$_SESSION销毁</span><br />\r\n<span style=\"line-height:1.5;\"> 2、$_SESSION=array():删除多个session变量</span><br />\r\n<span style=\"line-height:1.5;\"> 3、销毁session_destroy():结束当前的会话,并清空会话中的所有资源.该函数不会unset(释放)和当前session相关的全局变量,也不会删除客户端的session对应的cookie</span><br />\r\n<span style=\"line-height:1.5;\"> 4、清空session值</span><br />\r\n<span style=\"line-height:1.5;\"> session_start();</span><br />\r\n<span style=\"line-height:1.5;\"> $_SESSION=array();</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">SESSION的过期时间：</span><br />\r\n<span style=\"line-height:1.5;\"> session的过期时间由两方面决定的：</span><br />\r\n<span style=\"line-height:1.5;\"> 1.存储在客户端的$_COOKIE[\'PHPSESSID\']的过期时间（默认cookie名称为PHPSESSID,可通过php.ini中的session.name修改。）</span><br />\r\n<span style=\"line-height:1.5;\"> 2.存储在服务器端的相对应的session文件（session文件名和上述cookie的值一一对应），默认为1440秒，即24分钟&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> 两者的关系： 当执行session_start()的时候，其实是做了两件事：</span><br />\r\n<span style=\"line-height:1.5;\"> 一、检查客户端发送过来的的所有cookie（当然也包括$_COOKIE[\'PHPSESSID\'], 如果有的话），根据$_COOKIE[\'PHPSESSID\']的值（这是由apache产生的随机字符串，如0lkbd2se458r600m2m7o1r4ic5）来访问 相对应的 session文件，这两者是一 一对应的关系。当然文件里面的值是经过序列化的。</span><br />\r\n<span style=\"line-height:1.5;\"> 二、如果客户端没有传来$_COOKIE[\'PHPSESSID\']，就会有服务端产生一个随机的$_COOKIE[\'PHPSESSID\']并存储在客户端。</span><br />\r\n<span style=\"line-height:1.5;\"> 对session_start()的理解：</span><br />\r\n<span style=\"line-height:1.5;\"> 1、在session_start()开启之后，当session数据对应的PHPSESSIONID的cookie已经超时，无法传回到服务器端，此时由于session开启，系统会自动再重新分配一个SESSIONID标识，SESSIONID默认是存储于浏览器端。</span><br />\r\n<span style=\"line-height:1.5;\"> 2、同时在session_start开启之后，如果之前有存储过session，并且没有过期，则会获取到已经存好的session，如果没有存储过session，则session机制默认也会自动分配一个SESSIONID给浏览器，同时在服务器端生成对应的文件，此时的session是一个过期的会话</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">如何设置 session数据的属性？</span><br />\r\n<span style=\"line-height:1.5;\"> 设置COOKIE中session-ID这个COOKIE变量属性即可！</span><br />\r\n<span style=\"line-height:1.5;\"> 方案一，配置 php.ini</span><br />\r\n<span style=\"line-height:1.5;\"> 方案二，在脚本中，开启session之前使用函数进行配置</span><br />\r\n<span style=\"line-height:1.5;\"> ini_set(\'session.cookie_lifetime\',\'3600\');</span><br />\r\n<span style=\"line-height:1.5;\"> ini_set(\'sesssion.cookie_domain\',\' .baidu.com\');</span><br />\r\n<span style=\"line-height:1.5;\"> @session_start();</span><br />\r\n<span style=\"line-height:1.5;\"> 采用下面的函数进行设置：</span><br />\r\n<span style=\"line-height:1.5;\"> Session_set_cookie_params(有效期，有效路径，有效域，是否仅安全连接传输，是否HTTPONLY)</span><br />\r\n<span style=\"line-height:1.5;\"> 实际环境中，很少改session的有效期。经常改有效域名。</span><br />\r\n<span style=\"line-height:1.5;\"> session_set_cookie_params(0,\'/\', \'.baidu.com\');</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">Session数据区操作：</span><br />\r\n<span style=\"line-height:1.5;\"> 重写session的存储机制：</span><br />\r\n<span style=\"line-height:1.5;\"> Session数据区默认以 文件的形式存储与服务器操作系统临时目录中！</span><br />\r\n<span style=\"line-height:1.5;\"> 当 session数据区过多时，文件形式的存储，操作速度变慢，磁盘的读写开销很大</span><br />\r\n<span style=\"line-height:1.5;\"> 重写session入数据库：</span><br />\r\n<span style=\"line-height:1.5;\"> 共6个函数</span><br />\r\n<span style=\"line-height:1.5;\"> Session_set_save_handler(开始函数，结束函数，读函数，写函数，删除函数，GC函数);</span><br />\r\n<span style=\"line-height:1.5;\"> 告知session机制，在需要读写时，使用用户自定义的读写函数完成！</span><br />\r\n<span style=\"line-height:1.5;\"> 这个函数仅仅是设置告知，不是调用，以上6个函数，在session机制运行到某个时间点时，</span><br />\r\n<span style=\"line-height:1.5;\"> 才会被调用！</span><br />\r\n<span style=\"line-height:1.5;\"> 垃圾回收操作： sessGC()</span><br />\r\n<span style=\"line-height:1.5;\"> 垃圾：服务器上过时的session数据区。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">垃圾如何判定？</span><br />\r\n<span style=\"line-height:1.5;\"> 如果一个session数据区已经超过多久没有使用（最后一次写操作）了，就是被视为垃圾数据。</span><br />\r\n<span style=\"line-height:1.5;\"> 该时间临界点：默认1440s。可以被配置：session.gc_maxlifetime = 1440</span><br />\r\n<span style=\"line-height:1.5;\"> 判断过期条件：Last_write &lt; 当前时间-1440&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">垃圾如何删除？</span><br />\r\n<span style=\"line-height:1.5;\"> 在 session_start()过程中，开启session机制过程中：有几率地执行 垃圾回收操作。</span><br />\r\n<span style=\"line-height:1.5;\"> 一旦执行，就会删除所有的过期的垃圾数据区。</span><br />\r\n<span style=\"line-height:1.5;\"> 默认的概率为1/1000。</span><br />\r\n<span style=\"line-height:1.5;\"> 可以设置该几率：</span><br />\r\n<span style=\"line-height:1.5;\"> 可能性：Session.gc_probability</span><br />\r\n<span style=\"line-height:1.5;\"> 基数（除数）：Session.gc_divisor</span><br />\r\n<span style=\"line-height:1.5;\"> 建议在脚本周期调整，使用函数ini_set(),在开启session机制前完成</span><br />\r\n<span style=\"line-height:1.5;\"> 实现 sessGC()：PHP的session机制将 最大有效期作为参数，传递过来！</span><br />\r\n<span style=\"line-height:1.5;\"> 语法细节：</span><br />\r\n<span style=\"line-height:1.5;\"> 要注意先设置再开启session机制</span><br />\r\n<span style=\"line-height:1.5;\"> PHP配置项：session.save_handler改为 user： 表示用户自定义！</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">会话技术总结：</span><br />\r\n<span style=\"line-height:1.5;\"> Session.save_handler	存储处理器： files|user</span><br />\r\n<span style=\"line-height:1.5;\"> Session.save_path	存储地址。</span><br />\r\n<span style=\"line-height:1.5;\"> Session.cookie_XXX	（lifetime，path，domain，secure，httponly）存储session-ID这个COOKIE变量的属性</span><br />\r\n<span style=\"line-height:1.5;\"> Session.gc_maxlifetime</span><br />\r\n<span style=\"line-height:1.5;\"> Session.gc_probability</span><br />\r\n<span style=\"line-height:1.5;\"> Session.gc_divisor</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">session和cookie的额外的一些理解：</span><br />\r\n<span style=\"line-height:1.5;\"> 1. 由于HTTP协议是无状态的协议，所以服务端需要记录用户的状态时，就需要用某种机制来识具体的用户，这个机制就是Session.典型的场景比如购物车，当你点击下单按钮时，由于HTTP协议无状态，所以并不知道是哪个用户操作的，所以服务端要为特定的用户创建了特定的Session，用用于标识这个用户，并且跟踪用户，这样才知道购物车里面有几本书。这个Session是保存在服务端的，有一个唯一标识。在服务端保存Session的方法很多，内存、数据库、文件都有。集群的时候也要考虑Session的转移，在大型的网站，一般会有专门的Session服务器集群，用来保存用户会话，这个时候 Session 信息都是放在内存的，使用一些缓存服务比如Memcached之类的来放 Session。</span><br />\r\n<span style=\"line-height:1.5;\"> 2. 思考一下服务端如何识别特定的客户？这个时候Cookie就登场了。每次HTTP请求的时候，客户端都会发送相应的Cookie信息到服务端。实际上大多数的应用都是用 Cookie 来实现Session跟踪的，第一次创建Session的时候，服务端会在HTTP协议中告诉客户端，需要在 Cookie 里面记录一个Session ID，以后每次请求把这个会话ID发送到服务器，我就知道你是谁了。有人问，如果客户端的浏览器禁用了 Cookie 怎么办？一般这种情况下，会使用一种叫做URL重写的技术来进行会话跟踪，即每次HTTP交互，URL后面都会被附加上一个诸如 sid=xxxxx 这样的参数，服务端据此来识别用户。</span><br />\r\n<span style=\"line-height:1.5;\"> 3. Cookie其实还可以用在一些方便用户的场景下，设想你某次登陆过一个网站，下次登录的时候不想再次输入账号了，怎么办？这个信息可以写到Cookie里面，访问网站的时候，网站页面的脚本可以读取这个信息，就自动帮你把用户名给填了，能够方便一下用户。这也是Cookie名称的由来，给用户的一点甜头。</span><br />\r\n<span style=\"line-height:1.5;\"> 所以，总结一下：</span><br />\r\n<span style=\"line-height:1.5;\"> Session是在服务端保存的一个数据结构，用来跟踪用户的状态，这个数据可以保存在集群、数据库、文件中；</span><br />\r\n<span style=\"line-height:1.5;\"> Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，也是实现Session的一种方式。</span><br />','session和cookie会话技术总结',5),(20,'<span></span> \r\n<p>\r\n	<span style=\"color:#E53333;\"><strong>1、工厂模式：<span></span></strong></span> \r\n</p>\r\n所谓工厂模式，就是这样一个类（就是所谓的工厂类）：<br />\r\n它可以根据“传递”给他的类名，而去生产出对应的类的对象。<br />\r\n//设计一个工厂类：这个工厂类，有一个静态方法；<br />\r\n//通过该方法可以获得指定类的对象！<br />\r\nclass Gongchang{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; static function GetObject($className){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$obj = new $className(); //可变类<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span></span> return $obj;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n}<br />\r\n$o1 = Gongchang::GetObject(\"A\");<br />\r\n$o2 = Gongchang::GetObject(\"B\");<br />\r\n<p>\r\n	<span style=\"color:#E53333;\"><strong>2、单例模式：</strong></span> \r\n</p>\r\nclass Single{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;private function __construct(){ }&nbsp;&nbsp;&nbsp;&nbsp;//第1步：私有化构造方法私有化构造方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;private static $instance = null; &nbsp; &nbsp; &nbsp;//第2步：定义一个静态变量，私有化并赋值为空<span>(这里的null表示这个变量没有值)</span><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;private function __clone(){ } &nbsp; &nbsp; &nbsp; &nbsp;//第3步：私有化克隆的魔术方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;static function getObj(){ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //第4步：定义一个公共的静态方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!(self::$instance &nbsp;instanceof &nbsp;self)){ &nbsp;//判断是否为它自己的实例对象&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$instance = new self; &nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $instance; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;//保存该对象并返回<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br />\r\n}<br />\r\n$obj = Single::getObj();<br />\r\n<p>\r\n	<span style=\"color:#E53333;\"><strong>为什么要使用单例：</strong></span> \r\n</p>\r\n使用单例模式可以保证每次实例化获得的对象只有一个，并且不能被外界new出来，它最大的好处就是节省内存空间，提高效率，节省内存资源的开销！<br />','两种设计模式：工厂模式和单例模式',6),(21,'<p style=\"margin-left:10.5pt;\">\r\n	<span style=\"line-height:1;\"><span style=\"line-height:1.5;\">$arr = array(4,3,7,12,8,9);</span><br />\r\n<span style=\"line-height:1.5;\"> $n = count($arr); &nbsp; &nbsp; &nbsp; &nbsp;//获取数组长度(个数)</span><br />\r\n<span style=\"line-height:1.5;\"> for($i=0;$i&lt;$n-1;$i++){ &nbsp; &nbsp;//$i代表趟数，需要进行$n-1趟</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; //这里$k代表每一趟比较所需要的次数，第一次比较需要$n-1次</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; //每经过一次比较，数组中的个数减1，也就是减去$i($i从0开始)</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; for($k=0;$k&lt;$n-$i-1;$k++){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; //这里$k也可以用作下标</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; //当$i=0时，$k&lt;$n-1，即$k&lt;5(下标从0到4)，也就是6个数比较5次</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; if($arr[$k]&gt;$arr[$k+1])</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; {</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $temp = $arr[$k];</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $arr[$k] = $arr[$k+1]; &nbsp; //这里进行交换</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $arr[$k+1] = $temp;</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\"> }</span><br />\r\n<span style=\"line-height:1.5;\"> echo \"排序之后：\" . print_r($arr);</span><br />\r\n</span> \r\n</p>\r\n<p style=\"margin-left:10.5pt;\">\r\n	<span style=\"line-height:1;\"></span><span></span><span style=\"line-height:1;\"></span> \r\n</p>','有一个数组$a=array(4,3,7,12,8,9);将其重新排序并输出结果，按从小到大的顺序排序，不使用PHP内置函数。',17),(22,'<span style=\"line-height:1.5;\">MVC：是一种编程思想，M，model，表示模型，完成具体的业务逻辑，V，view，表示视图，用来展示页面，C，controller，控制器，专门用来负责调度的。</span><br />\r\n<span style=\"line-height:1.5;\">Why：我们使用MVC开发项目主要是要将业务逻辑和显示相分离，使得项目分层明确，便于维护和分工协作，便于交流。</span><br />\r\n<span style=\"line-height:1.5;\">How：在项目中我们定义了单一入口文件index.php，通过路由方式（请求分发器）请求到具体的哪个平台下的哪个控制器下对应的方法，在控制器中实例化模型，调用模型中的方法完成具体的业务逻辑，模型层再将处理后的结果返回给控制器，然后在控制器中加载视图文件，将模型中返回的结果输出到视图中。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','什么是MVC？为什么要使用MVC？你在你的项目中是怎样使用MVC的？',7),(23,'<span style=\"line-height:1.5;\">OOP(object oriented programming)，即面向对象编程，其中两个最重要的概念就是类和对象。<br />\r\n世间万物都具有自身的属性和方法，通过这些属性和方法可以区分出不同的物质。<br />\r\n属性和方法的集合就形成了类，类是面向对象编程的核心和基础，<br />\r\n通过类就将零散的用于实现某个功能的代码有效地管理起来了。<br />\r\n类只是具备了某些功能和属性的抽象模型，而实际应用中需要一个一个实体，也就是需要对类进行实例化，<br />\r\n类在实例化之后就是对象。<br />\r\nOOP具有三大特点：<br />\r\n1. 封装性：<br />\r\n也称为信息隐藏，就是将一个类的使用和实现分开，只保留部分接口和方法与外部联系，或者说只公开了一些供开发人员使用的方法。<br />\r\n于是开发人员只需要关注这个类如何使用，而不用去关心其具体的实现过程，这样就能实现MVC分工合作，也能有效避免程序间相互依赖，<br />\r\n实现代码模块间松藕合。<br />\r\n2. 继承性：<br />\r\n就是子类自动继承其父级类中的属性和方法，并可以添加新的属性和方法或者对部分属性和方法进行重写。继承增加了代码的可重用性。<br />\r\nphp只支持单继承，也就是说一个子类只能有一个父类。<br />\r\n3. 多态性：<br />\r\n子类继承了来自父级类中的属性和方法，并对其中部分方法进行重写。<br />\r\n于是多个子类中虽然都具有同一个方法，但是这些子类实例化的对象调用这些相同的方法后却可以获得完全不同的结果，这种技术就是多态性。<br />\r\n多态性增强了软件的灵活性。<br />\r\n<span style=\"background-color:#00D5FF;\">也可以这样理解：</span><br />\r\nOOP核心思想：使用人类思考问题、解决问题的方式来编写程序。<br />\r\n面向对象的三大特征：<br />\r\n封装，通常有两层含义，第一层，将属性和方法封装到一起（通过class），形成一个完整的对象。<br />\r\n第二层，对外隐藏具体的实现细节，提供一个可调用的接口（访问权限修饰符）。<br />\r\n继承，子类继承了父类的属性和方法（非私有的），使用继承可以实现代码的重用<br />\r\n多态，在不同的上下文中表现出不同的形态。php本身就是多态的语言，原因在于它是弱类型的。<br />\r\n</span><span style=\"line-height:1.5;\"></span><br />','简述什么是面向对象编程？你如何理解OOP思想？',17),(24,'<span style=\"line-height:1.5;\">Static关键字的理解：</span><br />\r\n<span style=\"line-height:1.5;\">Static通常用来声明类中成员或方法为静态的，表示该属性只隶属于该类，而不是该类的对象。也就是不需要通过实例化对象，使用类名：：方法名的方式就可以访问静态属性和静态方法。</span><br />\r\n<span style=\"line-height:1.5;\">Static它还可以表示“当前类”，跟self“类似”，但是它可以自动地判断“当前类”，依据是：代表调用其所在方法的那个类。</span><br />\r\n<span style=\"line-height:1.5;\">Static还可以表示一个函数中的静态局部变量，该函数调用后，该变量的值不会被销毁（清空），而是会保留起来。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','如何理解面向对象中的关键字static？',6),(25,'<span style=\"line-height:1.5;\">联系： Session基于COOKIE，session-ID存储于COOKIE中！</span><br />\r\n<span style=\"line-height:1.5;\">区别：Cookie 存储于浏览器端，安全性低，对数据大小有限制，只支持字符串类型的数据，可以长时间存储于浏览器端；</span><br />\r\n<span style=\"line-height:1.5;\">Session存储于服务器端（其session-ID存储于浏览器端），安全性较高，对数据大小没有限制（默认是8M，可以在php.ini中配置），支持除了资源外的其它全部数据类型，一般不会长时间存储于服务器端，通常会将session写入到数据库中，如果是存储在服务器端，则通常会有几率的执行垃圾回收机制，回收过期的session 数据。</span><br />\r\n<span style=\"line-height:1.5;\">session机制的工作原理：</span><br />\r\n<span style=\"line-height:1.5;\">在session_start()开启时，先判断session中有没有存储过数据，如果有就读取session中的内容，如果没有就随机分配一个session-ID给浏览器，同时在服务器生成对应的文件，在读取session数据时，客户端将session-ID传递到服务器，服务器根据session-ID找到对应的文件，对文件内容进行反序列化就得到session的值，保存的时候先序列化再写入。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','简述session和cookie两种会话技术的区别，并详细描述session机制的工作原理？',5),(26,'<span style=\"line-height:1.5;\">使用addslashes()函数可以防止SQL注入</span><br />\r\n<span style=\"line-height:1.5;\">使用htmlentities()或者htmlspecialchars()函数可以防止XSS攻击</span><br />\r\n<span style=\"line-height:1.5;\">验证码的作用：防止用户向服务器重复提交表单数据，暴力破解，论坛灌水，刷帖</span><br />\r\n<span style=\"line-height:1.5;\">万能用户名：xxx’ or 1#</span><br />\r\n<span style=\"line-height:1.5;\">万能密码： &nbsp;xxx’ or ‘1</span><br />\r\n<span style=\"line-height:1.5;\"></span>','请问PHP中如何防止SQL注入和XSS攻击？在后台登录我们为什么要使用到验证码？试写出SQL注入的万能用户名和万能密码？',7),(27,'<span style=\"line-height:1.5;\">事务（transaction）是作为一个单元的一组有序的数据库操作。</span><br />\r\n<span style=\"line-height:1.5;\">如果组内的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作都完成，事务则提交（commit），其修改将作用于所有其它数据库进程。如果其中的一个操作失败，事务则回滚（rollback），该事务所有操作的影响都将取消。要想使用事务，首先需要开启事务（start &nbsp;transaction）。</span><br />\r\n<span style=\"line-height:1.5;\">我们通常使用事务是为了要保证数据的一致性，事务经常用于银行转账、汇款或者某件商品的库存量和购物车的数量当中，比如：一件商品出库时，既要让商品库存量中的商品数量减1，又要让对应用户的购物车中的商品加1。</span><br />','什么是数据库中的事务，在什么情况下会用到事务？',1),(28,'<span style=\"line-height:1.5;\">唯一索引和主键索引的区别：唯一索引（UNIQUE）可以保证数据记录的唯一性，我们可以为一张数据表的不同字段设置唯一索引，并且它的值是唯一的，其值可以为空；而主键索引，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字PRIMARY KEY来创建，值不能为空。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"></span>','MYSQL数据库中唯一索引和主键索引的区别？',1),(29,'<span style=\"line-height:1.5;\">create table category (</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">`cat_id` smallint unsigned not null primary key&nbsp;auto_increment comment \'类别Id\',</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">`cat_name` varchar(30) not null comment \'分类名称\',</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">`parent_id` mediumint(8) unsigned not null default \'0\' comment \'上级分类的Id\'</span><br />\r\n<span style=\"line-height:1.5;\">);</span><br />\r\n<span style=\"line-height:1.5;\">这里写一个函数，实现无限分类：</span><br />\r\n<span style=\"line-height:1.5;\">function tree($arr,$pid=0,$level=0){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">static $list = array();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">foreach($arr as $v){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">if($v[‘parent_id’] == $pid){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$v[‘level’] = $level;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$list[] = $v;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">tree($arr,$v[‘cat_id’],$level+1);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return $list;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />','创建一张商品分类表，并写一个函数实现分类原理？',17),(30,'<span><span style=\"line-height:1.5;\">MYSQL数据库中连接查询的方式：</span><br />\r\n<span style=\"line-height:1.5;\">内连接：就是将两个表中符合所设定的条件的那些数据取出来的结果</span><br />\r\n<span style=\"line-height:1.5;\">select &nbsp;* &nbsp;from &nbsp;表1 &nbsp;【inner】 &nbsp;join &nbsp;表2 &nbsp;on &nbsp;连接条件</span><br />\r\n<span style=\"line-height:1.5;\">左（外）连接：就是将两个表的内连接的结果，再加上左边表的不符合内连接所设定的条件的那些数据的结果</span><br />\r\n<span style=\"line-height:1.5;\">select &nbsp;* &nbsp;from &nbsp;表1 &nbsp;left &nbsp;【outer】 join &nbsp;表2 &nbsp;on &nbsp;连接条件</span><br />\r\n<span style=\"line-height:1.5;\">右（外）连接：就是将两个表的内连接的结果，再加上右边表的不符合内连接所设定的条件的那些数据的结果</span><br />\r\n<span style=\"line-height:1.5;\">select &nbsp;* &nbsp;from &nbsp;表1 &nbsp;right &nbsp;【outer】 join &nbsp;表2 &nbsp;on &nbsp;连接条件</span><br />\r\n<span style=\"line-height:1.5;\">交叉连接：就是将所有数据行都连接起来的结果</span><br />\r\n<span style=\"line-height:1.5;\">select &nbsp;* &nbsp;from &nbsp;表1 &nbsp;cross &nbsp;join &nbsp;表2</span><br />\r\n<span style=\"line-height:1.5;\">全连接：MySQL 目前还不支持全外连接。</span><br />\r\n<span style=\"line-height:1.5;\"></span></span>','MYSQL数据库中连接查询的方式有哪几种？写出这几种连接查询方式取数据的结果，并写出完整的连接查询的SQL语句？',1),(31,'<p style=\"font-family:Simsun;font-size:medium;\">\r\n	SMTP (Simple Mail Transfer Protocol) 简单邮件传输协议\r\n</p>\r\n<p style=\"font-family:Simsun;font-size:medium;\">\r\n	POP3 (Post Office Protocol 3) 邮局协议第3 版\r\n</p>\r\n<p style=\"font-family:Simsun;font-size:medium;\">\r\n	HTTP (Hypertext Transfer Protocol) 超文本传输协议\r\n</p>\r\n<p style=\"font-family:Simsun;font-size:medium;\">\r\n	FTP (File Transfer Protocol）文件传输协议\r\n</p>\r\n<p style=\"font-family:Simsun;font-size:medium;\">\r\n	DNS (Domain Name System and Domain Name Service protocol) 域名系统（服务）协议\r\n</p>','说说下面这些协议的全称和中文解释',17),(32,'<p style=\"font-family:Simsun;font-size:medium;\">\r\n	<span style=\"line-height:1.5;\">//答案1:</span><br />\r\n<span style=\"line-height:1.5;\">function getExt($url){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$arr = parse_url($url);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$file = basename($arr[\'path\']);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$ext = explode(\".\",$file);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;</span><span></span><span style=\"line-height:1.5;\">return $ext[count($ext)-1];</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//答案2:</span><br />\r\n<span style=\"line-height:1.5;\">function getExt($url){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$url=basename($url);	//basename返回路径中的文件名部分</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$pos1=strpos($url,\".\");</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$pos2=strpos($url,\"?\");</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">if(strstr($url,\"?\")){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//strstr()查找字符串的首次出现</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return substr($url,$pos1+1,$pos2-$pos1-1);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}else{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return substr($url,$pos1);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">$url = \"www.baidu.com/index.html?keywords=&amp;submit=%E6%90%9C%E7%B4%A2&amp;id=5\";</span><br />\r\n<span style=\"line-height:1.5;\">echo getExt($url);</span>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>','写一个函数，尽可能高效的从一个标准url 里取出文件的扩展名',17),(33,'<span style=\"line-height:1.5;\">\'SERVER_ADDR\' 	当前运行脚本所在的服务器的 IP 地址</span><br />\r\n<span style=\"line-height:1.5;\">\'SERVER_NAME\' 	当前运行脚本所在的服务器的主机名</span><br />\r\n<span style=\"line-height:1.5;\">\'QUERY_STRING\' 	query string（查询字符串）</span><br />\r\n<span style=\"line-height:1.5;\">\'DOCUMENT_ROOT\'	当前运行脚本所在的文档根目录</span><br />\r\n<span style=\"line-height:1.5;\">\'HTTP_HOST\'	当前请求头中 Host: 项的内容</span><br />\r\n<span style=\"line-height:1.5;\">\'HTTP_REFERER\'	引导用户代理到当前页的前一页的地址（如果存在）</span><br />\r\n<span style=\"line-height:1.5;\">\'REMOTE_ADDR\'	浏览当前页面的用户的 IP 地址</span><br />\r\n<span style=\"line-height:1.5;\">\'REMOTE_HOST\'	浏览当前页面的用户的主机名</span><br />\r\n<span style=\"line-height:1.5;\">\'PHP_SELF\'	当前执行脚本的文件名</span><br />\r\n<span style=\"line-height:1.5;\">\'REQUEST_URI\'	URI 用来指定要访问的页面</span><br />','$_SERVER超全局变量中各下标代表的含义',17),(34,'<span style=\"line-height:1.5;\">$path = str_replace(\'//\',\'/\',__FILE__);</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name1($path){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return strrchr($path,\'.\');</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name2($path){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return substr($path,strrpos($path,\'.\'));</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name3($path){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$path_parts = pathinfo($path);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return $path_parts[\'extension\'];</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name4($path){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$arr = explode(\'.\',$path);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return $arr[count($arr) - 1];</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name5($path){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), \'.\')));</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<div>\r\n	<br />\r\n</div>','写5个函数来获取一个全路径的文件的扩展名',0),(35,'<span style=\"line-height:1.5;\">smarty模版if判断实例:</span><br />\r\n<span style=\"line-height:1.5;\"> {if $code == 1}</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;条件成立</span><br />\r\n<span style=\"line-height:1.5;\"> {else}</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp;条件不成立</span><br />\r\n<p>\r\n	<span style=\"line-height:1.5;\">{/if}</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\"><br />\r\n<!--?php<br /--> require \'libs/Smarty.class.php\';<br />\r\n$smarty = new Smarty;<br />\r\n$code = 1;<br />\r\n$smarty-&gt;assign(\"code\",$code);<br />\r\n$smarty-&gt;display(\'test.html\');<br />\r\n<br />\r\n</span> \r\n</p>','如何使用smarty在静态页面中输出if判断',17),(36,'<span style=\"line-height:1.5;\">1.开发环境：需要打开报错，在php.ini中配置display_error=On</span><br />\r\n<span style=\"line-height:1.5;\">2.生产环境：不能直接将错误输出，而是记录日志，在php.ini中配置</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;display_error = Off</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;log_error = On</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;error_log = /path/to/php_error.log</span><br />\r\n<span style=\"line-height:1.5;\">3.少用错误控制运算符@</span><br />\r\n<span style=\"line-height:1.5;\">4.在框架中：$this-&gt;error($model-&gt;getErroe());获取错误信息</span><br />\r\n<span style=\"line-height:1.5;\">5.打开firebug查看错误请求</span><br />\r\n<span style=\"line-height:1.5;\">6.业务逻辑错误：</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;阅读代码片段找错，检查业务逻辑排错</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;复杂的业务逻辑要通过记录运行日志来找错</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;dump();die;通过打印一些变量信息来检查变量的值是否正确来找错</span><br />\r\n<span style=\"line-height:1.5;\"></span>','PHP程序如何调试错误？',17),(37,'<span style=\"line-height:1.5;\">ajax只能取当前域名的数据，不能到其它域名下的数据</span><br />\r\n<span style=\"line-height:1.5;\">ajax跨域请求的两种解决方案：</span><br />\r\n<span style=\"line-height:1.5;\">1、使用PHP请求代理</span><br />\r\n<span style=\"line-height:1.5;\">服务器访问客户端，客户端返回js代码，js需要ajax请求另一个网站，那么就让ajax先请求自己的服务器 a.php ,通过php请求第三方的网站，使用 file_get_contents获取到请求的数据然后返回给js</span><br />\r\n<span style=\"line-height:1.5;\">2、jsonp格式：</span><br />\r\n<span style=\"line-height:1.5;\">jsonp限制：只能发GET请求</span><br />\r\n<span style=\"line-height:1.5;\">A. 接口服务器端 必须要把要返回的数据放到一个函数中【函数名先约定好】</span><br />\r\n<span style=\"line-height:1.5;\">$str = json_encode($arr);</span><br />\r\n<span style=\"line-height:1.5;\">echo \"abc($str)\";</span><br />\r\n<span style=\"line-height:1.5;\">B. 客户端 JS在请求时这样写：</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">注意jsonp正确的请求方式：将要请求的域名通过src方式加载进来，然后bcd.php文件就会调用abc函数，前提是abc()函数要和接口服务器端的函数名一致</span> <img src=\"/Public/Admin/js/editor/attached/image/20160613/20160613174545_82130.png\" alt=\"\" /><br />','ajax如何进行跨域请求',10),(38,'<span style=\"line-height:1.5;\">PHP可以自动进行内存管理，清除不再需要的对象。PHP使用了引用计数(referencecounting)</span><br />\r\n<span style=\"line-height:1.5;\">这种单纯的垃圾回收(garbagecollection)机制。每个对象都内含一个引用计数器，每reference连接到对象，计数器加1。当reference离开生存空间或被设为NULL，计数器减1。当某个对象的引用计数器为零时，PHP知道你将不再需要使用这个对象，释放其所占的内存空间</span><br />','PHP的垃圾回收机制是怎样的？',17),(39,'','JS如何实现鼠标放上某行高亮显示',15),(40,'<p>\r\n	<span style=\"line-height:1.5;\">抽象类是一种不能被实例化的类，只能作为其他类的父类来使用。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">抽象类是通过关键字&nbsp;</span><span style=\"line-height:1.5;\">abstract&nbsp;</span><span style=\"line-height:1.5;\">来声明的。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">接口类是通过</span><span style=\"line-height:1.5;\">interface</span><span style=\"line-height:1.5;\">关键字来声明的，接口类中的成员常量和方法都是</span><span style=\"line-height:1.5;\">public</span><span style=\"line-height:1.5;\">的</span><span style=\"line-height:1.5;\">，方法可以不写关键字</span><span style=\"line-height:1.5;\">public</span><span style=\"line-height:1.5;\">，</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">接口中的方法也是没有方法体。接口中的方法也天生就是要被子类实现的。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">抽象类和接口实现的功能十分相似，最大的不同是接口能实现多继承。在应用中选</span><span style=\"line-height:1.5;\">择抽象类还是接口要看具体实现。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">子类继承抽象类使用</span><span style=\"line-height:1.5;\">extends</span><span style=\"line-height:1.5;\">，子类实现接口使用</span><span style=\"line-height:1.5;\">implements</span><span style=\"line-height:1.5;\">。</span> \r\n</p>','什么是抽象类和接口？抽象类和接口有什么不同和相似的地方？',6),(41,'<p>\r\n	<span style=\"line-height:1.5;\">MyIsam</span><span style=\"line-height:1.5;\">特点：</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">并发性低，支持全文索引，读和写的速度快，锁表操作</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">数据，索引，表结构是分别进行存储</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">常用于论坛网站等对数据库经常读写的地方</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">InnoDB</span><span style=\"line-height:1.5;\">特点：</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">并发性比较高，支持事务和外键，锁行操作</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">经常用于商城、办公系统等需要业务逻辑的地方</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">数据和索引是共用同一个文件</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">Mysql5.6</span><span style=\"line-height:1.5;\">支持全文索引</span> \r\n</p>','InnoDB和MyIsam两种存储引擎的区别？',17),(42,'<p>\r\n	<span><span style=\"line-height:1.5;\"><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">是JS、xml、css、dom 多种技术的结合，它是一种可以与服务器进行(同步、异步)交互的技术，特点：页面不刷新，减少用户等待时间，用户体验好</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax的核心技术</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">是XMLHttpRequest，它是js中的一个对象</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax使用：</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">1、创建一个ajax对象 2、创建一个HTTP协议</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; 3、向服务器发出请求 4、ajax接收服务器返回的信息</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">使用场合：</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">无刷新分页、用户名校验、百度搜索引擎</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">$.ajax({</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; url:请求地址</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; type:get/post请求方式</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; data:给服务器传递数据</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; dataType:	html/text/xml/json服务器返回的数据类型</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; success:	成功请求后的回调函数</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; async:true/false &nbsp;同步、异步请求</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; cache:true/false	是否进行缓存</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">})</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax的Json数据如何解析：通过JSON.parse()方法或者eval()方法，将json格式的字符串转换成了JSON对象<br />\r\nvar jsonParseJson=JSON.parse(data);<br />\r\nvar evalJson=eval(\'(\'+data+\')\'); &nbsp; //data为ajax请求成功后返回的json格式数据<br />\r\n二者的区别如下：<br />\r\nJSON.parse()可以解析json格式的数据，并且会对要解析的字符串进行格式检查，如果格式不正确则不进行解析，而eval()则可以解析任何字符串，eval是不安全的。</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax 的优点是：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">Ajax 的缺点是：</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">不利于SEO 推广优化，因为搜索引擎无法直接访问到Ajax 请求的内容。</span></span></span>\r\n</p>\r\n<p>\r\n	<span><span></span><br />\r\n<span></span><br />\r\n<span></span><br />\r\n</span> \r\n</p>','什么是Ajax？Ajax的核心技术是什么？Ajax如何使用？Ajax如何解析json数据？Ajax的优缺点是什么？',10),(43,'<p>\r\n	<span style=\"line-height:1.5;\">function&nbsp;createdir($path,$mode){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;if(is_dir($path)){&nbsp;&nbsp;//</span><span style=\"line-height:1.5;\">判断目录存在否，存在不创建</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;\"</span><span style=\"line-height:1.5;\">目录</span><span style=\"line-height:1.5;\">\'\"&nbsp;.&nbsp;$path&nbsp;.&nbsp;\"\'</span><span style=\"line-height:1.5;\">已经存在</span><span style=\"line-height:1.5;\">\";</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;//</span><span style=\"line-height:1.5;\">不存在创建</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$re=mkdir($path,$mode,true);&nbsp;//</span><span style=\"line-height:1.5;\">第三个参数为</span><span style=\"line-height:1.5;\">true</span><span style=\"line-height:1.5;\">即可以创建多</span><span style=\"line-height:1.5;\">级目录</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($re){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;\"</span><span style=\"line-height:1.5;\">目录创建成功</span><span style=\"line-height:1.5;\">\";</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;\"</span><span style=\"line-height:1.5;\">目录创建失败</span><span style=\"line-height:1.5;\">\";</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">$path=\"/aa/bb/cc/cd\";&nbsp;//</span><span style=\"line-height:1.5;\">要创建的目录</span><br />\r\n<span style=\"line-height:1.5;\">$mode=0755;&nbsp;//</span><span style=\"line-height:1.5;\">创建目录的模式</span><br />\r\n<span style=\"line-height:1.5;\">createdir($path,$mode);//</span><span style=\"line-height:1.5;\">测试</span> \r\n</p>','写出一个能创建多级目录的PHP函数？',17),(44,'<span style=\"line-height:1.5;\"><span style=\"line-height:2;\">window.onload：载入HTML代码到内存</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">形成DOM树</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">载入全部资源（文本、图片、样式）</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">执行Javascript脚本。</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:2;\">ready方法执行流程如下：载入HTML代码到内存</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">形成DOM树结构</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">执行jQuery脚本</span><span style=\"font-family:Wingdings;font-size:medium;line-height:2;\">à</span><span style=\"line-height:2;\"></span><span style=\"line-height:2;\">载入全部资源（文本、图片、样式）</span></span><br />\r\n<span style=\"line-height:2;\">所以ready方法的执行速度要快于window.onload方法</span><br />\r\n<div>\r\n	<br />\r\n</div>','window.onload事件与ready()区别',15),(45,'<span style=\"line-height:1.5;\">1)通过在url尾部追加随机数 \"?fresh=\" + Math.random(); 来解决Ajax缓存问题</span><br />\r\n<span style=\"line-height:1.5;\">2)通过在url尾部追加时间戳的形式 \"?timestamp=\" + new Date().getTime(); 来解决Ajax缓存问题</span><br />\r\n<span style=\"line-height:1.5;\">3)在ajax发送请求前加上 xmlHttpRequest.setRequestHeader(\"If-Modified-Since\",\"0\");来解决</span><br />\r\n<span style=\"line-height:1.5;\">If-Modified-Since是标准的HTTP请求头标签，在发送HTTP请求时，把浏览器端缓存页面的最后修改时间一起发到服务器去，服务器会把这个时间与服务器上实际文件的最后修改时间进行比较。</span><br />\r\n<span style=\"line-height:1.5;\">如果时间一致，那么返回HTTP状态码304（不返回文件内容），客户端接到之后，就直接把本地缓存文件显示到浏览器中。如果时间不一致，就返回HTTP状态码200和新的文件内容，客户端接到之后，会丢弃旧文件，把新文件缓存起来，并显示到浏览器中</span><br />\r\n<span style=\"line-height:1.5;\">4)通过服务器端禁用浏览器缓存(设置HTTP协议的Cache-Control选项)</span><br />\r\n<span style=\"line-height:1.5;\">header(\"Cache-Control: no-cache, must-revalidate\");</span><br />\r\n<span style=\"line-height:1.5;\">5)在ajax发送请求前加上 xmlHttpRequest.setRequestHeader(\"Cache-Control\",\"no-cache\");</span><br />\r\n<span style=\"line-height:1.5;\">6)用POST替代GET：不推荐&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"></span>','怎么解决Ajax的缓存问题？',10),(46,'<span style=\"color:#E53333;\"><strong>事件驱动式：</strong></span>当用户的行为（点击、移动）会被Javascript系统所捕获，并执行相应的事件处理程序，我们把这个过程就称之为事件驱动式。<br />\r\n<span style=\"color:#E53333;\"><strong>window.onload</strong></span> 是javaScript 的页面加载完成事件，当一个Web页面加载完成后就会触发执行window.onload 里的代码，一般可以用这个事件做一些页面数据初始化之类的工作。<br />\r\n<br />\r\n<span></span> \r\n<p>\r\n	<span style=\"color:#E53333;\"><strong>同步与异步描述的是一种行为方式，阻塞与非阻塞描述的是一种状态</strong></span> \r\n</p>\r\n<span style=\"color:#E53333;\"><strong>异步：</strong></span>代码执行不按顺序，‘跳过’执行，待其他某些代码执行完后，再来执行，称为“异步”，例如：定时器，ajax。<br />\r\n<span style=\"color:#E53333;\"><strong>同步：</strong></span>代码依次执行。<br />\r\n<span style=\"color:#E53333;\"><strong>阻塞：</strong></span>同步时，因为它们在数据由内核空间复制回进程缓冲区时都是阻塞的(不能干别的事)<br />\r\n<span style=\"color:#E53333;\"><strong>非阻塞：</strong></span>异步时，即在1数据准备完成、2由内核空间拷贝回缓冲区后 通知进程，在等待通知的这段时间里可以干别的事。<br />\r\n<div>\r\n	<br />\r\n</div>','理解Javascript事件驱动编程机制，以及window.onload的理解，以及异步，同步，阻塞，非阻塞的概念',15),(47,'__sleep serialize序列化之前被调用<br />\r\n<br />\r\n__wakeup unserialize反序列化时被调用<br />\r\n<br />\r\n__toString将一个对象当作字符串输出时被调用<br />\r\n<br />\r\n__set_state调用var_export时被调用，用__set_state的返回值作为var_export的返回值<br />\r\n<br />\r\n__construct构造函数，实例化对象时被调用<br />\r\n<br />\r\n__destruct析构函数，当对象销毁时被调用<br />\r\n<br />\r\n__call对象调用某个方法，若存在该方法，则直接调用，若不存在，则调用__call函数<br />\r\n<br />\r\n__get读取一个对象属性时，若属性存在，则直接返回，若不存在，则调用__get函数<br />\r\n<br />\r\n__set设置一个对象的属性时，若属性存在，则直接赋值，若不存在，则调用__set函数<br />\r\n<br />\r\n__isset检测一个对象的属性是否存在时被调用<br />\r\n<br />\r\n__unset unset一个对象的属性时被调用<br />\r\n<br />\r\n__clone克隆对象时被调用<br />\r\n<br />\r\n__autoload实例化一个对象时，如果对应的类不存在，则该方法被调用<br />','PHP5 中魔术方法函数有哪几个，请举例说明各自的用法',6),(48,'<span style=\"color:#E53333;line-height:2;\"><strong>服务器端字符集包含:</strong></span><br />\r\n<span style=\"line-height:2;\"> 服务器端字符集：服务器字符集、数据库字符集、数据表字符集、字段字符集</span><br />\r\n<span style=\"line-height:2;\"> 客户端字符集：客户端字符集、连接字符集、结果字符集。</span><br />\r\n<span style=\"color:#E53333;line-height:2;\"><strong>服务器端各字符集继承关系:</strong></span><br />\r\n<span style=\"line-height:2;\"> 如果字段没有设置字符集，将继承数据表的字符集；</span><br />\r\n<span style=\"line-height:2;\"> 如果数据表没有设置字符集，将继承数据库的字符集；</span><br />\r\n<span style=\"line-height:2;\"> 如果数据库没有设置字符集，将继承服务器的字符集；</span><br />\r\n<span style=\"line-height:2;\"> 如果服务器没有设置字符集，将使用安装MySQL时的字符集(latin1)。</span><br />\r\n<span style=\"color:#E53333;line-height:2;\">越靠近数据的字符集优先级越高。</span><br />\r\n<span style=\"color:#E53333;line-height:2;\">由于数据库字符集优先级高于服务器的，</span><span style=\"color:#E53333;line-height:2;\">因此在修改my.ini文件之后，在cmd下查看数据库默认的字符集仍然是utf8。</span><br />\r\n<span style=\"line-height:2;\"> 可以通过</span><span style=\"color:#E53333;line-height:2;\">show variables like \'char%\'</span><span style=\"line-height:2;\">命令查看当前系统字符集设置情况</span><br />\r\n<span style=\"color:#E53333;line-height:2;\"><strong>服务器字符集设置：</strong></span><span style=\"line-height:2;\">修改my.ini配置文件，一般不推荐修改</span><br />\r\n<span style=\"color:#E53333;line-height:2;\"><strong>客户端设置：</strong></span><span style=\"line-height:2;\">使用set names 来修改</span><br />\r\n<span style=\"color:#E53333;line-height:2;\"><strong>字段字符集设置：</strong></span><br />\r\n<span style=\"line-height:2;\"> ALTER TABLE table表名 MODIFY 字段名 字段类型 [CHARSET gbk] 字段属性</span><br />\r\n<span style=\"color:#E53333;line-height:2;\"><span style=\"color:#E53333;\">注意：</span><span style=\"color:#E53333;\">字段字符集应该在属性之前，类型之后来添加</span></span><br />\r\n<span style=\"color:#E53333;\"></span><br />\r\n<span></span>','为什么在修改my.ini文件之后，在cmd下查看数据库默认的字符集不是latin1而是utf8?',1),(49,'<p>\r\n	我们可以通过<span style=\"line-height:1.5;\">修改my.ini配置文件来实现，默认安装MYSQL时选择的字符集就是utf8。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\"> </span> \r\n</p>\r\n<p>\r\n	my.ini 配置决定两个选项：database、server\r\n</p>\r\n<p>\r\n	set&nbsp;names&nbsp;gbk 决定客户端的三个字符集：client（显示字符集）、connection（连接字符集）、results<span style=\"line-height:1.5;\">（返回结果字符集）</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','如果在创建数据库的时候不想设定字符集是utf8，希望它默认的就是utf8，那么可以通过哪些方法实现?',1),(50,'<p>\r\n	如果数据表的字符集是utf8，而数据字段的字符集是latin1，此时无法向数据表中插入一个中文字符串的值，\r\n</p>\r\n<p>\r\n	会提示一个错误：不正确的value值对于当前已经修改为latin1字符集的那个字段<span></span> \r\n</p>\r\n<p>\r\n	字符集的优先级原则是：越靠近数据，字符集优先级越高，最高的设置应该是字段的字符集\r\n</p>\r\n<p>\r\n	也就是说如果字段字符集设置为latin1，那么插入的值不能是中文，因此汉字无法正常插入\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">而正常在cmd下显示的中文</span><span style=\"line-height:1.5;\">结果不会乱码，是因为</span><span style=\"line-height:1.5;\">在通过</span><span style=\"line-height:1.5;\">set names gbk;</span><span style=\"line-height:1.5;\">设置客户端字符集之后，</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">影响了返回结果字符集（character_set_results</span><span style=\"line-height:1.5;\">），</span><span style=\"line-height:1.5;\">而最终的显示结果就是以返回结果字符集为准，</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">也就是说如果数据表的字符集和表中字段的字符集都是utf8，在set names&nbsp;gbk声明客户端字符集之后，数据结果虽然能够正常显示，但是在cmd下看到的最终结果其实是gbk，并不是utf8</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\"><img src=\"/Public/Admin/js/editor/attached/image/20160607/20160607150540_65755.jpg\" alt=\"\" /><br />\r\n</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','如果数据表的字符集是utf8，而数据字段的字符集是latin1，那么当向数据表中插入一条记录时候，是否会显示乱码？',1),(51,'<p>\r\n	这两种字段类型在cmd下显示的结果<span>是一样的</span>，但是timestamp只能插入一个整型，不能是其它，而datetime是只能以规定的格式输入。\r\n</p>\r\n<p style=\"margin-left:21.0000pt;text-indent:-21.0000pt;\">\r\n	datetime字段类型长度是19位的字符串。像“2016-03-12&nbsp;00:00:00”格式。直接输入19个字符的日期时间字符串；\r\n</p>\r\n<p style=\"margin-left:21.0000pt;text-indent:-21.0000pt;\">\r\n	timestamp一般插入一个整型(int)类型的数据，该字段的内容一般不手动输入，通常用now()函数插入，会自动获得当前的时间戳\r\n</p>\r\n<p style=\"margin-left:21.0000pt;text-indent:-21.0000pt;\">\r\n	timestamp类型的字段当你要更新某一条<span></span>某个数据时，timestamp所在的列的值会自动更新\r\n</p>\r\n<p>\r\n	<span style=\"color:#E53333;\"><strong>提示：</strong></span>一般在数据表中，发布时间、更新时间这些字段用int类型表示。也就是将PHP的时间戳（time()函数获得）存到数据表中。在读取时再用PHP中<span></span>的date()函数格式化成想要的格式。\r\n</p>','timestamp和datetime字段二者的区别？',1),(52,'<p>\r\n	可以，但首先要保证id主键要是自增长的。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	因为id字段它的属性有auto_increment、primary&nbsp;key。\r\n</p>\r\n<p>\r\n	primary&nbsp;key列的值：不能重复，也不能为空，但是<span style=\"line-height:1.5;\">id字段的值，可以用关键字NULL代替</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','如果id已经设置了一个not null的属性，那么在插入一条记录的时候是否可以对id字段的值添加一个值为null的数据？',1),(53,'<p>\r\n	如果去掉not&nbsp;null属性，则该列的值可以写入NULL值。\r\n</p>\r\n<p>\r\n	例如：enum(‘男’,&nbsp;‘女’)，并省略了not&nbsp;null，则可以添加一个NULL值。\r\n</p>\r\n<p>\r\n	not null表示该字段是否可以为空，default 表示的是默认值，如果要插入的字段有值，则不会插入默认值，加上not null表示该字段不能插入null空值\r\n</p>','在设置字段类型的时候，如果默认设置了属性not null，而我又设置了default，那么这个not null类型的属性可以去掉吗？',1),(54,'<p>\r\n	<span style=\"line-height:1.5;\">首先要了解对于不同整型int tinyint smallint bigint这几个默认的占据空间（或者存储空间）是多大？</span><br />\r\n<span style=\"line-height:1.5;\">tinyint:(1) 占用1个字节(8位2进制) &nbsp;&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">smallint:(2) &nbsp;占用2个字节(16位2进制) &nbsp; &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">mediumint:(3) &nbsp;占用3个字节(24位2进制) &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">int(4) &nbsp; 占用4个字节(32位2进制)</span><br />\r\n<span style=\"line-height:1.5;\">bigint:(8) &nbsp;占用8个字节(64位2进制)</span><br />\r\n<span style=\"line-height:1.5;\">int(8)对于整数类型 括号里面的值不影响类型实际可以存储的范围，只是代表显示宽度，当实际内容不到这个宽度的时候在前面用0填充（只有在创建表的时候使用了ZEROFILL才有这个效果）</span><br />\r\n<span style=\"line-height:1.5;\">也就是说int(4) int(6) int(8)不会影响它的可存储范围，它还是（-2147483648-2147483647），它还是占用4个字节，只是如果在创建表的时候指定这一列用ZEROFILL修饰了，那么取回值得时候如果不够这里指定的位数，会在前面填0</span><br />\r\n<span style=\"line-height:1.5;\">int(8)理解：如果整型值不够8位，则左边用空格填充。如果超过8位，则不用填充空格。这个空格是看不见的，可以使用zerofill来验证。</span><br />\r\n<span style=\"line-height:1.5;\">例如：int(1)能不能存储1000这个数。int中的最大值如果是有符号的（默认）：2147483647，如果是无符号的： 4294967295</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"></span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','关于字段类型中比如int(8)中的这个8怎么理解？',1),(55,'<span style=\"line-height:1.5;\">isset &nbsp;主要用来判断变量是否被初始化过</span><br />\r\n<span style=\"line-height:1.5;\">empty &nbsp;可以将值为 “假”、“空”、“0”、“NULL”、“未初始化” 的变量都判断为TRUE</span><br />\r\n<span style=\"line-height:1.5;\">is_null &nbsp;仅把值为 “NULL” 的变量判断为TRUE</span><br />\r\n<span style=\"line-height:1.5;\">var == null &nbsp;把值为 “假”、“空”、“0”、“NULL” 的变量都判断为TRUE</span><br />\r\n<span style=\"line-height:1.5;\">var === null &nbsp;仅把值为 “NULL” 的变量判断为TRUE</span><br />\r\n<span style=\"line-height:1.5;\">所以我们在判断一个变量是否真正为“NULL”时，大多使用 is_null，从而避免“false”、“0”等值的干扰。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','关于PHP中的“NULL” 和 “空”两个概念',4),(56,'<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">形式1：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;form &nbsp;action=\"目标文件.php\" method=\"get\"&gt;&lt;/form&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">形式2：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;ahref=”目标文件.php？data1=5&amp;data2=cctv&amp;age=18”&gt;链接文字&lt;/a&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">形式3：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;script&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">location.href = “目标文件.php？data1=5&amp;data2=cctv&amp;age=18”;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;/script&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">形式4：php的跳转语法</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//语法形式： header(“location: 目标网页地址”);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">header(“location: 目标文件.php？data1=5&amp;data2=cctv&amp;age=18”);</span>','PHP中get方式提交数据的几种形式？',4),(57,'<span style=\"line-height:1.5;\">换浏览器重新访问就好了，因为xml本身不是用来显示内容的，有些浏览器不支持显示效果，</span><br />\r\n<span style=\"line-height:1.5;\">只要在XMLSpy软件中验证没有问题就可以了----重点强调过的</span><br />\r\n<span style=\"line-height:1.5;\"></span>','使用&符引用实体为什么报错？？？',10),(58,'<p style=\"font-family:Simsun;font-size:medium;\">\r\n	<span style=\"line-height:1.5;\">引用实体格式：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;!DOCTYPE note SYSTEM \'note.dtd\'&gt; &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">实体引用名note是指什么？？？</span><br />\r\n<span style=\"line-height:1.5;\">指文档中的第一个自定义标签，也就是“根标签”</span>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<br />','xml引用实体格式是什么？实体引用名note是指什么？',10),(59,'<span style=\"line-height:1.5;color:#E53333;\">区别一，定长和变长</span><br />\r\n<span style=\"line-height:1.5;\">char表示定长，长度固定，varchar表示变长，长度可变</span><br />\r\n<span style=\"line-height:1.5;\">char(10)表示存储的是10个字符，无论你插入的是多少，都是10个，不够的会用空格填满。varchar(10)按实际字符个数存储，小于10个的话，插入多少个字符就存多少个。</span><br />\r\n<span style=\"line-height:1.5;\">varchar怎么知道所存储字符串的长度呢？实际上，对于varchar字段来说，需要使用一个(如果字符串长度小于255)或两个字节(长度大于255)来存储字符串的长度。</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">区别之二，存储的容量不同</span><br />\r\n<span style=\"line-height:1.5;\">char最多能存放255个字符，和编码无关。</span><br />\r\n<span style=\"line-height:1.5;\">而varchar最多能存放65532个字符。</span><br />\r\n<span style=\"line-height:1.5;\">varcha的最大有效长度由最大行大小和使用的字符集确定，整体最大长度是65532字节</span><br />\r\n<span style=\"line-height:1.5;\">varchar在存字符串的时候，第一个字节是空的，不存任何的数据，然后还需要两个字节来存放字符串的长度。所以有效长度就是65535-1-2=65532</span><br />\r\n<span style=\"line-height:1.5;\">由字符集来确定，字符集分单字节和多字节</span><br />\r\n<span style=\"line-height:1.5;\">Latin1一个字符占一个字节，最多能存放65532个字符</span><br />\r\n<span style=\"line-height:1.5;\">GBK一个字符占两个字节，最多能存32766个字符</span><br />\r\n<span style=\"line-height:1.5;\">UTF8一个字符占三个字节，最多能存21844个字符</span><br />\r\n<span style=\"line-height:1.5;\">英文字母在gbk和utf8下默认都是1个字节</span><br />\r\n<span style=\"line-height:1.5;\">中文汉字在gbk下占2个字节，在utf8下占3个字节</span><br />\r\n<span style=\"line-height:1.5;\">注意，char和varchar后面的长度表示的是字符的个数，而不是字节数</span><br />\r\n<span style=\"line-height:1.5;\">两者相比较，char的效率高，没有碎片，尤其是更新比较频繁的时候，方便数据文件指针的操作。但不够灵活，在实际使用时，应根据实际需求来选用合适的数据类型</span><br />\r\n<span style=\"line-height:1.5;\"></span>','关于char和varchar两种数据类型的区别？',1),(60,'<span style=\"line-height:1.5;color:#E53333;\"><strong>php操作mysql数据库基本函数：</strong></span><br />\r\n<span style=\"line-height:1.5;\">$link = mysql_connent(\"数据库服务器地址\",\"用户名\",\"密码\");</span><br />\r\n<span style=\"line-height:1.5;\">mysql_query(\"set names 网页文件编码名\");</span><br />\r\n<span style=\"line-height:1.5;\">mysql_query(\"use 数据库名\"); 也可以这样写：mysql_select_db(\"数据库名\");</span><br />\r\n<span style=\"line-height:1.5;\">然后，开始正式执行要完成的数据库操作任务：</span><br />\r\n<span style=\"line-height:1.5;\">$result = mysql_query(\"select / delete / update / insert / desc / show......\");</span><br />\r\n<span style=\"line-height:1.5;\">对于mysql_query()这个函数，可以执行“几乎任何sql语句“,</span><br />\r\n<span style=\"line-height:1.5;\">通常只有两种情况：</span><br />\r\n<span style=\"line-height:1.5;\">情况1：执行没有数据返回的语句：执行结果只有true和false两种情况；</span><br />\r\n<span style=\"line-height:1.5;\">情况2：执行有数据返回的语句：成功返回“结果集”，失败返回false；</span><br />\r\n<span style=\"line-height:1.5;\">特别注意：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_query()返回的是资源类型的数据；</span><br />\r\n<span style=\"line-height:1.5;\">以下的函数都是从‘结果集’中取出数据，即mysql_query语句执行的结果</span><br />\r\n<span style=\"line-height:1.5;\">mysql_fetch_assoc($result);</span><br />\r\n<span style=\"line-height:1.5;\">从结果集中取出\"一行数据\"，以字段下标返回</span><br />\r\n<span style=\"line-height:1.5;\">mysql_fetch_row($result);</span><br />\r\n<span style=\"line-height:1.5;\">从结果集中取出\"一行数据\"，以枚举数组返回</span><br />\r\n<span style=\"line-height:1.5;\">mysql_fetch_array($result);</span><br />\r\n<span style=\"line-height:1.5;\">从结果集中取出\"一行数据\"，并以混合数组形式返回</span><br />\r\n<span style=\"line-height:1.5;\">$n1 = mysql_num_rows($result);</span><br />\r\n<span style=\"line-height:1.5;\">获得该结果集的数据行数</span><br />\r\n<span style=\"line-height:1.5;\">$n2 = mysql_num_fields($result);</span><br />\r\n<span style=\"line-height:1.5;\">获得该结果集的数据列数</span><br />\r\n<span style=\"line-height:1.5;\">$name = mysql_field_name($result,$i);</span><br />\r\n<span style=\"line-height:1.5;\">获得结果集的第 i 个字段的名字！i从0开始算起</span>','php操作mysql数据库基本函数',1),(61,'<span style=\"line-height:1.5;\">数据库的备份和恢复：</span><br />\r\n<span style=\"line-height:1.5;\">备份：mysqldump &nbsp;-h服务器地址 -u登录名 -p &nbsp;数据库名 &gt; 文件名</span><br />\r\n<span style=\"line-height:1.5;\">恢复：mysql &nbsp;-h服务器地址 -u登录名 -p &nbsp;数据库名 &lt; 文件名</span><br />\r\n<span style=\"line-height:1.5;\">文件名一般写一个完整的路径，eg：f:/db1.sql</span><br />\r\n<span style=\"line-height:1.5;\">这两个命令，都是在“没有登录mysql”的时候使用；</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />\r\n<span style=\"line-height:1.5;\">source恢复数据表时必须先选择数据库，或者在创建表之前创建一个数据库并使用它。</span><br />\r\n<span style=\"line-height:1.5;\">可以用以下语句“恢复”（导入）数据：</span><br />\r\n<span style=\"line-height:1.5;\">mysql登录后：source &nbsp;“备份数据文件的完整路径”</span><br />\r\n<span style=\"line-height:1.5;\">source “f:/db1.sql”;</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','数据库的备份与恢复和source恢复数据表',1),(62,'<span style=\"line-height:1.5;\">1、浮点数存在误差问题；</span><br />\r\n<span style=\"line-height:1.5;\">2、对货币等对精度敏感的数据，应该用定点数表示或存储；</span><br />\r\n<span style=\"line-height:1.5;\">3、编程中，如果用到浮点数，要特别注意误差问题，并尽量避免做浮点数比较；</span><br />\r\n<span style=\"line-height:1.5;\">4、要注意浮点数中一些特殊值的处理；</span><br />\r\n<span style=\"line-height:1.5;\">5、float精度不能超过6.否则出错.因为float类型最多允许精确到小数点后6位。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','关于float浮点数据类型的注意事项及精度问题',4),(63,'<span style=\"line-height:1.5;\">Mysql不支持在登录状态下清空屏幕，如果需要清屏，exit退出mysql登录状态，输入cls指令清屏。</span><br />\r\n<span style=\"line-height:1.5;\"> <span></span><span></span><span style=\"color:#E53333;\">清空数据表sql指</span><span></span><span style=\"color:#E53333;\">令：</span>TRUNCATE TABLE \'表名\'</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">修改数据表的表名：</span>alter table 表名 rename to 新表名</span>','Mysql在cmd下如何清屏？Mysql如何清空数据表？如何修改数据表的表名？',1),(64,'<p>\r\n	<span style=\"line-height:1.5;\">mysql中的ENUM和SET其实都是string类型的，而且只能在指定的集合里取值,不同的是SET可以取多个值，ENUM只能取一个值。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">SET类型：</span><br />\r\n<span style=\"color:#E53333;\">SET是一个字符串对象，可以有零或多个值，其值来自表创建时规定的允许的一列值。</span>指定包括多个SET成员的SET列值时各成员之间用逗号(‘,’)间隔开。所以SET成员值本身不包含逗号。&nbsp;<br />\r\nSET最多可以有64个不同的成员。&nbsp;<br />\r\n当创建表时，SET成员值的尾部空格将自动被删除。&nbsp;<br />\r\n当检索时，保存在SET列的值使用列定义中所使用的大小写来显示。注意当为SET列分配值时应考虑大小写。<br />\r\n<span style=\"color:#E53333;\">ENUM类型：</span><br />\r\n<span style=\"color:#E53333;\">ENUM是一个字符串对象，其值来自表创建时在列规定中显式枚举的一列值。&nbsp;</span><br />\r\n在某些情况下，ENUM值也可以为空字符串(\'\')或NULL：&nbsp;<br />\r\n如果你将一个非法值插入ENUM(也就是说，允许的值列之外的字符串)，将插入空字符串以作为特殊错误值。该字符串与“普通”空字符串不同，该字符串有数值值为0。&nbsp;<br />\r\n如果将ENUM列声明为允许NULL，NULL值则为该列的一个有效值。如果ENUM列被声明为NOT NULL，其默认值为允许的值列的第1个元素。<br />\r\n</span> \r\n</p>','Mysql中set和enum类型的区别？',1),(65,'<p>\r\n	<span style=\"line-height:1.5;\">值传递：将对象的编号拷贝了一份，这两个变量的编号共同指向同一个对象</span> \r\n</p>\r\n<p>\r\n	<img src=\"/Public/Admin/js/editor/attached/image/20160608/20160608184402_18083.bmp\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">引用传递：两个变量共同指向同一个对象编号，该对象编号指向这一个对象</span> \r\n</p>\r\n<p>\r\n	<img src=\"/Public/Admin/js/editor/attached/image/20160608/20160608184416_60130.bmp\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">因此，这两种传值方式，只要修改其中的一个变量的值，另一个对象的值也会发生改变</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>','面向对象中的值传递和引用传递如何理解？',6),(66,'<span style=\"line-height:1.5;\">Windows:</span><br />\r\n<span style=\"line-height:1.5;\">1.以系统管理员登陆；</span><br />\r\n<span style=\"line-height:1.5;\">2.停止MySQL服务；</span><br />\r\n<span style=\"line-height:1.5;\">3.进入CMD，进入MySQL的安装目录，假设是D:/MySQL/MySQL Server 5.0/；</span><br />\r\n<span style=\"line-height:1.5;\">4.跳过权限检查启动MySQL，</span><br />\r\n<span style=\"line-height:1.5;\">D:/MySQL/MySQL Server 5.0/bin/mysqld-nt –skip-grant-tables</span><br />\r\n<span style=\"line-height:1.5;\">5.重新打开一个CMD，进入D:/MySQL/MySQL Server 5.0/bin/，</span><br />\r\n<span style=\"line-height:1.5;\">重设root密码</span><br />\r\n<span style=\"line-height:1.5;\">D:/MySQL/MySQL Server 5.0/bin/mysqladmin -uroot flush-privileges password “newpassword”</span><br />\r\n<span style=\"line-height:1.5;\">D:/MySQL/MySQL Server 5.0/bin/mysqladmin -u root -p shutdown</span><br />\r\n<span style=\"line-height:1.5;\">将newpassword替换为你的新密码，第二个命令会让你重复输入一次新 密码。</span><br />\r\n<span style=\"line-height:1.5;\">6. 在cmd里net start mysql</span><br />\r\n<span style=\"line-height:1.5;\">Unix&amp;Linux：</span><br />\r\n<span style=\"line-height:1.5;\">1.用root或者运行mysqld的用户登录系统；</span><br />\r\n<span style=\"line-height:1.5;\">2.利用kill命令结束掉mysqld的进程；</span><br />\r\n<span style=\"line-height:1.5;\">3.使用–skip-grant-tables参数启动MySQL Server</span><br />\r\n<span style=\"line-height:1.5;\">#mysqld_safe –skip-grant-tables &amp;</span><br />\r\n<span style=\"line-height:1.5;\">4.然后用空密码方式使用root用户登录 MySQL；mysql -u root</span><br />\r\n<span style=\"line-height:1.5;\">5.为root@localhost设置新密码</span><br />\r\n<span style=\"line-height:1.5;\">mysql&gt; update mysql.user set password=PASSWORD（\'新密码\'） where User=\'root\'mysql&gt; flush privileges；mysql&gt; quit</span><br />\r\n<span style=\"line-height:1.5;\">6. 重新启动MySQL</span><br />\r\n<br />\r\n<br />\r\n<span style=\"line-height:1.5;\"></span>','Mysql忘记密码怎么办？',1),(67,'<p style=\"font-family:Simsun;font-size:medium;\">\r\n	&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\"&gt;<br />\r\n&lt;title&gt;键盘代码&lt;/title&gt;<br />\r\n&lt;script&gt;<br />\r\nfunction show(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;alert(\"ASCII代码是：\"+event.keyCode);<br />\r\n}<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;body onkeyup=\"show()\"&gt;&nbsp;&lt;/body&gt;<br />\r\n&lt;/html&gt;\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<br />','javascript如何获取按键的ASCII码？',15),(68,'<span style=\"line-height:1.5;\">提示要下下载应该是web服务器没有正确解析你的php，你可以到apache所在目录找到他的执行文件httpd,然后执行 httpd -M看看是否包含了php的模块</span><br />\r\n<span style=\"line-height:1.5;\">看一下你的apache配置文件里面有没有加上下面这一行：</span><br />\r\n<span style=\"line-height:1.5;\">AddType application/x-httpd-php .php</span><br />\r\n<span style=\"line-height:1.5;\"></span>','为什么打开PHP文件浏览器提示要下载？',4),(69,'<span style=\"line-height:1.5;\">Label 中有两个属性是非常有用的,一个是FOR、另外一个就是ACCESSKEY了。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">FOR属性：</span><br />\r\n<span style=\"line-height:1.5;\">功能：表示Label标签要绑定的HTML元素，你点击这个标签的时候，所绑定的元素将获取焦点。</span><br />\r\n<span style=\"line-height:1.5;\">ACCESSKEY属性：</span><br />\r\n<span style=\"line-height:1.5;\">功能：表示访问Label标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">用法：<label for=\"InputBox\" accesskey＝\"n\"=\"\">姓名&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">局限性：accessKey属性所设置的快捷键不能与浏览器的快捷键冲突，否则将优先激活浏览器的快捷键。</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','关于Label标签属性的作用？',2),(70,'<span style=\"line-height:1.5;\">1.count(1)与count(*)得到的结果一致，包含null值。</span><br />\r\n<span style=\"line-height:1.5;\">2.count(字段)不计算null值</span><br />\r\n<span style=\"line-height:1.5;\">3.count(null)结果恒为0</span><br />','count()统计null和count(字段)得到的记录结果是怎样的？',1),(71,'<span style=\"line-height:1.5;\">方法一：</span><br />\r\n<span style=\"line-height:1.5;\">进入MYSQL安装目录 打开MYSQL配置文件 my.ini 或 my.cnf查找 max_connections=100 修改为&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">max_connections=1000 服务里重起MYSQL即可</span><br />\r\n<span style=\"line-height:1.5;\">方法二：</span><br />\r\n<span style=\"line-height:1.5;\">MySQL的最大连接数默认是100，客户端登录：mysql -uusername -ppassword</span><br />\r\n<span style=\"line-height:1.5;\">设置新的最大连接数为200：mysql&gt; set GLOBAL max_connections=200</span><br />\r\n<span style=\"line-height:1.5;\">显示当前运行的Query：mysql&gt; show processlist</span><br />\r\n<span style=\"line-height:1.5;\">显示当前状态：mysql&gt; show status</span><br />\r\n<span style=\"line-height:1.5;\">退出客户端：mysql&gt; exit</span><br />\r\n<span style=\"line-height:1.5;\">查看当前最大连接数：mysqladmin -uusername -ppassword variables</span><br />','如何设置MySQL的最大连接数？',1),(72,'<span style=\"line-height:1.5;\">一般第3 范式就足以，用于表结构的优化，这样做既可以避免应用程序过于复杂同时也</span><br />\r\n<span style=\"line-height:1.5;\"> 避免了SQL 语句过于庞大所造成系统效率低下。</span><br />\r\n<span style=\"line-height:1.5;\"> 第一范式：若关系模式R 的每一个属性是不可再分解的，且有主键，则属于第一范式。</span><br />\r\n<span style=\"line-height:1.5;\"> 第二范式：若R 属于第一范式，且所有的非主键属性都完全函数依赖于主键属性，则满足第二范式。</span><br />\r\n<span style=\"line-height:1.5;\"> 第三范式：若R 属于第二范式，且所有的非主键属性没有一个是传递函数依赖于候选主键属性，则满足第三范式。</span><br />\r\n<span style=\"line-height:1.5;\"> 在实际使用中，可以根据需求适当的逆范式。</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','请简述数据库设计的三范式及应用。',17),(73,'<span style=\"line-height:1.5;\">什么是索引？</span><br />\r\n<span style=\"line-height:1.5;\">索引本身是一个独立的存储单位，在该单位里边有记录着数据表某个字段和字段对应的物理空间。</span><br />\r\n<span style=\"line-height:1.5;\">索引内部有算法支持，可以使得查询速度非常快</span><br />\r\n<span style=\"line-height:1.5;\">有了索引，我们根据索引为条件进行数据查询速度就非常快</span><br />\r\n<span style=\"line-height:1.5;\">① 索引本身有”算法”支持，可以快速定位我们要找到的关键字(字段)</span><br />\r\n<span style=\"line-height:1.5;\">② 索引字段与物理地址有直接对应，帮助我们快速定位要找到的信息</span><br />\r\n<span style=\"line-height:1.5;\">一个数据表的全部字段都可以设置索引</span><br />\r\n<div>\r\n	<span style=\"line-height:1.5;\">经常使用的索引为主键索引primary key，</span><span style=\"line-height:1.5;\">索引可以明显提升查询sql语句的速度</span><br />\r\n<span style=\"line-height:1.5;\">索引的四种类型：</span><br />\r\n<span style=\"line-height:1.5;\">① 主键 primary &nbsp;key &nbsp; &nbsp; &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">auto_increment必须给主键索引设置</span><br />\r\n<span style=\"line-height:1.5;\">信息内容要求不能为null，唯一</span><br />\r\n<span style=\"line-height:1.5;\">② 唯一 unique &nbsp;index</span><br />\r\n<span style=\"line-height:1.5;\">信息内容不能重复</span><br />\r\n<span style=\"line-height:1.5;\">③ 普通 index</span><br />\r\n<span style=\"line-height:1.5;\">没有具体要求</span><br />\r\n<span style=\"line-height:1.5;\">④ 全文 fulltext &nbsp;index（</span><span style=\"line-height:1.5;\">myisam数据表可以设置该索引）</span><br />\r\n<span style=\"line-height:1.5;\">复合索引：索引关联的字段是多个组成的，该索引就是复合索引。</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />\r\n</div>','什么是索引？索引的类型有哪几种？',1),(74,'<span style=\"line-height:1.5;\">文件上传：</span><br />\r\n<span style=\"line-height:1.5;\">文件上传是发生在请求阶段。</span><br />\r\n<span style=\"line-height:1.5;\">当服务器PHP程序，接收到浏览器post请求时，</span><span style=\"line-height:1.5;\">将所有接受到的字符串数据，存储到$_POST数组中，使用！</span><br />\r\n<span style=\"line-height:1.5;\">当浏览器需要上传文件时：</span><br />\r\n<span style=\"line-height:1.5;\">表单中的数据类型共两种：字符串型和文件型。</span><br />\r\n<span style=\"line-height:1.5;\">默认情况下，两类会将所有的表单元素，视为 字符串型！</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">如果需要上传文件，告知浏览器，表单中的数据存在多种类型（字符串和文件型）：</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">通过在form元素中增加属性：e</span><span style=\"line-height:1.5;color:#E53333;\">nctype=’multipart/form-data”&nbsp;（</span><span style=\"line-height:1.5;color:#E53333;\">编码类型 = 多部分/表单-数据）</span><br />\r\n<span style=\"line-height:1.5;\">当服务器脚本PHP，接收到文件类型的post数据时，将接收到的文件，存储在上传临时目录中。</span><br />\r\n<span style=\"line-height:1.5;\">默认为服务器所在操作系统的临时目录。</span><br />\r\n<span style=\"line-height:1.5;\">该临时文件有效期为脚本周期！（时间短）</span><br />\r\n<span style=\"line-height:1.5;\">通过延长脚本周期，从而测试：sleep(10);</span><br />\r\n<span style=\"line-height:1.5;\">PHP需要在临时文件未消失前，将其持久性存储！</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">通过函数：</span><span style=\"color:#E53333;\">move_uploaded_file(临时文件地址</span><span style=\"color:#E53333;\">，目标文件地址);</span><span style=\"color:#E53333;\">&nbsp;</span><span style=\"color:#E53333;\">移动已经上传的文件</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">通过预定义变量$_FILES获得所有的上传文件的信息。</span>它是一个系统函数</span><br />\r\n<span style=\"line-height:1.5;\">$tmp_file = $_FILES[\'goods_image\'][\'tmp_name\']; //临时文件地址</span><br />\r\n<span style=\"line-height:1.5;\">$dst_file = \'./abc.jpg\'; //目标文件地址</span><br />\r\n<span style=\"line-height:1.5;\">$result = move_uploaded_file($tmp_file, $dst_file); //移动文件到指定位置</span><br />\r\n<span style=\"line-height:1.5;\">var_dump($result);</span><br />\r\n<div>\r\n	<br />\r\n</div>','PHP实现上传文件的原理是什么？',5),(75,'<span style=\"line-height:1.5;color:#E53333;\"><strong>数组函数：</strong></span><br />\r\n<span style=\"line-height:1.5;\">指针操作函数：&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">current():获得数组的当前指针所在单元的“值”；</span><br />\r\n<span style=\"line-height:1.5;\">key():获得数组的当前指针所在单元的“键”（下标）；</span><br />\r\n<span style=\"line-height:1.5;\">next():先将数组的指针移向下（后）一个单元，然后取得该新单元的值；</span><br />\r\n<span style=\"line-height:1.5;\">prev():先将数组的指针移向上（前）一个单元，然后取得该新单元的值；</span><br />\r\n<span style=\"line-height:1.5;\">reset():先将数组的指针直接移向第一个单元，然后取得该新单元的值；</span><br />\r\n<span style=\"line-height:1.5;\">end($arr):先将数组的指针直接移向最后一个单元，然后取得该新单元的值；</span><br />\r\n<span style=\"line-height:1.5;\">each($arr):先将数组的指针直接移向第一个单元，然后取得该新单元的值；</span><br />\r\n<span style=\"line-height:1.5;\">单元操作函数：&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">array_pop($arr):将数组最后一个单元弹出，并将数组的长度减1；</span><br />\r\n<span style=\"line-height:1.5;\">array_push($arr):将一个或多个单元压入数组的末尾，数组的长度加1；</span><br />\r\n<span style=\"line-height:1.5;\">array_shift($arr):将数组开头的单元移出数组，数组的长度减1，并将所有其它单元向前移动一位。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">array_unshift($arr):在数组开头插入一个或多个单元。</span><br />\r\n<span style=\"line-height:1.5;\">array_slice($array,$offset,$length):从数组中取出一段，返回根据 offset 和 length 参数所指定的 array数组中的一段序列。</span><br />\r\n<span style=\"line-height:1.5;\">array_splice($array,$offset,$length): 把数组中的一部分去掉并用其它值取代，如果提供了 replacement 参数，则用其中的单元取代。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">排序函数：&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">sort($arr):把数组元素按照由小到大顺序重新排列</span><br />\r\n<span style=\"line-height:1.5;\">rsort:数组元素按照由大到小顺序重新排列</span><br />\r\n<span style=\"line-height:1.5;\">asort($arr):把数组元素按照值的大小从小到大重新排列，和sort()的区别是保持键不变</span><br />\r\n<span style=\"line-height:1.5;\">arsort:和asort()一样，只是值是按从大到小排列</span><br />\r\n<span style=\"line-height:1.5;\">ksort:把数组元素按照键由小到大排列</span><br />\r\n<span style=\"line-height:1.5;\">krsort:把数组元素按照键由大到小排列</span><br />\r\n<span style=\"line-height:1.5;\">usort($arr):使用用户自定义的比较函数对一个数组中的值进行排序。</span><br />\r\n<span style=\"line-height:1.5;\">shuffle: 将一个数组的元素打乱顺序</span><br />\r\n<span style=\"line-height:1.5;\">查找函数：&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">in_array(变量，数组) 用于判断变量是否是数组中的元素的值</span><br />\r\n<span style=\"line-height:1.5;\">注意：此函数经常用于表单提交数据的合法性判断。避免提交的数据不在配置数组中。</span><br />\r\n<span style=\"line-height:1.5;\">array_key_exists() 判断变量是否是数组中的某个键</span><br />\r\n<span style=\"line-height:1.5;\">同样经常用于表单提交数据的合法性判断</span><br />\r\n<span style=\"line-height:1.5;\">其他函数：&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">count(数组变量，是否进行递归统计)：统计数组元素函数</span><br />\r\n<span style=\"line-height:1.5;\">array_reverse(数组变量)：反转数组元素，返回一个单元为相反顺序的新数组</span><br />\r\n<span style=\"line-height:1.5;\">array_merge(数组变量1，数组变量2，…)： 功能是把多个数组合并成一个</span><br />\r\n<span style=\"line-height:1.5;\">array_sum(数组变量):求和函数</span><br />\r\n<span style=\"line-height:1.5;\">array_keys(数组变量) 返回数组中所有元素的键</span><br />\r\n<span style=\"line-height:1.5;\">array_values(数组变量) 返回数组中所有元素的值</span><br />\r\n<span style=\"line-height:1.5;\">array_map(回调函数，数组变量1，数组变量2，……..); 把回调函数作用于数组的每个元素上</span><br />\r\n<span style=\"line-height:1.5;\">array_walk(数组变量，回调函数); 同样是把回调函数作用于每个元素上</span><br />\r\n<span style=\"line-height:1.5;\">注意：回调函数是不能够影响到键的</span><br />\r\n<span style=\"line-height:1.5;\">range(起始值，结束值，步进)：建立一个包含指定范围单元的数组</span><br />\r\n<span style=\"line-height:1.5;\"><span>------------------------------------------------------------------------------</span><span>---------------</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\"><strong>字符串函数：</strong></span><br />\r\n<span style=\"line-height:1.5;\"><span></span><span>字符串输出：</span></span></span><br />\r\n<span style=\"line-height:1.5;\">echo()：输出一个或多个字符串</span><br />\r\n<span style=\"line-height:1.5;\">print()：输出一个字符串</span><br />\r\n<span style=\"line-height:1.5;\">printf()：输出格式化字符串</span><br />\r\n<span style=\"line-height:1.5;\">print_r():	输出变量的易于理解的信息(通常用于数组和对象)</span><br />\r\n<span style=\"line-height:1.5;\">var_dump(): 输出变量的最完整信息（通常用于调试找错）</span><br />\r\n<span style=\"line-height:1.5;\">字符串去除：</span><br />\r\n<span style=\"line-height:1.5;\">trim()：去除字符串 首尾 空白等特殊符号或指定字符序列</span><br />\r\n<span style=\"line-height:1.5;\">ltrim()：去除字符串 首 空白等特殊符号或指定字符序列</span><br />\r\n<span style=\"line-height:1.5;\">rtrim()：去除字符串 尾 空白等特殊符号或指定字符序列</span><br />\r\n<span style=\"line-height:1.5;\">字符串连接：</span><br />\r\n<span style=\"line-height:1.5;\">implode()：使用字符将数组的内容组合成一个字符串</span><br />\r\n<span style=\"line-height:1.5;\">join()：同 implode()</span><br />\r\n<span style=\"line-height:1.5;\">字符串分割：</span><br />\r\n<span style=\"line-height:1.5;\">explode()：使用一个字符串分割另一个字符串</span><br />\r\n<span style=\"line-height:1.5;\">str_split()：按指定的相等长度将字符串直接分割到数组中</span><br />\r\n<span style=\"line-height:1.5;\">字符串获取：</span><br />\r\n<span style=\"line-height:1.5;\">substr()：从字符串中获取其中的一部分</span><br />\r\n<span style=\"line-height:1.5;\">strstr()：查找字符串在另一个字符串中第一次出现的位置，并返回从该位置到字符串结尾的所有字符，别名函数为：strchr()</span><br />\r\n<span style=\"line-height:1.5;\">strrchr()：查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符</span><br />\r\n<span style=\"line-height:1.5;\">字符串替换：</span><br />\r\n<span style=\"line-height:1.5;\">substr_replace()：将字符串中指定位置开始的若干个字符替换为另一个字符</span><br />\r\n<span style=\"line-height:1.5;\">str_replace()：将字符串中的一些字符替换为另一些字符</span><br />\r\n<span style=\"line-height:1.5;\">字符串计算：</span><br />\r\n<span style=\"line-height:1.5;\">strlen()：取得字符串的长度</span><br />\r\n<span style=\"line-height:1.5;\">strpos()：定位字符串第一次出现的位置（对比js中indexOf)</span><br />\r\n<span style=\"line-height:1.5;\">strrpos()：定位字符串最后一次出现的位置(对比js中lastIndexOf)</span><br />\r\n<span style=\"line-height:1.5;\">------------------------------------------------------------------------------</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><strong>时间函数：</strong></span><br />\r\n<span style=\"line-height:1.5;\">time(): 获的一个秒数，是从1970-1-1 0：0：0开始算起的秒数。</span><br />\r\n<span style=\"line-height:1.5;\">microtime(): 获得一个“字符串”，前面部分是小数（单位是秒），后面部分是整数（单位也是秒）,中间是一个空格。含义同time()。如果带一个参数true，则获得是一个浮点数，但容易丢失精度。</span><br />\r\n<span style=\"line-height:1.5;\">格式化时间（将时间转换为字符串）：</span><br />\r\n<span style=\"line-height:1.5;\">date(\"时间的输出格式\", 时间);</span><br />\r\n<span style=\"line-height:1.5;\">Y: 年</span><br />\r\n<span style=\"line-height:1.5;\">m：月&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">d：日</span><br />\r\n<span style=\"line-height:1.5;\">H：时</span><br />\r\n<span style=\"line-height:1.5;\">i：分</span><br />\r\n<span style=\"line-height:1.5;\">s：秒</span><br />\r\n<br />','PHP中的数组处理函数和字符串处理函数？',4),(76,'<span style=\"color:#E53333;line-height:1.5;\"><strong>利用curl技术实现数据采集：</strong></span><br />\r\n<span style=\"line-height:1.5;\">1、初始化CURL请求：$link = curl_init([网址url]);</span><br />\r\n<span style=\"line-height:1.5;\">2、设置请求选项：curl_setopt($link, 选项名, 选项值)。常用选项如下：</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_URL：请求url地址，如果初始化时设置了，则此时无需设置</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_HTTPHEADER：请求头，以数组形式设定，类似这样： array</span><br />\r\n<span style=\"line-height:1.5;\">(\'host:www.php40.com\',\'Accept:text/html\',\'Accept-Language:zh-cn,zh\')</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_HEADER：true/false, 设置返回的数据中是否带响应头信息</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_RETURNTRANSFER：true/false, 设定执行请求时是否返回数据，默认false就是直接输出数据</span><br />\r\n<span style=\"line-height:1.5;\">参数CURLOPT_RETURNTRANSFER 将curl_exec()获取的信息以文件流的形式返回，而不是直接输出</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_POST：true/false, 设定是否为post请求，默认false</span><br />\r\n<span style=\"line-height:1.5;\">CURLOPT_POSTFIELDS：设定post数据，形式为数组：array(\'username\'=&gt;\'张三\',\'password\'=&gt;\'123\')</span><br />\r\n<span style=\"line-height:1.5;\">3、执行请求并返回结果：$result = curl_exec($link)</span><br />\r\n<span style=\"line-height:1.5;\">4、关闭CURL请求：curl_close($link);</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>curl数据采集常用函数：</strong></span><br />\r\n<span style=\"line-height:1.5;\">(bool) curl_setopt (int ch, string option, mixed value)</span><br />\r\n<span style=\"line-height:1.5;\">curl_setopt()函数将为一个CURL会话设置选项。option参数是你想要的设置，value是这个选项给定的值。</span><br />\r\n<span style=\"line-height:1.5;\">curl_close — 关闭一个curl会话</span><br />\r\n<span style=\"line-height:1.5;\">curl_copy_handle — 拷贝一个curl连接资源的所有内容和参数</span><br />\r\n<span style=\"line-height:1.5;\">curl_errno — 返回一个包含当前会话错误信息的数字编号</span><br />\r\n<span style=\"line-height:1.5;\">curl_error — 返回一个包含当前会话错误信息的字符串</span><br />\r\n<span style=\"line-height:1.5;\">curl_exec — 执行一个curl会话</span><br />\r\n<span style=\"line-height:1.5;\">curl_getinfo — 获取一个curl连接资源句柄的信息</span><br />\r\n<span style=\"line-height:1.5;\">curl_init — 初始化一个curl会话</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_add_handle — 向curl批处理会话中添加单独的curl句柄资源</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_close — 关闭一个批处理句柄资源</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_exec — 解析一个curl批处理句柄</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_getcontent — 返回获取的输出的文本流</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_info_read — 获取当前解析的curl的相关传输信息</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_init — 初始化一个curl批处理句柄资源</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_remove_handle — 移除curl批处理句柄资源中的某个句柄资源</span><br />\r\n<span style=\"line-height:1.5;\">curl_multi_select — Get all the sockets associated with the cURL extension, which can then be&nbsp;</span><span style=\"line-height:1.5;\">\"selected\"</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\">curl_setopt_array — 以数组的形式为一个curl设置会话参数</span><br />\r\n<span style=\"line-height:1.5;\">curl_setopt — 为一个curl设置会话参数</span><br />\r\n<span style=\"line-height:1.5;\">curl_version — 获取curl相关的版本信息</span><br />\r\n<span style=\"line-height:1.5;\">curl_init()函数的作用初始化一个curl会话，curl_init()函数唯一的一个参数是可选的，表示一个url地址。</span><br />\r\n<span style=\"line-height:1.5;\">curl_exec()函数的作用是执行一个curl会话，唯一的参数是curl_init()函数返回的句柄。</span><br />\r\n<span style=\"line-height:1.5;\">curl_close()函数的作用是关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄。如何设置curl：</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>使用curl抓取百度首页：</strong></span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">//1）初始化curl句柄<br />\r\n$ch = curl_init();<br />\r\n//2）设置curl<br />\r\n$url = \'http://www.baidu.com/\';<br />\r\ncurl_setopt($ch, CURLOPT_URL, $url);<br />\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //捕获内容但本次不输出<br />\r\n//3）执行curl<br />\r\n$output = curl_exec($ch);<br />\r\necho $output;<br />\r\n//4）关闭curl<br />\r\ncurl_close($ch);</span><br />\r\n<span style=\"line-height:1.5;background-color:#FF9900;\">curl_version() //获取curl相关的版本信息</span><br />\r\n<span style=\"line-height:1.5;background-color:#FF9900;\">print_r(curl_version())</span><br />\r\n<span style=\"line-height:1.5;background-color:#00D5FF;\">curl_getinfo()函数的作用是获取一个curl连接资源句柄的信息，curl_getinfo()函数有两个参数，第一个参数是</span><span style=\"line-height:1.5;background-color:#00D5FF;\">curl的资源句柄，第二个参数是一些常量。</span><br />\r\n<span style=\"line-height:1.5;background-color:#00D5FF;\">$ch = curl_init(\"http://www.baidu.com/\");</span><br />\r\n<span style=\"line-height:1.5;background-color:#00D5FF;\">print_r(curl_getinfo($ch));</span><br />\r\n<br />','PHP如何利用curl()函数实现数据采集？',5),(77,'<span style=\"line-height:1.5;\">使用session处理</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">session_start();</span><br />\r\n<span style=\"line-height:1.5;\">$code = mt_mand(0,1000000);</span><br />\r\n<span style=\"line-height:1.5;\">$_SESSION[\'code\'] = $code;</span><br />\r\n<span style=\"line-height:1.5;\">?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">将$code放到页面的隐藏域里同</span><br />\r\n<span style=\"line-height:1.5;\">&lt;input type=\"hidden\" name=\"flag\" value=\"&lt;?php $code;?&gt;\"/&gt;</span><br />\r\n<span style=\"line-height:1.5;\">接收页面进行判断</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">session_start();</span><br />\r\n<span style=\"line-height:1.5;\">if(isset($_POST[\'flag\']))</span><br />\r\n<span style=\"line-height:1.5;\">{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; if($_POST[\'flag\'] == $_SESSION[\'code\'])</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; {</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; //处理表单问题</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; else</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; {</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; echo \"请不要刷新本页面或重复提交表单\";</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">?&gt;</span><br />\r\n<span style=\"line-height:1.5;\"></span>','session阻止表单重复提交的代码实现？',5),(78,'<span style=\"line-height:1.5;\">可以使用，可以在类中通过 self::方法名 来调用，但是在这个方法中，因为该方法中有mysql_query()这个函数，这个函数的第二个参数是一个link链接，因此如果加上$this-&gt;link这个参数，就会访问出错！！！（此时$this就不知道是指向哪个对象了），因此不推荐使用static来修饰。 静态方法隶属于当前类，不能通过一个对象来访问其中的静态成员（静态方法除外）。</span><br />\r\n<span style=\"line-height:1.5;\">private function query($sql){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$result = mysql_query($sql,$this-&gt;link);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;if($result === false )</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;{</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;//对任何sql语句，执行失败，都需要处理这种失败情况：</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;echo \"\r\n<p>\r\n	sql语句执行失败，请参考如下信息：\";<br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;echo \"<br />\r\n错误代号：\" . mysql_errno();//获取错误代号</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;echo \"<br />\r\n错误信息：\" . mysql_error();//获取错误提示内部</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;echo \"<br />\r\n错误语句：\" . $sql;</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;die();</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return $result;	//返回的是“执行的结果”</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\"></span>\r\n</p>\r\n</span>','在MYSQLDB这个类中的错误处理方法query使用static修饰，可否？',6),(79,'<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\"><strong>serialize()</strong></span> 把变量和它们的值编码成文本形式，当对象在经过serialize之后，将会生成类似这样的一种字符串数据：</span><br />\r\n<span style=\"line-height:1.5;\">\"O:8:\"xuliehua\":2:{s:2:\"p1\";i:1;s:2:\"p2\";i:2;}\"</span><br />\r\n<span style=\"line-height:1.5;\">然后通过file_put_contents()函数写入并存储到硬盘上。</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\"><strong>unserialize() </strong></span>恢复原来的变量，先通过file_get_contents()函数将原来保存到硬盘上的内容转换成类似这样的一种字符串数据：</span><br />\r\n<span style=\"line-height:1.5;\">\"O:8:\"xuliehua\":2:{s:2:\"p1\";i:1;s:2:\"p2\";i:2;}\"</span><br />\r\n<span style=\"line-height:1.5;\">然后通过unserialize()函数将这个字符串反序列化变为一个对象。</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\"><strong>__sleep()：</strong></span>用于对象的序列化：</span><br />\r\n<span style=\"line-height:1.5;\">1，对一个对象进行序列化，只能将其属性数据“保存起来”，而方法被忽略（方法不是数据）</span><br />\r\n<span style=\"line-height:1.5;\">2，对象的序列化的时候，会自动调用该对象所属类的这个魔术方法：__sleep()</span><br />\r\n<span style=\"line-height:1.5;\">（前提是有该方法）。且此时，该数组，数组中是“计划”要进行序列化的属性名。</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\"><strong>__wakeup：</strong></span>用于对象的反序列化：</span><br />\r\n<span style=\"line-height:1.5;\">1，对一个对象进行反序列化，其实是恢复其原来保存起来的属性数据，</span><br />\r\n<span style=\"line-height:1.5;\">而且，此时必然需要依赖该对象原本的所属类；</span><br />\r\n<span style=\"line-height:1.5;\">2，对象在反序列化的时候，会自动调用该对象所属类的这个魔术方法：__wakeup()</span><br />','面向对象中的序列化和反序列化的理解？',6),(80,'<span style=\"line-height:1.5;\">默认的，PHP的文件操作函数，不是阻塞状态。自由操作状态。</span><br />\r\n<span style=\"line-height:1.5;\"> 当需要，一个脚本操作而需要阻塞另外的脚本操作时，需要用到文件锁。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>锁操作流程：</strong></span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>先加锁，检测锁是否加成功，如果成功再使用！</strong></span><br />\r\n<span style=\"line-height:1.5;\"> 锁定类型：</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>读锁：</strong></span><span style=\"line-height:1.5;\"> s-Lock(share-lock)共享锁，读操作前，期望增加的锁定。导致，允许并发读，阻塞额外的写操作。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>写锁：</strong></span><span style=\"line-height:1.5;\"> x-lock（exclusive-lock）排他锁，独占锁，写操作前，尝试添加的锁定类型。导致，其他脚本不能读也不能写。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>意向锁：</strong></span><span style=\"line-height:1.5;\">所有的操作资源的脚本都遵循一个约定来使用文件锁（约定）。</span><br />\r\n<span style=\"line-height:1.5;\"> 函数：</span><br />\r\n<span style=\"line-height:1.5;\"> Flock(句柄, 类型)：该函数用于添加PHP 的文件锁定。</span><br />\r\n<span style=\"line-height:1.5;\"> 类型：</span><br />\r\n<span style=\"line-height:1.5;\"> LOCK_SH	读锁</span><br />\r\n<span style=\"line-height:1.5;\"> LOCK_EX	写锁</span><br />\r\n<span style=\"line-height:1.5;\"> ①（读锁操作）：</span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160618/20160618171808_51794.bmp\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">②（写锁操作）：</span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160618/20160618171827_86876.bmp\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">此时②（被阻塞的状态）需要等待① 执行完才会执行！</span><br />\r\n<span style=\"line-height:1.5;\"> 强调，一定要判断锁是否可以添加成功！</span><br />\r\n<span style=\"line-height:1.5;\"> 可以通过LOCK_NB来在锁定失败时，不阻塞：</span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160618/20160618171841_90043.bmp\" alt=\"\" /><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">什么是堵塞：</span><span style=\"line-height:1.5;\">这是进程的术语，即多个进程对同一个文件进行独占锁定操作，其它的则被堵塞了；或是其它进程把此操作锁定文件的进程给堵塞了，使它不能工作。</span><span style=\"line-height:1.5;\"> 它通常与LOCK_SH 或LOCK_EX 做OR(|)组合</span><br />\r\n<span style=\"color:#E53333;\"><span></span><span style=\"color:#E53333;line-height:1.5;\">解锁：</span></span><br />\r\n<span style=\"line-height:1.5;\"> Flock($handle, LOCK_UN)来强制解</span>锁，<br />\r\nFclose()自动解锁！<br />\r\n<br />','PHP中的文件并发操作（文件锁）',5),(81,'<span style=\"line-height:1.5;\">① 在url地址后边以请求字符串(传递的get参数信息)形式传递数据。</span><br />\r\n<span style=\"line-height:1.5;\">② 对中文、=、&amp;等特殊符号需要编码处理</span><br />\r\n<span style=\"line-height:1.5;\">对特殊信息的处理：</span><br />\r\n<span style=\"line-height:1.5;\">在浏览器里通过get参数传递一些<span style=\"color:#006600;background-color:#00D5FF;\">特殊符号信息会被误解混淆</span>，例如 &amp; &nbsp;= 等，浏览器会把这样的信息当做get参数的一部分而进行一个错误的解析，为了避免这种情况发生，可以对该信息进行编码处理。有的浏览器传递中文会出现不识别问题，也可以进行编码处理。</span><br />\r\n<span style=\"line-height:1.5;\">(编码后的信息是相对底层的信息，浏览器会自动识别，获取的时候无需反编码)</span><br />\r\n<span style=\"line-height:1.5;\">①．在php里边可以函数 urlencode()/urldecode()对特殊符号进行编码、反编码处理</span><br />\r\n<span style=\"line-height:1.5;\">②．在javascript里边可以通过encodeURIComponent ()对特殊符号等信息进行编码。</span><br />\r\n<span style=\"line-height:1.5;\">以上红色函数可以把”特殊符号、中文”转变为浏览器可以识别不会混淆的信息。</span><br />\r\n<span style=\"line-height:1.5;\">编码后的信息为%号后接两个十六进制数</span><br />\r\n<span style=\"line-height:1.5;\"></span>','ajax之get请求需要注意的两个地方？',10),(82,'<span style=\"line-height:1.5;\">//1：建立连接：</span><br />\r\n<span style=\"line-height:1.5;\">$link = fsockopen(\'geek.csdn.net\',80);</span><br />\r\n<span style=\"line-height:1.5;\">//2：发出请求信息：</span><br />\r\n<span style=\"line-height:1.5;\">$request_data = \"GET /news/detail/57094 HTTP/1.1\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">$request_data .= \"Host: geek.csdn.net\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">$request_data .= \"Accept: text/html\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">$request_data .= \"Accept-Language: zh-CN\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">//如果没有以下这一行，会导致连接一直不能关闭，而超时</span><br />\r\n<span style=\"line-height:1.5;\">$request_data .= \"Connection: Close\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">$request_data .= \"\\r\\n\";</span><br />\r\n<span style=\"line-height:1.5;\">fwrite($link, $request_data);//这里才是发出</span><br />\r\n<span style=\"line-height:1.5;\">//3，接收响应信息：</span><br />\r\n<span style=\"line-height:1.5;\">$result = \'\';</span><br />\r\n<span style=\"line-height:1.5;\">while(!feof($link)){	//f是：file，eof指：end of file</span><br />\r\n<span style=\"line-height:1.5;\"> $result .= fread($link, 1024*1024*8);</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//echo $result;//这种方式显示，获得的内容会跟当前网页内容“混淆”，需要处理</span><br />\r\n<span style=\"line-height:1.5;\">$result = str_replace(\'&lt;textarea \',\'&amp;lt;textarea \', $result);</span><br />\r\n<span style=\"line-height:1.5;\">$result = str_replace(\'&lt;/textarea&gt;\',\'&amp;lt;/textarea&amp;gt;\', $result);</span><br />\r\n<span style=\"line-height:1.5;\">echo \"&lt;textarea cols=120 rows=35 &gt;$result&lt;/textarea&gt;\";</span><br />\r\n<span style=\"line-height:1.5;\">//4，关闭连接：</span><br />\r\n<span style=\"line-height:1.5;\">fclose($link);</span><br />','PHP如何利用fsockopen()函数实现数据采集？',5),(83,'<span style=\"line-height:1;\">if(!empty($_FILES)){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">foreach($_FILES as $key=&gt;$value){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">if(is_array($value[\'error\']) ) {</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">foreach($value[\'error\'] as $k =&gt; $v) {</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp; &nbsp; if</span><span style=\"line-height:1;\">($value[\'error\'][$k] == 0){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file = array();</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file[\'error\'] = $value[\'error\'][$k];//其实就是0</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file[\'name\'] = $value[\'name\'][$k];</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file[\'tmp_name\'] = $value[\'tmp_name\'][$k];</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file[\'type\'] = $value[\'type\'][$k];</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$file[\'size\'] = $value[\'size\'][$k];</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">uploadOneFile($file);</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><span style=\"line-height:1;\">else{<span></span></span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span></span></span><span style=\"line-height:1;\">uploadOneFile($value);</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">function uploadOneFile( $file ){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">if( $file[\'error\'] == 0 ){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$fname = date(\"YmdHis\") . \'-\' . rand(1,1000);</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">$ext = strRChr($file[\'name\'], \'.\');//扩展名</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">if( is_uploaded_file($file[\'tmp_name\'])){</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">move_uploaded_file($file[\'tmp_name\'], \'./\' . $fname . $ext);</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1;\">}</span><br />\r\n<span style=\"line-height:1;\">}</span>','实现图片上传通用的PHP程序代码？',5),(84,'<p>\r\n	<span style=\"line-height:1.5;\">不可以，虽然echo与return语句都有返回的含义，但是两者返回的位置是不同的：</span><br />\r\n<span style=\"line-height:1.5;\">return语句主要是返回数据给服务器端页面，而echo语句是返回输出数据到客户端，由于Ajax技术属于客户端语言，其只能接收echo语句返回输出的结果。</span><br />\r\n<span style=\"line-height:1.5;\"></span> \r\n</p>','当我们发送Ajax请求时，服务器端页面响应数据必须使用echo进行输出与返回，这个位置使用return语句是否可行呢？',10),(85,'<span style=\"line-height:1.5;\">如果服务器端页面不存在，Ajax也可以正常返回数据到客户端，如下图所示：</span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160609/20160609224846_87398.png\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">如果在实际项目开发中遇到以上问题，我们可以采用如下方法进行解决：</span><br />\r\n<span style=\"line-height:1.5;\">在Ajax对象的常用属性和方法中，有这样一个属性status（响应状态码），常用有两个（200与404），200代表正常请求，404代表未找到请求页面。所以借此我们可以判断Ajax状态码与响应状态码来解决这个问题。</span><br />','当我们发送Ajax请求时，如果服务器端页面不存在，其还会返回数据么？如果返回，那应该如何处理呢？',10),(86,'<span style=\"line-height:1.5;\">在PHP5中专门提供了两个函数，用于生成与解析JSON格式的数据。</span><br />\r\n<span style=\"line-height:1.5;\">json_encode(数组或对象) ：把数组或对象转化生成JSON格式的数据</span><br />\r\n<span style=\"line-height:1.5;\">json_decode(json数据,$flag) ：把一个json格式的数据转化为数组或对象</span><br />\r\n<span style=\"line-height:1.5;\">参数说明：$flag如果为true，则返回数组，反之则返回对象。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','PHP与JSON数据如何实现交互？',10),(87,'<span style=\"color:#E53333;line-height:1.5;\">在Javascript中，没有定义类的基本语法（没有class关键词），只有function，当我们在系统中定义一个函数时（如Person函数），那系统就会认为当前这个函数（如Person函数）就是系统同名类（如Person类）下的构造函数，也可以称之为“构造器”。</span><br />\r\n<span style=\"line-height:1.5;\">在PHP也是类似的，如果在一个类下创建一个与之同名的函数，那么系统就会自动认为当前这个同名函数就是同名类的下构造函数（PHP4中构造函数的定义）。在PHP5，我们可以通过__construct()来定义同名类下的构造函数。</span><br />','为什么JS中我们没有通过class定义类，而只是定义一个Person函数就相当于创建了一个Person类呢？',15),(88,'<p style=\"font-family:Simsun;font-size:medium;\">\r\n	<span style=\"line-height:1.5;color:#E53333;\">客户端html代码：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;form action=\'deal.php\' method=\'post\'&gt;</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">电话号码：&lt;input type=\'text\' name=\'mobile\' /&gt;</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&lt;input type=\'submit\' name=\'submit\' value=\'发送短信\' /&gt;</span></span><br />\r\n<span style=\"line-height:1.5;\">&lt;/form&gt;</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">服务器端PHP代码：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">//定义一个header响应头</span><br />\r\n<span style=\"line-height:1.5;\">header(\'Content-type:text/html; charset=utf-8\');</span><br />\r\n<span style=\"line-height:1.5;\">//接收手机号码</span><br />\r\n<span style=\"line-height:1.5;\">if(isset($_POST[\'submit\'])) {</span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$mobile = $_POST[\'mobile\'];</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$content = \'【传智播客】您本次注册的验证码：123456\';</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//定义请求的url地址</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$url = \"http://apis.baidu.com/kingtto_media/106sms/106sms?mobile={$mobile}&amp;content={$content}&amp;tag=2\";</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//1、初始化curl句柄</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$ch = curl_init();</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//2、设置curl</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">curl_setopt($ch, CURLOPT_URL, $url);</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//发送请求头</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$key = file_get_contents(\'../../sms/key.txt\'); //abcdefg123456abcdefg</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$header = array(</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">\"apikey:{$key}\" //自己开发时换成自己的密钥即可</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">);</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//3、执行curl</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$output = curl_exec($ch); &nbsp;//返回json字符串</span></span><br />\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$json = json_decode($output);</span></span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">if($json-&gt;returnstatus == \'Success\') {</span>&nbsp;<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">echo \'发送成功\';</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;//4、关闭curl</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;curl_close($ch);</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">知识补充：</span><br />\r\n<span style=\"line-height:1.5;\">1、在apistore网站注册一个账号</span><br />\r\n<span style=\"line-height:1.5;\">http://apistore.baidu.com/ 打开网站，找到凯信通接口</span><br />\r\n<span style=\"line-height:1.5;\">2、购买API套餐，获取短信验证接口的密钥$key</span><span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\"></span></span>\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<br />','使用curl+json如何实现发送短信？',5),(89,'<span style=\"line-height:1.5;\">这是由于我们在一开始安装SVN时没有让SVN服务开机自启动，因此，当我们将cmd黑窗口关闭之后，SVN服务器就停止了，此时再向SVN服务器checkout检出代码，就会提示计算机目标积极拒绝，无法检出。</span><br />\r\n<span style=\"line-height:1.5;\">解决办法：在向仓库检出代码之前，一定要确保SVN服务器处于开启状态，挂在cmd黑窗口或者设置svn开机自启动。</span><br />\r\n<span style=\"line-height:1.5;\">SVN开机自启动的命令：sc create svnd binPath= \"F:/svnServer/server/bin/svnserve.exe -r F:/svnServer/app/ --service\" start= auto</span><br />\r\n<span style=\"line-height:1.5;\">（注意此行命令不要写错，注意空格）</span>','使用svn从仓库中检出代码时提示：计算机目标积极拒绝，无法检出代码是什么原因？如何解决？',9),(90,'<p>\r\n	<span style=\"line-height:1.5;\">① 蓝色加号：本地的.svn对该文件有形成管理</span><br />\r\n<span style=\"line-height:1.5;\">② 绿色对号：本地文件、.svn管理的版本文件、仓库文件 三者内部一致</span><br />\r\n<span style=\"line-height:1.5;\">③ 红色叹号：本地文件 &nbsp;与 &nbsp;.svn和仓库文件 不一致(用户自己修改了该文件)</span><br />\r\n<span style=\"line-height:1.5;\">④ 黄色叹号：表示该文件正处于冲突状态</span><br />\r\n<span style=\"line-height:1.5;\">⑤ 蓝色问号：新建的一个文件，本地.svn 和 远程仓库 对该文件都没有记录</span>\r\n</p>\r\n<p>\r\n	<span></span><span></span>\r\n</p>','SVN中的文件颜色标志都代表什么意思？',9),(91,'<p>\r\n	<img src=\"/Public/Admin/js/editor/attached/image/20160610/20160610150038_67664.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">这是因为首次提交时权限认证失败了！</span><br />\r\n<span style=\"line-height:1.5;\"> 我们需要开启仓库匿名账号权限：</span><br />\r\n<span style=\"line-height:1.5;\"> 找到svn服务器下了svnserver.conf配置文件</span><span style=\"line-height:1.5;background-color:#FFE500;\">(配置文件所在位置：\"H:/svnServer/app/shop/conf\")</span><span style=\"line-height:1.5;\">，</span><br />\r\n<span style=\"line-height:1.5;\"> 将 anon-access = read 修改为 anon-access = write，</span><br />\r\n<span style=\"line-height:1.5;\"> 这样就开启了写的权限，然后重新提交就正常了</span>\r\n</p>','在通过commit向SVN仓库提交代码的时候，提交失败，这是什么原因？',9),(92,'<span style=\"line-height:1.5;color:#E53333;\">$this代表一个对象，就是调用当前这个方法的对象</span><br />\r\n<span style=\"line-height:1.5;\">在构造方法__construct()中通常使用$this对属性进行赋值：</span><br />\r\n<span style=\"line-height:1.5;\">$this-&gt;name = $name;</span><br />\r\n<span style=\"line-height:1.5;\">在普通方法中可以直接将对象的属性当作\"变量\"进行输出</span><br />\r\n<span style=\"line-height:1.5;\">function showInfo(){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;echo \"商品名称：\" . $this-&gt;name;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">self代表一个类，就是这个词（self）本身所在的这个类</span><br />\r\n<span style=\"line-height:1.5;\">静态方法中调用静态属性：self::$p2</span><br />\r\n<span style=\"line-height:1.5;\">self::$instance instanceof self 或 new self()</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">parent代表父类、基类（这个类本身）</span><br />\r\n<span style=\"line-height:1.5;\">子类构造方法中调用父类的构造方法：parent::__construst()</span><br />\r\n<span style=\"line-height:1.5;\">子类普通方法中调用父类实例方法：parent::方法名() &nbsp;</span><br />\r\n<div>\r\n	<img src=\"/Public/Admin/js/editor/attached/image/20160610/20160610152050_46889.png\" alt=\"\" /><br />\r\n</div>','面向对象中parent、self、$this三个关键字分别是什么意思？',6),(93,'<span style=\"line-height:1.5;\">在PHP中数组常被当作堆栈（后进先出：LIFO）与队列（先进先出：FIFO）结构来使用。PHP提供了一组函数可以用于push与pop（堆栈）还有shift与unshift（队列）来操作数组元素。堆栈与列队在实践中应用非常广泛。</span><br />\r\n<span style=\"line-height:1.5;\">我们可以先看下堆栈：</span><br />\r\n<span style=\"line-height:1.5;\">代码如下:</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;$arr = array();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;array_push($arr,\'aaa\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;array_push($arr,\'bbb\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;$arr.pop();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;print_r($arr);</span><br />\r\n<span style=\"line-height:1.5;\">?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">如果你打算把数组作为队列来使用（FIFO），你可以使用array_unshift()来增加元素，使用array_shift()删除：</span><br />\r\n<span style=\"line-height:1.5;\">代码如下:</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;$arr = array();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;array_unshift($arr,\'aaa\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;array_unshift($arr,\'bbb\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;print_r($arr);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;array_shift($arr);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; &nbsp;print_r($arr);</span><br />\r\n<span style=\"line-height:1.5;\">?&gt;</span><br />\r\n<div>\r\n	<br />\r\n</div>','PHP中数组常用的堆栈与队列结构的处理函数是什么？',4),(94,'<span style=\"line-height:1.5;\">打开php.ini设置文件,修改两行如下：</span><br />\r\n<span style=\"line-height:1.5;\">1、session.cookie_lifetime</span><br />\r\n<span style=\"line-height:1.5;\">这个代表SessionID在客户端Cookie储存的时间，默认是0，代表浏览器一关闭SessionID就失效……</span><br />\r\n<span style=\"line-height:1.5;\">就是因为这个所以PHP的session不能永久使用！那么我们把它设置为一个我们认为很大的数字，比如：999999999</span><br />\r\n<span style=\"line-height:1.5;\">2、session.gc_maxlifetime</span><br />\r\n<span style=\"line-height:1.5;\">这个是Session数据在服务器端储存的时间，如果超过这个时间，那么Session数据就自动删除！那么我们也把它设置为99999999。</span><br />\r\n<span style=\"line-height:1.5;\">这样设置以后客户端的sessionid会就一直存在，可以保证session永不过期！</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','如何设置session永不过期？',5),(95,'<span style=\"line-height:1.5;\">值传递是将变量的值复制一份给了另外一个变量，二者指向不同的内存空间</span><br />\r\n<span style=\"line-height:1.5;\">引用传递是将变量的地址传给了另一变量，二者指向同一内存空间</span><br />\r\n<span style=\"line-height:1.5;\">按值传递：函数范围内对值的任何改变在函数外部都会被忽略</span><br />\r\n<span style=\"line-height:1.5;\">按引用传递：函数范围内对值的任何改变在函数外部也能反映出这些修改</span><br />\r\n<span style=\"line-height:1.5;\">优缺点：按值传递时，php必须复制值。特别是对于大型的字符串和对象来说，这将会是一个代价很大的操作。</span><br />\r\n<span style=\"line-height:1.5;\">按引用传递则不需要复制值，对于性能提高很有好处</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','请说明php中传值与传引用的区别？值传递和引用传递的优缺点是什么?',17),(96,'<p>\r\n	<span style=\"line-height:1.5;\">什么是隐藏（hide）？（了解）</span><br />\r\n<span style=\"line-height:1.5;\">隐藏其实就是子类的方法和属性屏蔽了与其同名的父类的方法和属性，就叫做隐藏。</span><br />\r\n<span style=\"line-height:1.5;\">隐藏一词可以这么理解：在调用一个类的成员方法的时候,编译器会沿着类的继承链逐级的向上查找方法的定义，如果找到了那么就停止查找了，所以如果一个子类和一个父类都有同一个同名（暂且不论参数是否相同）的方法，而编译器最终选择了在子类中的方法，那么我们就说这个子类的成员方法“隐藏”了父类的成员方法，也就是说它阻止了编译器继续向上查找方法的定义。</span><br />\r\n<span style=\"line-height:1.5;\">什么是重载（overloading）？</span><br />\r\n<span style=\"line-height:1.5;\">重载在通常的面向对象语言中含义：</span><br />\r\n<span style=\"line-height:1.5;\">是指，在一个类（对象）中，有多个名字相同但形参不同的方法的现象；</span><br />\r\n<span style=\"line-height:1.5;\">重载在“php语言”中的含义：</span><br />\r\n<span style=\"line-height:1.5;\">是指，当对一个对象或类使用其未定义的属性或方法的时候，会自动调用其对应的魔术方法。</span><br />\r\n<span style=\"line-height:1.5;\">重载其实就是给我们这样一个机会，来应对上述“出错”的情况，使代码不产生错误。</span><br />\r\n<span style=\"line-height:1.5;\">重载主要分为属性重载和方法重载。</span><br />\r\n<span style=\"line-height:1.5;\">什么是重写（override）？</span><br />\r\n<span style=\"line-height:1.5;\">重写又叫“覆盖”，就是将从父类继承下来的属性或方法重新定义。只有保护的或公有的属性或方法能够被覆盖。</span><br />\r\n<span style=\"line-height:1.5;\">私有属性和私有方法的重写问题：私有属性和方法都不能覆盖，但其实子类可以定义跟父类私有的同名属性或方法。只是当作一个自身的新的属性或方法来看待而已。不过方法的参数必须一致。</span><br />\r\n<span style=\"line-height:1.5;\">构造方法的重写问题：构造方法不但可以像其他普通方法一样重写，而且，比普通方法更宽松：重写的时候参数可以不一致。</span>\r\n</p>\r\n<div>\r\n	<span style=\"line-height:1.5;\">总结：</span><br />\r\n<span style=\"line-height:1.5;\">静态方法和属性可以被继承</span><br />\r\n<span style=\"line-height:1.5;\">静态方法和属性只有一份数据，他不属于任何一个对象，而只属于该类本身，</span><br />\r\n<span style=\"line-height:1.5;\">也可以理解为该类所有对象所共有的数据。</span><br />\r\n<span style=\"line-height:1.5;\">如果子类中出现和父类同名的静态方法和属性，将重新创建新的同名的静态方法和属性，隐藏原来的静态方法和属性，而不是重写和覆盖。</span><br />\r\n<span style=\"line-height:1.5;\">静态属性和方法，在类被调用时创建。每一个类在创建的时候如果有静态属性，则系统会在静态空间内为每一个类开辟一个静态区，用来标识该静态属性属于哪一个类。</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\"></span><br />\r\n</div>\r\n<span style=\"line-height:1.5;\"></span> \r\n<p>\r\n	<br />\r\n</p>','在面向对象中什么是隐藏？什么是重载？什么是重写？',6),(97,'<span style=\"line-height:1.5;\">使用这个魔术方法</span><span style=\"line-height:1.5;\">的基本条件是类文件的文件名要和类的名字保持一致。</span><br />\r\n<span style=\"line-height:1.5;\">当程序执行到实例化某个类的时候，如果在实例化前没有引入这个类文件，那么就自动执行__autoload()方法</span><span style=\"line-height:1.5;\">。</span><br />\r\n<span style=\"line-height:1.5;\">这个方法</span><span style=\"line-height:1.5;\">会根据实例化的类的名称来查找这个类文件的路径，当判断这个类文件路径下确实存在这个类文件后就执行include或者require来载入该类，然后程序继续执行，如果这个路径下不存在该文件时就提示错误。</span><br />\r\n<span style=\"line-height:1.5;\">使用自动载入的魔术方法</span><span style=\"line-height:1.5;\">可以不必要写很多个include或者require函数。</span><br />','面向对象中的__autoload()魔术方法是如何运作的？',17),(98,'<span style=\"line-height:1.5;\">局部变量是函数内部定义的变量，其作用域是所在的函数。如果函数外还有一个跟局部变量名字一样的变量，</span><br />\r\n<span style=\"line-height:1.5;\">程序会认为它们两个是完全不同的两个变量。当退出函数的时候，其中的局部变量就同时被清除。</span><br />\r\n<span style=\"line-height:1.5;\">全局变量是定义在所有函数以外的变量，其作用域是整个php文件，但是在用户自定义的函数内部是无法使用的。</span><br />\r\n<span style=\"line-height:1.5;\">如果一定要在用户自定义的函数内部使用全局变量，那么就需要使用global关键字声明。</span><br />\r\n<span style=\"line-height:1.5;\">也就是说如果在函数内的变量前加上golbal来修饰，那么函数内部就可以访问到这个全局变量，</span><br />\r\n<span style=\"line-height:1.5;\">不仅可以利用这个全局变量进行运算而且可以对这个全局变量进行重新赋值。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','函数内怎么使用局部变量和全局变量？',17),(99,'<span style=\"line-height:1.5;\">1.首先考虑当前文件是不是设置了字符集。查看是不是meta标签中写了charset，如果是php页面还可以看看是不是在header()函数中指定了charset；</span><br />\r\n<span style=\"line-height:1.5;\">2.如果设置了字符集（也就是charset），那么判断当前文件保存的编码格式是否跟页面设置的字符集保持一致，两者必须保持统一；</span><br />\r\n<span style=\"line-height:1.5;\">3.如果涉及到从数据库提取数据，那么判断数据库查询时的字符集是否跟当前页面设置的字符集一致，两者必须统一。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','页面字符出现乱码，怎么解决？',17),(100,'<span style=\"line-height:1.5;\">1.连接数据库服务器：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_connect(\'数据库服务器的主机名或ip\',\'数据库服务器的用户名\',\'数据库服务器的密码\');</span><br />\r\n<span style=\"line-height:1.5;\">2.选择数据库： </span><br />\r\n<span style=\"line-height:1.5;\">mysql_select_db(数据库名);</span><br />\r\n<span style=\"line-height:1.5;\">3.设置从数据库提取数据的字符集：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_query(\"set names utf8\");</span><br />\r\n<span style=\"line-height:1.5;\">4.执行sql语句：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_query(sql语句);</span><br />\r\n<span style=\"line-height:1.5;\">5.关闭结果集，释放资源：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_free_result($result);</span><br />\r\n<span style=\"line-height:1.5;\">6.关闭与数据库服务器的连接：</span><br />\r\n<span style=\"line-height:1.5;\">mysql_close($link);</span><br />\r\n<span style=\"line-height:1.5;\"></span>','php访问数据库有哪几步？',17),(101,'<span style=\"line-height:1.5;\">1.首现要在php.ini中开启文件上传；</span><br />\r\n<span style=\"line-height:1.5;\">2.在php.ini中有一个允许上传的最大值，必要的时候可以更改；</span><br />\r\n<span style=\"line-height:1.5;\">3.上传表单一定要记住在form标签中写上enctype=\"multipart/form-data\"；</span><br />\r\n<span style=\"line-height:1.5;\">4.要注意上传文件的大小、文件类型是否符合要求，上传后存放的路径是否存在。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','php文件上传应该注意哪些细节？',17),(102,'<span style=\"line-height:1.5;\">正则表达式是用于描述字符排列模式的一种语法规则。正则表达式也叫做模式表达式。</span><br />\r\n<span style=\"line-height:1.5;\">网站开发中正则表达式最常用于表单提交信息前的客户端验证。</span><br />\r\n<span style=\"line-height:1.5;\">比如验证用户名是否输入正确，密码输入是否符合要求，email、手机号码等信息的输入是否合法。</span><br />\r\n<span style=\"line-height:1.5;\">在php中正则表达式主要用于字符串的分割、匹配、查找和替换操作。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','你是怎么理解正则表达式的？',17),(103,'<span style=\"line-height:1.5;\">ajax是asynchronous javascript and xml的缩写，是javascript、xml、css、DOM等多个技术的组合。</span><br />\r\n<span style=\"line-height:1.5;\">Ajax的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到</span><br />\r\n<span style=\"line-height:1.5;\">数据库中的返回数据信息了。所以ajax技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，</span><br />\r\n<span style=\"line-height:1.5;\">减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。</span><br />\r\n<span style=\"line-height:1.5;\">Ajax的优点是：</span><br />\r\n<span style=\"line-height:1.5;\">1.减轻了服务器端负担，将一部分以前由服务器负担的工作转移到客户端执行，利用客户端闲置的资源进行处理；</span><br />\r\n<span style=\"line-height:1.5;\">2.在只局部刷新的情况下更新页面，增加了页面反应速度，使用户体验更友好。</span><br />\r\n<span style=\"line-height:1.5;\">Ajax的缺点是不利于seo推广优化，因为搜索引擎无法直接访问到ajax请求的内容。</span><br />\r\n<span style=\"line-height:1.5;\">ajax的核心技术是XMLHttpRequest，它是javascript中的一个对象。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','你是如何认识ajax的？',17),(104,'<span style=\"line-height:1.5;\">Smarty是基于MVC概念的一种模板引擎，它将一个页面程序分成了两部分来实现：即视图层和控制层，</span><br />\r\n<span style=\"line-height:1.5;\">也就是说smarty技术将用户UI与php代码分离开。</span><br />\r\n<span style=\"line-height:1.5;\">这样程序员和美工各司其职，互不干扰。</span><br />\r\n<span style=\"line-height:1.5;\">smarty运用过程中要注意以下几个问题：</span><br />\r\n<span style=\"line-height:1.5;\">1.正确配置smarty。主要要配置smarty模板文件的路径；</span><br />\r\n<span style=\"line-height:1.5;\">2.php页面中使用assign赋值 和 display显示页面；</span><br />\r\n<span style=\"line-height:1.5;\">3.smarty模板文件中不允许出现php代码段，所有的注释，变量，函数都要包含在定界符内。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','你如何理解smarty，smarty的运用过程中注意哪些细节？',17),(105,'<span style=\"line-height:1.5;\">session在web开发中具有非常重要的份量。它可以将用户正确登录后的信息记录到服务器的内存中，当用户以此身份</span><br />\r\n<span style=\"line-height:1.5;\">访问网站的管理后台时，无需再次登录即可得到身份确认。而没有正确登录的用户则不分配session空间，即便输入了</span><span style=\"line-height:1.5;\">管理后台的访问地址也不能看到页面内容。通过session确定了用户对页面的操作权限。</span><br />\r\n<span style=\"line-height:1.5;\">使用session的步骤：</span><br />\r\n<span style=\"line-height:1.5;\">1. 启动session：</span><br />\r\n<span style=\"line-height:1.5;\">使用session_start()函数来启动。</span><br />\r\n<span style=\"line-height:1.5;\">2. 注册会话：</span><br />\r\n<span style=\"line-height:1.5;\">直接给$_SESSION数组添加元素即可。</span><br />\r\n<span style=\"line-height:1.5;\">3. 使用会话：</span><br />\r\n<span style=\"line-height:1.5;\">判断session是否为空或者是否已经注册，如果已经存在则像普通数组使用即可。</span><br />\r\n<span style=\"line-height:1.5;\">4. 删除会话：</span><br />\r\n<span style=\"line-height:1.5;\">1.可以使用unset删除单个session；</span><br />\r\n<span style=\"line-height:1.5;\">2.使用$_SESSION=array()的方式，一次注销所有的会话变量；</span><br />\r\n<span style=\"line-height:1.5;\">3.使用session_destroy()函数来彻底销毁session。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','session有什么用？怎么使用？',17),(106,'<span style=\"line-height:1.5;\">responseText 返回的值不是1和0，而是获得字符串形式的响应数据&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">responseText 不是对象，是XMLHttpRequest对象的属性</span><br />\r\n<span style=\"line-height:1.5;\">比如向php文件发送请求后，</span><br />\r\n<span style=\"line-height:1.5;\">传回来的数据可以给你用定义xhr这个名字的XMLHttpRequest对象接收</span><br />\r\n<span style=\"line-height:1.5;\">你可以将接收到的内容再发送给需要显示的地方：</span><br />\r\n<span style=\"line-height:1.5;\">document.getElementById(\"需要显示的元素id\").innerHTML=xhr.responseText;</span><br />\r\n<span style=\"line-height:1.5;\">如果是XML文件 就使用responseXML属性</span><br />\r\n<span style=\"line-height:1.5;\">document.getElementById(\"需要显示的元素id\").innerHTML=xhr.responseXML;</span><br />','ajax中的responseText对象是什么意思？它的返回值是1或者0吗？在什么情况下是0，什么情况下是1',10),(107,'<span style=\"font-family:Simsun;font-size:medium;color:#E53333;line-height:1.5;\">第一步：创建Ajax对象</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;color:#E53333;line-height:1.5;\">第二步：设置回调函数 &nbsp;onreadystatechange</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;color:#E53333;line-height:1.5;\">第三步：初始化Ajax对象</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;color:#E53333;line-height:1.5;\">第四步：发送Ajax请求</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;color:#E53333;line-height:1.5;\">第五步：判断与执行 &nbsp;判断Ajax状态为4，输出相应结果（responseText、responseXML）</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;script&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//定义页面载入事件</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">window.onload = function() {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//获取按钮并绑定相关事件</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">$(\'btnok\').onclick = function() {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//第一步：创建Ajax对象</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">var xhr = createXhr();</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//第二步：设置回调函数</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">xhr.onreadystatechange = function() {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//第五步：判断与执行</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">if(xhr.readyState==4) {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//输出结果</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">alert(xhr.responseText);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//第三步：初始化Ajax对象</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">xhr.open(\'get\',\'demo01.php\');</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//第四步：发送Ajax请求</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">xhr.send(null);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;/script&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;script&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;background-color:#00D5FF;\"><strong>//封装$函数</strong></span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">function $(id) {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; return document.getElementById(id);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;background-color:#00D5FF;\"><strong>//封装一个createXhr函数，用于创建Ajax对象</strong></span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">function createXhr() {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; //使用try...catch...解决Ajax的兼容问题</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; try {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; //W3C内核浏览器中Ajax对象的创建方式</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; return new XMLHttpRequest();</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; } catch(e) {</span><br />\r\n<br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; }</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; try {</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; //IE内核浏览器中Ajax对象的创建方式</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp; &nbsp; return new ActiveXObject(\'Microsoft.XMLHTTP\');</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; } catch(e) {</span><br />\r\n<br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; }</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; alert(\'您的浏览器不支持Ajax技术，丢了吧！\');</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&lt;/script&gt;</span><br />\r\n<span style=\"color:;\"></span><br />','Ajax中的get请求分哪几步走？',10),(108,'<span style=\"line-height:1.5;\">同源策略（Same origin policy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响。可以说Web是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。</span><br />\r\n<span style=\"line-height:1.5;\">同源策略，它是由Netscape提出的一个著名的安全策略。</span><br />\r\n<span style=\"line-height:1.5;\">现在所有支持JavaScript 的浏览器都会使用这个策略。</span><br />\r\n<span style=\"line-height:1.5;\">所谓同源是指，域名，协议，端口相同。</span><br />\r\n<span style=\"line-height:1.5;\">当一个浏览器的两个tab页中分别打开来自百度和谷歌的页面</span><br />\r\n<span style=\"line-height:1.5;\">当浏览器的百度tab页执行一个脚本的时候会检查这个脚本是属于哪个页面的，</span><br />\r\n<span style=\"line-height:1.5;\">即检查是否同源，只有和百度同源的脚本才会被执行。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"></span>','什么是同源策略？',10),(109,'<p>\r\n	<span style=\"line-height:1.5;\">COOKIE被禁用，session-Id不能存储和传输。因此不可用！</span><br />\r\n<span style=\"line-height:1.5;\">理论上的解决方案：</span><br />\r\n<span style=\"line-height:1.5;\">通过 URL地址栏 get方式， 或者通过 POST数据向服务器端，每次传输session-ID！</span><br />\r\n<span style=\"line-height:1.5;\">例如通过下面的配置：（在php.ini中配置或者通过ini_set()来配置）</span><br />\r\n<span style=\"line-height:1.5;\">①session是否仅仅是用COOKIE完成传输session-ID：</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; session.use_only_cookie = 1 &nbsp;开启（在session_start之前）</span><br />\r\n<span style=\"line-height:1.5;\">②是否通过其他方式自动传输session-ID：</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp; session.use_trans_sid = 0 &nbsp;//这是默认值，表示禁止sessionid通过URL方式明文传输</span><br />\r\n<span style=\"line-height:1.5;\">然后通过表单的隐藏域向服务器端，每次传输session-ID即可！</span><br />\r\n<span style=\"line-height:1.5;\">或者直接开启透明的SID（此时需要关闭基于cookie 的SESSION 配置项）</span><br />\r\n<span style=\"line-height:1.5;\">ini_set(\"session.use_trans_sid\",\"1\"); //表示允许sessionid通过URL方式明文传输</span><br />\r\n<span style=\"line-height:1.5;\">ini_set(\"session.use_only_cookies\",0);</span><br />\r\n<span style=\"line-height:1.5;\">ini_set(\"session.use_cookies\",0);</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\"></span>\r\n</p>','浏览器禁用COOKIE，session是否可用？',17),(110,'<span style=\"color:#E53333;line-height:1.5;\"><strong>问题1：浏览器为什么要缓存网页的内容？</strong></span><br />\r\n<span style=\"line-height:1.5;\">通常当我们访问一个静态的html文件或者以get方式发起请求时，网页的内容会被浏览器缓存到本地，一般对于一些内容不经常变化的，像资源类的文件，比如视频、FLASH、图片或者css和js代码，这些文件在第一次请求的时候会被浏览器缓存下来，存放在本地，这样下次再请求这些文件的时候就可以不用再去请求，直接使用本地的就可以了，这样可以减少带宽占用、降低服务器压力，可以明显地加快用户的访问速度。而post请求的内容浏览器一般不缓存。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>问题2：当我们在地址栏回车重新请求时，浏览器是如何处理的？</strong></span><br />\r\n<span style=\"line-height:1.5;\">当我们在地址栏回车重新请求时，分为两种情况：第一种如果请求的文件在浏览器缓存中未过期，此时firebug插件在浏览器里显示HTTP返回状态是200 OK，但是此次请求并没有真正提交到HTTP服务器。而是被浏览器发现缓存中还有未过期的文件，直接把请求拦截了，firebug里面显示所谓的“请求头消息”、“响应头消息”都是浏览器“伪造”的。这种刷新，使用的网络流量是最小的，可以说完全没有，时间消耗也是最少的。</span><br />\r\n<span style=\"line-height:1.5;\">第二种是请求的文件在浏览器缓存中已过期（这种比较常见），此时firebug显示的HTTP请求里多了一行If-Modified-Since，说明浏览器对这种情况的处理方法是：再 问一下服务器，请求的文件在某个时间之后有没有被修改过，而这个时间是由上次HTTP响应的Last-Modified决定的。服务器鉴定之后，没有修 改的话，返回304 Not Modified，浏览器收到后，从缓存里读出内容；有修改的话，返回200 OK，并返回新的内容。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>问题3：HTTP请求头中的Last-Modified属性是什么意思？</strong></span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified属性：在浏览器第一次请求某一个URL时，服务器端的返回状态会是200，内容是客户端请求的资源，同时有一个Last-Modified的属性标记此文件在服务期端最后被修改的时间。</span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified格式类似这样：</span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified : Fri , 12 May 2006 18:53:33 GMT</span><br />\r\n<span style=\"line-height:1.5;\">客户端第二次请求此URL时，根据HTTP协议的规定，浏览器会向服务器传送If-Modified-Since报头，询问该时间之后文件是否有被修改过：</span><br />\r\n<span style=\"line-height:1.5;\">If-Modified-Since : Fri , 12 May 2006 18:53:33 GMT</span><br />\r\n<span style=\"line-height:1.5;\">如果服务器端的资源没有变化，则自动返回 HTTP 304 状态码，返回内容为空，这样就节省了传输数据量。当服务器端代码发生改变或者重启服务器时，则重新发出资源，返回结果和第一次请求时类似。从而保证不向客户端重复发出资源，也保证当服务器有变化时，客户端能够得到最新的资源。（来自百度百科）</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>问题4：If-Modified-Since参数在什么时候存在？</strong></span><br />\r\n<span style=\"line-height:1.5;\">当浏览器第一次发送请求，此时的请求头中是没有If-Modified-Since这个参数的。第二次请求时，当请求的URL在浏览器缓存中已过期，此时在HTTP请求里就会有If-Modified-Since这个参数。</span><br />\r\n<span style=\"color:#E53333;\"><strong><span style=\"line-height:1.5;\">问题5：IE浏览器的缓存是浏览器本身的问题，还是它要和服务器文件的最后修改时间做对比才进行的缓存(这里讨论的是静态资源文件</span><span style=\"line-height:1.5;\">)？</span></strong></span><br />\r\n<span style=\"line-height:1.5;\">这要分情况，如果缓存的文件没有过期，浏览器直接访问本地缓存好的文件，再次请求时拦截此次请求，如果缓存的文件已经过期，则再次请求时在请求头上将会有If-Modified-Since这个参数，通过该参数和服务器文件的最后修改时间做对比。要注意：IE浏览器本身具有拦截机制，会拦截HTTP请求。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>问题6：ajax请求后浏览器缓存好的文件是什么样的文件？这个文件中是否包含html文件？</strong></span><br />\r\n<span style=\"line-height:1.5;\">缓存的文件以请求的地址加请求的参数作为文件名，该文件中的内容是php执行后的结果（或者说是PHP+MySQL混编文件的执行结果）。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"><strong>问题7：在通过httpwatch插件观察IE浏览器的ajax请求，当前的请求(第一次和后续的请求都包含)并未出现If-Modified-Since参数，而第一次请求返回状态码是200，后续的请求只给出 No response stream for cached items（缓存</strong></span><span style=\"color:#E53333;line-height:1.5;\"><strong>），怎么理解？</strong></span><br />\r\n<span style=\"line-height:1.5;\">我们使用Ajax中的get请求去服务器获取数据，在Firefox（W3C内核的浏览器）中其是可以正常运行的。</span><br />\r\n<span style=\"line-height:1.5;\">但是在IE浏览器中，其第一次请求时可以正常执行，服务器端返回响应状态码为200，但是当我们再次向同一个url地址发送请求时，系统会自动读取缓存文件（这个缓存文件是服务器PHP+MySQL生成的资源文件）。</span><br />\r\n<span style=\"line-height:1.5;\">所以对于php动态文件，由于第一次请求时没有Last-Modified参数，Firefox每次ajax的get请求都会重新发请求，去请求服务器端对应的php文件（这里不讨论资源文件），再次请求时也就没有If-Modified-Since参数。</span><br />\r\n<span style=\"line-height:1.5;\">而IE浏览器将会对ajax的get请求缓存Ajax请求的结果，换句话说，IE浏览器针对相同地址发起的多个Ajax请求，只有第一次会真正发送到服务端，后续ajax请求都直接从缓存中读取，第一次请求时没有Last-Modified参数，当再次请求时，请求头中只给出了 No response stream for cached items（缓存），也就是说既然没有Last-Modified参数，那么再次请求也不会有If-Modified-Since参数，浏览器并没有向服务器询问最后的修改时间，每次请求都只是从本地读取缓存文件，所以当我们修改了服务器端的内容后，此时将得不到服务器端修改后的最新内容，会一直显示已经缓存好的内容，但如果我们在ajax请求之前加上xhr.setRequestHeader(\"If-Modified-Since\",\"0\");之后，每次ajax请求浏览器都会带If-Modified-Since和服务器的最后修改时间做对比，所以每次返回的状态码都是 200</span><br />','有关浏览器缓存以及ajax的缓存的一些疑问？',10),(111,'<span style=\"line-height:1.5;\">为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：</span><br />\r\n<span style=\"line-height:1.5;\">var xhr;</span><br />\r\n<span style=\"line-height:1.5;\">if (window.XMLHttpRequest)</span><br />\r\n<span style=\"line-height:1.5;\">{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">// code for IE7+, Firefox, Chrome, Opera, Safari</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">xhr = new XMLHttpRequest();</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">else</span><br />\r\n<span style=\"line-height:1.5;\">{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">// code for IE6, IE5</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','如何创建ajax对象，兼容不同内核的浏览器？',10),(112,'<span style=\"line-height:1.5;\">首先，为了方便理解，先看如下的图：</span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160615/20160615011625_16940.png\" alt=\"\" /><br />\r\n<span style=\"line-height:1.5;\">每个状态的详细说明如下：</span><br />\r\n<span style=\"line-height:1.5;\">1、Last-Modified</span><br />\r\n<span style=\"line-height:1.5;\">在浏览器第一次请求某一个URL时，服务器端的返回状态会是200，内容是你请求的资源，同时有一个Last-Modified的属性标记(HttpReponse Header)此文件在服务期端最后被修改的时间，格式类似这样：</span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified:Tue, 24 Feb 2009 08:01:04 GMT</span><br />\r\n<span style=\"line-height:1.5;\">客户端第二次请求此URL时，根据HTTP协议的规定，浏览器会向服务器传送If-Modified-Since报头(HttpRequest Header)，询问该时间之后文件是否有被修改过：</span><br />\r\n<span style=\"line-height:1.5;\">If-Modified-Since:Tue, 24 Feb 2009 08:01:04 GMT</span><br />\r\n<span style=\"line-height:1.5;\">如果服务器端的资源没有变化，则自动返回HTTP304（NotChanged.）状态码，内容为空，这样就节省了传输数据量。当服务器端代码发生改变或者重启服务器时，则重新发出资源，返回和第一次请求时类似。从而保证不向客户端重复发出资源，也保证当服务器有变化时，客户端能够得到最新的资源。</span><br />\r\n<span style=\"line-height:1.5;\">注：如果If-Modified-Since的时间比服务器当前时间(当前的请求时间request_time)还晚，会认为是个非法请求</span><br />\r\n<span style=\"line-height:1.5;\">2、Etag工作原理</span><br />\r\n<span style=\"line-height:1.5;\">HTTP协议规格说明定义ETag为“被请求变量的实体标记”。简单点即服务器响应时给请求URL标记，并在HTTP响应头中将其传送到客户端，类似服务器端返回的格式：</span><br />\r\n<span style=\"line-height:1.5;\">Etag:“5d8c72a5edda8d6a:3239″</span><br />\r\n<span style=\"line-height:1.5;\">客户端的查询更新格式是这样的：</span><br />\r\n<span style=\"line-height:1.5;\">If-None-Match:“5d8c72a5edda8d6a:3239″</span><br />\r\n<span style=\"line-height:1.5;\">如果ETag没改变，则返回状态304。</span><br />\r\n<span style=\"line-height:1.5;\">即:在客户端发出请求后，HttpReponse Header中包含Etag:“5d8c72a5edda8d6a:3239″</span><br />\r\n<span style=\"line-height:1.5;\">标识，等于告诉Client端，你拿到的这个的资源有表示ID：5d8c72a5edda8d6a:3239。当下次需要发Request索要同一个URI的时候，浏览器同时发出一个If-None-Match报头(Http RequestHeader)此时包头中信息包含上次访问得到的Etag:“5d8c72a5edda8d6a:3239″标识。</span><br />\r\n<span style=\"line-height:1.5;\">If-None-Match:“5d8c72a5edda8d6a:3239“</span><br />\r\n<span style=\"line-height:1.5;\">,这样，Client端等于Cache了两份，服务器端就会比对2者的etag。如果If-None-Match为False，不返回200，返回304(Not Modified) Response。</span><br />\r\n<span style=\"line-height:1.5;\">3、Expires</span><br />\r\n<span style=\"line-height:1.5;\">给出的日期/时间后，被响应认为是过时。如Expires:Thu, 02 Apr 2009 05:14:08 GMT</span><br />\r\n<span style=\"line-height:1.5;\">需和Last-Modified结合使用。用于控制请求文件的有效时间，当请求数据在有效期内时客户端浏览器从缓存请求数据而不是服务器端.当缓存中数据失效或过期，才决定从服务器更新数据。</span><br />\r\n<span style=\"line-height:1.5;\">4、Last-Modified和Expires</span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified标识能够节省一点带宽，但是还是逃不掉发一个HTTP请求出去，而且要和Expires一起用。而Expires标识却使得浏览器干脆连HTTP请求都不用发，比如当用户F5或者点击Refresh按钮的时候就算对于有Expires的URI，一样也会发一个HTTP请求出去，所以，Last-Modified还是要用的，而且要和Expires一起用。</span><br />\r\n<span style=\"line-height:1.5;\">5、Etag和Expires</span><br />\r\n<span style=\"line-height:1.5;\">如果服务器端同时设置了Etag和Expires时，Etag原理同样，即与Last-Modified/Etag对应的HttpRequestHeader:If-Modified-Since和If-None-Match。我们可以看到这两个Header的值和WebServer发出的Last-Modified,Etag值完全一样；在完全匹配If-Modified-Since和If-None-Match即检查完修改时间和Etag之后，服务器才能返回304.</span><br />\r\n<span style=\"line-height:1.5;\">6、Last-Modified和Etag</span><br />\r\n<span style=\"line-height:1.5;\">分布式系统里多台机器间文件的last-modified必须保持一致，以免负载均衡到不同机器导致比对失败</span><br />\r\n<span style=\"line-height:1.5;\">分布式系统尽量关闭掉Etag(每台机器生成的etag都会不一样)</span><br />\r\n<span style=\"line-height:1.5;\">Last-Modified和ETags请求的http报头一起使用，服务器首先产生Last-Modified/Etag标记，服务器可在稍后使用它来判断页面是否已经被修改，来决定文件是否继续缓存</span><br />\r\n<span style=\"line-height:1.5;\">过程如下:</span><br />\r\n<span style=\"line-height:1.5;\">1.客户端请求一个页面（A）。</span><br />\r\n<span style=\"line-height:1.5;\">2.服务器返回页面A，并在给A加上一个Last-Modified/ETag。</span><br />\r\n<span style=\"line-height:1.5;\">3.客户端展现该页面，并将页面连同Last-Modified/ETag一起缓存。</span><br />\r\n<span style=\"line-height:1.5;\">4.客户再次请求页面A，并将上次请求时服务器返回的Last-Modified/ETag一起传递给服务器。</span><br />\r\n<span style=\"line-height:1.5;\">5.服务器检查该Last-Modified或ETag，并判断出该页面自上次客户端请求之后还未被修改，直接返回响应304和一个空的响应体。</span><br />\r\n<span style=\"line-height:1.5;\">注：</span><br />\r\n<span style=\"line-height:1.5;\">1)Last-Modified和Etag头都是由WebServer发出的HttpReponse Header，WebServer应该同时支持这两种头。</span><br />\r\n<span style=\"line-height:1.5;\">2)WebServer发送完Last-Modified/Etag头给客户端后，客户端会缓存这些头；</span><br />\r\n<span style=\"line-height:1.5;\">3)客户端再次发起相同页面的请求时，将分别发送与Last-Modified/Etag对应的HttpRequestHeader:If-Modified-Since和If-None-Match。我们可以看到这两个Header的值和WebServer发出的Last-Modified,Etag值完全一样；</span><br />\r\n<span style=\"line-height:1.5;\">4)通过上述值到服务器端检查，判断文件是否继续缓存；</span><br />\r\n<span style=\"line-height:1.5;\">7、关于 Cache-Control: max-age=秒 和 Expires</span><br />\r\n<span style=\"line-height:1.5;\">Expires = 时间，HTTP 1.0 版本，缓存的载止时间，允许客户端在这个时间之前不去检查（发请求）</span><br />\r\n<span style=\"line-height:1.5;\">max-age = 秒，HTTP 1.1版本，资源在本地缓存多少秒。</span><br />\r\n<span style=\"line-height:1.5;\">如果max-age和Expires同时存在，则被Cache-Control的max-age覆盖。</span><br />\r\n<span style=\"line-height:1.5;\">Expires 的一个缺点就是，返回的到期时间是服务器端的时间，这样存在一个问题，如果客户端的时间与服务器的时间相差很大，那么误差就很大，所以在HTTP 1.1版开始，使用Cache-Control: max-age=秒替代。</span><br />\r\n<span style=\"line-height:1.5;\">Expires =max-age + &nbsp; “每次下载时的当前的request时间”</span><br />\r\n<span style=\"line-height:1.5;\">所以一旦重新下载的页面后，expires就重新计算一次，但last-modified不会变化&nbsp;</span><br />\r\n<div>\r\n	<br />\r\n</div>','浏览器缓存详解：expires,cache-control,last-modified,etag详细说明 ？',10),(113,'<span style=\"line-height:1.5;\">echo通常用来输出一个字符串，</span><br />\r\n<span style=\"line-height:1.5;\">echo \"你好$a\"; 可以正常输出，</span><br />\r\n<span style=\"line-height:1.5;\">echo \"你好\".$a; 输出也是正常的，</span><br />\r\n<span style=\"line-height:1.5;\">echo 123;不加引号的话，系统默认按字符串输出，echo \"123\"也是作为字符串处理，</span><br />\r\n<span style=\"line-height:1.5;\">当被浏览器解析之后，echo 输出的内容在浏览器上看到的结果是一样的。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','关于echo 输出整型的问题？',4),(114,'<span style=\"color:#333333;font-family:Georgia, \'Bitstream Charter\', serif;font-size:16px;line-height:24px;background-color:#FFFFFF;\">请关闭lantern，点击Fiddler顶部的黄色提示条，用于重新加载系统代理配置，刷新浏览器。</span>','Still unable to dial tcp://http://www.doesnotexist.com:80 after 3 attempts（无法连接：仍然无法拨TCP）的解决办法？',4),(115,'<span style=\"line-height:1.5;\">JSON(JavaScript Object Notation)是一种轻量级的数据格式，采用完全独立于语言的文本格式，是理想的数据交换格式。同时，JSON是Javascript原生格式，这意味着在javascript中处理JSON数据不需要任何特殊的API或工具包，而且效率非常高。</span><br />\r\n<span style=\"line-height:1.5;\">基本格式：var jsonData=\'{\"data1\":\"Hello,\",\"data2\":\"world!\"}\'</span><br />\r\n<span style=\"line-height:1.5;\">调用方法jsonData.data1,jsonData.data2</span><br />\r\n<span style=\"line-height:1.5;\">很多json数据存入数组</span><br />\r\n<span style=\"line-height:1.5;\">var jsonData=[{\"name\":\"LiLei\",\"age\":19,\"sex\":\"male\"},{\"name\":\"HanMei\",\"age\":18,\"sex\":\"famale\"}]</span><br />\r\n<span style=\"line-height:1.5;\">调用方法jsonData[0].name,jsonData[1].sex</span><br />\r\n<span style=\"line-height:1.5;\">总体而言，json是相对比较容易的理解和使用的，但同时存在很多的陷阱，如果不注意的话很容易掉进去。</span><br />\r\n<span style=\"line-height:1.5;\">json的的解析方法&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">json的解析方法共有两种：eval_r() 和 JSON.parse()，使用方法如下：</span><br />\r\n<span style=\"line-height:1.5;\">var jsonData = \'{\"data1\":\"Hello,\", \"data2\":\"world!}\';</span><br />\r\n<span style=\"line-height:1.5;\">var evalJson=eval(\'(\'+jsonData+\')\');</span><br />\r\n<span style=\"line-height:1.5;\">var jsonParseJson=JSON.parse(jsonData);</span><br />\r\n<span style=\"line-height:1.5;\">这样就把jsonData这个json格式的字符串转换成了JSON对象。</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><strong>二者的区别如下：</strong></span><br />\r\n<span style=\"line-height:1.5;\">JSON.parse()可以解析json格式的数据，并且会对要解析的字符串进行格式检查，如果格式不正确则不进行解析，而eval()则可以解析任何字符串，eval是不安全的。</span><br />\r\n<span style=\"line-height:1.5;\">比如下面的字符串：</span><br />\r\n<span style=\"line-height:1.5;\">var str = \'alert(1000.toString())\';</span><br />\r\n<span style=\"line-height:1.5;\">eval(str);</span><br />\r\n<span style=\"line-height:1.5;\">JSON.parse(str);</span><br />\r\n<span style=\"line-height:1.5;\">用eval可以解析，并且会弹出对话框，而用JSON.parse()则解析不了。 其实alert并没有什么坏处，可怕的是如果用恶意用户在json字符串中注入了向页面插入木马链接的脚本，用eval也是可以操作的，而用JSON.parse()则不必担心这个问题。</span><br />\r\n<span style=\"line-height:1.5;\">注意：某些低级的浏览器尚不支持JSON.parse()</span><br />\r\n<span style=\"line-height:1.5;\"></span>','JSON.parse()和eval()的区别？',10),(116,'<span style=\"line-height:1.5;\">第一种：将php.ini中的session.gc_maxlifetime设置为9999重启apache</span><br />\r\n<span style=\"line-height:1.5;\">第二种：我们来手动设置 Session 的生存期：</span><br />\r\n<span style=\"line-height:1.5;\">session_start();&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">// 保存一天&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">$lifeTime = 24 * 3600;&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">setcookie(session_name(), session_id(), time() + $lifeTime, \"/\");&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">第三种：其实 Session 还提供了一个函数 session_set_cookie_params(); 来设置 Session 的生存期的，该函数必须在 session_start() 函数调用之前调用：</span><br />\r\n<span style=\"line-height:1.5;\">// 保存一天&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">$lifeTime = 24 * 3600;&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">session_set_cookie_params($lifeTime);&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">session_start();</span><br />\r\n<span style=\"line-height:1.5;\">$_SESSION[\"admin\"] = true;&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">如果客户端使用 IE 6.0 ， session_set_cookie_params(); 函数设置 Cookie 会有些问题，所以我们还是手动调用 setcookie 函数来创建 cookie。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','如何修改SESSION的生存时间？',17),(117,'<p>\r\n	<span style=\"line-height:1.5;\">在某些特定情况下，单引号的效率比双引号高。</span><br />\r\n<span style=\"line-height:1.5;\">双引号串中的内容（如变量）可以被解析而且替换，而单引号串中的内容总被认为是普通字符输出。</span>\r\n</p>','简述单引号和双引号的区别？',4),(118,'<span style=\"line-height:1.5;\">在自动生成的目录中会看到一些index.html文件，但是打开后会发现是空的文件。这些文件有个高大上的名字叫“目录安全文件”。</span><br />\r\n<span style=\"line-height:1.5;\">其作用是防止在没有默认文档的时候服务器会列出整个目录下的目录结构。</span><br />\r\n<span style=\"line-height:1.5;\">如果不想生成index.html，可以通过在入口文件（index.php）中定义一个常量来禁止自动生成目录安全文件。</span><br />\r\n<span style=\"line-height:1.5;\">#定义目录安全文件是否生成（默认是true）</span><br />\r\n<span style=\"line-height:1.5;\">define(\'BUILD_DIR_SECURE\',false);</span><br />','什么是目录安全文件？',11),(119,'<p>\r\n	当系统运行时会执行68个流程，经过系统自己的判断是否是第一次访问，如果是第一次访问则产生<span style=\"line-height:1.5;\">三个目录和一系列的文件</span> \r\n</p>','TP首次运行index.php文件的时候会执行执行多少个流程？',11),(120,'<span style=\"line-height:1.5;\">系统在收集到需要访问的（入口文件收集）分组、控制器、方法等信息后自动去加载相关的控制器和方法。</span><br />\r\n<span style=\"line-height:1.5;\">虽然我们没有指定任何的分组、控制器和方法，但是在ThinkPHP主配置文件（convention.php）中设置了默认的分组、控制器和方法。</span><br />\r\n<span style=\"line-height:1.5;\">在ThinkPHP框架中默认的分组是Home，默认的控制器是Index，默认的方法是index。（需要注意大小写）</span><br />','TP首次运行index.php时，出现的“笑脸”是怎么来的？',11),(121,'<span style=\"line-height:1.5;\">第一步：声明当前类的命名空间；</span><br />\r\n<span style=\"line-height:1.5;\">第二步：引入父类控制器（类元素）；</span><br />\r\n<span style=\"line-height:1.5;\">第三步：定义控制器并且继承父类控制器；</span><br />\r\n<span style=\"line-height:1.5;\">#声明当前控制器的命名空间</span><br />\r\n<span style=\"line-height:1.5;\">namespace Home\\Controller;</span><br />\r\n<span style=\"line-height:1.5;\">#引入父类控制器类元素</span><br />\r\n<span style=\"line-height:1.5;\">use Think\\Controller;</span><br />\r\n<span style=\"line-height:1.5;\">#定义当前控制器并且继承父类控制器</span><br />\r\n<span style=\"line-height:1.5;\">class TestController extends Controller{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">#创建默认操作方法</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">public function index(){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">#获取当前时间</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$date = date(\'Y-m-d H:i:s\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">#传递数据给模版</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$this -&gt; assign(\'date\',$date);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">#展示模版</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$this -&gt; display(\'Index/index\');</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />','TP中如何编写一个控制器文件？',11),(122,'<span><span style=\"line-height:1.5;\">在php语法中，语法要求，在同一次请求中不允许出现相同名称的相同元素（常量、方法、类），但是在一些特殊的应用场景中（例如ThinkPHP框架，里面引入了许多第三方的扩展，例如smarty和视频播放技术等）不得已必须要出现相同名称的相同元素，那么就需要将其放到不同的空间当中去，这个空间就叫做命名空间。</span><br />\r\n<span style=\"line-height:1.5;\">使用命名空间需要注意事项：</span><br />\r\n<span style=\"line-height:1.5;\">1、声明使用关键词：namespace关键词</span><br />\r\n<span style=\"line-height:1.5;\">2、引入空间或者元素（类元素）：use关键词</span><br />\r\n<span style=\"line-height:1.5;\">3、要求php版本大于5.3，因为命名空间是从php5.3之后才引入的；</span><br />\r\n<span style=\"line-height:1.5;\">4、在当前文档的第一个namespace声明之前不能有任何的（除了注释外）输出，header头也不行。</span><br />\r\n<span style=\"line-height:1.5;\">命名空间本身对命名空间的名字没有特别的要求，只要命名规范符合php语法中变量命名规范就可以，在ThinkPHP中要求命名空间必须跟目录挂钩。在ThinkPHP中有自动加载机制（autoload），通过自动加载机制将命名空间中的目录转化成真实的路径，从而引入对应的空间或者元素。</span></span>','什么是命名空间？TP中使用命名空间应该注意什么？',11),(123,'<span style=\"line-height:1.5;background-color:#FFE500;\">1、get路由形式</span><br />\r\n<span style=\"line-height:1.5;\">Get形式：就是将参数在地址栏中显示的一种形式。</span><br />\r\n<span style=\"line-height:1.5;\">格式：http://www.</span><span style=\"line-height:1.5;\">0615.com/index.php?m=分组&amp;c=控制器&amp;a=方法&amp;参数名=参数值</span><br />\r\n<span style=\"line-height:1.5;\">M：表示module</span><br />\r\n<span style=\"line-height:1.5;\">C：表示controller</span><br />\r\n<span style=\"line-height:1.5;\">A：表示action</span><br />\r\n<span style=\"line-height:1.5;\">缺点：将全部的参数暴露在地址栏中，既不安全也不好看</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">2、pathinfo路由形式（默认路由形式）</span><br />\r\n<span style=\"line-height:1.5;\">格式：http://www.0615.com/index.php/分组/控制器/方法/参数名/参数值(.html)</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">3、rewrite路由形式（需要配置才能使用）</span><br />\r\n<span style=\"line-height:1.5;\">格式：http://www.</span><span style=\"line-height:1.5;\">0615.com/分组/控制器/方法/参数名/参数值(.html)</span><br />\r\n<span style=\"line-height:1.5;\">配置方法：</span><br />\r\n<span style=\"line-height:1.5;\">第一步：修改Apache的主配置文件httpd.conf</span><br />\r\n<span style=\"line-height:1.5;\">找到rewrite扩展位置，将其前面的注释符去掉（150行）</span><br />\r\n<span style=\"line-height:1.5;\">第二步：修改全部的allowoverride，全部修改成all</span><br />\r\n<span style=\"line-height:1.5;\">第三步：修改extra目录下的httpd_vhosts.conf，添加如下的代码：</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">&lt;Directory \"这里写站点所在目录路径\"&gt;</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">#允许全部访问</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">allow from all</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">#是否允许重写</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">allowOverride all</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">#是否列出站点的文件列表（在没有默认文档的时候）</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">Options +indexes</span><br />\r\n<span style=\"color:#4C33E5;line-height:1.5;\">&lt;/Directory&gt;</span><br />\r\n<span style=\"line-height:1.5;\">第四步：将分布式配置文件.htaccess复制到与index.php入口文件同级的位置</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">#以下为.htaccess中的内容</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&lt;IfModule mod_rewrite.c&gt;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; Options +FollowSymlinks</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; RewriteEngine On</span><br />\r\n<br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; RewriteCond %{REQUEST_FILENAME} !-d</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; RewriteCond %{REQUEST_FILENAME} !-f</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; #apache调用php5模块使用</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; #RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp;&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; #fast-cgi模式使用</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&nbsp; RewriteRule ^(.*)$ index.php?s=$1 [QSA,PT,L]</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">&lt;/IfModule&gt;</span><br />\r\n<span style=\"line-height:1.5;\">第五步：重启Apache服务器</span><br />\r\n<span style=\"line-height:1.5;background-color:#FFE500;\">4、兼容路由形式</span><br />\r\n<span style=\"line-height:1.5;\">格式：http://www.0615.com/index.php?s=/分组/控制器/方法/参数名/参数值(.html)</span><br />\r\n<span style=\"line-height:1.5;\">需要注意：这个形式只有1个参数，参数名是s。</span><br />\r\n<br />\r\n<br />','TP中的四种路由形式分别是什么？',11),(124,'<span style=\"line-height:1.5;\">$this -&gt; display();		//没有参数，表示展示当前控制器下与当前请求方法名一致的模版文件。</span><br />\r\n<span style=\"line-height:1.5;\">$this -&gt; display(‘test’);	//表示展示当前控制器下的指定名称的模版文件</span><br />\r\n<span style=\"line-height:1.5;\">$this -&gt; display(‘Index/index’);	//表示展示指定控制器下指定名称的模版文件</span><br />','TP中关于模版的展示display()的三种用法？',11),(125,'<span style=\"line-height:1.5;\">在ThinkPHP中默认的模版变量左右标记是</span><br />\r\n<span style=\"line-height:1.5;\">左：{</span><br />\r\n<span style=\"line-height:1.5;\">右：}</span><br />\r\n<span style=\"line-height:1.5;\">我们可以根据实际的情况对其进行修改，修改可以在配置文件（别在主配置文件convention.php中修改，去应用层级或者分组层级文件中修改）中去修改。</span><br />\r\n<span style=\"line-height:1.5;\">\'TMPL_L_DELIM\' 和 \'TMPL_R_DELIM\' 两个常量</span><br />\r\n<span style=\"line-height:1.5;\">一般情况下默认即可。左右标记的配置只对Think模版引擎生效，对于smarty是不生效的。</span><br />','在TP中模版变量的分隔符是什么样的？',11),(126,'<span style=\"line-height:1.5;\">__MODULE__：表示从入口文件开始向后，一直找到分组为止</span><br />\r\n<span style=\"line-height:1.5;\">__CONTROLLER__：表示从入口文件开始向后，一直找到控制器为止；</span><br />\r\n<span style=\"line-height:1.5;\">__ACTION__：表示从入口文件开始向后，一直找到方法为止；</span><br />\r\n<span style=\"line-height:1.5;\">__SELF__：表示从入口文件开始向后，一直找到最后（包括了参数）；</span><br />\r\n<span style=\"line-height:1.5;\">__PUBLIC__：表示站点根目录下的Public目录地址；</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">是通过行为文件（ContentReplaceBehavior.class.php）中的$replace = array( );来实现</span><br />','在TP中模版的常量替换机制都有哪些常量？模版引擎是如何将模版中的上述字符串替换成变量真实表达的值呢？',11),(127,'<span style=\"line-height:1.5;\">在ThinkPHP中提供了一个内置的快捷函数（都是以大写字母命名的函数）U函数来实现对url的组装。</span><br />\r\n<span style=\"line-height:1.5;\">语法：U(参数);</span><br />\r\n<span style=\"line-height:1.5;\">第一种用法：U(‘方法名’)	表示组装出当前控制器下的指定方法名的url路由</span><br />\r\n<span style=\"line-height:1.5;\">第二种用法：U(‘控制器/方法’） &nbsp;表示组装指定控制器下指定方法的url路由</span><br />\r\n<span style=\"line-height:1.5;\">第三种用法：U(‘分组/控制器/方法’)表示组装指定分组下的指定控制器下的指定方法的url路由</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">关于使用U方法组装地址时如何去传递参数？</span><br />\r\n<span style=\"line-height:1.5;\">语法：U(第一个参数,array(‘参数名’ =&gt; 参数值,’参数名’=&gt; 参数值…))；</span><br />','TP中的U()函数实现了对url的组装，那么这个U函数如何使用？又是如何去传递参数的？',11),(128,'<p>\r\n	<span style=\"line-height:1.5;\">在ThinkPHP中跳转方法分为两种：成功跳转、失败跳转</span><br />\r\n<span style=\"line-height:1.5;\">成功跳转：$this -&gt; success(跳转提示信息，跳转地址，等待时间);	笑脸</span><br />\r\n<span style=\"line-height:1.5;\">失败跳转：$this -&gt; error(跳转提示信息，跳转地址，等待时间);	哭脸</span><br />\r\n<span style=\"line-height:1.5;\"></span>\r\n</p>','ThinkPHP中的跳转成功和失败的方法分别是什么？',11),(129,'<span style=\"line-height:1.5;\">在ThinkPHP中可以使用display方法去展示模版，但是还有一个方法与display方法有点相似，这个方法是fetch方法，它的作用是获取模版文件的内容。</span><br />\r\n<span style=\"line-height:1.5;\">Display方法：获取模版文件的内容 -&gt; 替换里面的常量 -&gt; 渲染模版</span><br />\r\n<span style=\"line-height:1.5;\">Fetch方法：获取模版文件的内容 -&gt; 替换里面的常量</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />\r\n<span style=\"line-height:1.5;\">区别：display方法会展示出模版，而fetch方法不会展示模版；display方法没有返回值，而fetch方法是有返回值的（字符串类型）</span><br />\r\n<span style=\"line-height:1.5;\">扩展：</span><br />\r\n<span style=\"line-height:1.5;\">在ThinkPHP中封装了一个友好的打印方法：dump(常量/变量/字符串/对象/数组…)；这方法是ThinkPHP封装的方法，所以只能在ThinkPHP中使用。</span><br />','ThinkPHP中的display()和fetch()这两个方法的区别是什么？',11),(130,'<span style=\"line-height:1.5;\">html模版中的注释写法：&lt;!—注释内容 --&gt;</span><br />\r\n<span style=\"line-height:1.5;\">在ThinkPHP中的2种注释方法，行注释、块注释：</span><br />\r\n<span style=\"line-height:1.5;\">行注释：{//行注释的内容（不能横跨多行）}</span><br />\r\n<span style=\"line-height:1.5;\">块注释：{/* 块注释的内容（可以横跨多行） */}</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">常规的html注释和ThinkPHP中的模版注释的区别：</span><br />\r\n<span style=\"line-height:1.5;\">常规的html注释会被输出到浏览器端，并且在源码中得以体现，而ThinkPHP中的模版注释属于服务器端的注释，不会被输出到浏览器端，在源码中的体现是显示一行空白行。</span><br />','ThinkPHP中的注释和html模版中的注释有什么区别？',11),(131,'<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">索引数组：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">使用中括号的形式：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{$arr1[0]}-{$arr1[1]}-{$arr1[2]}-{$arr1[3]}&lt;br/&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">使用点方法的形式：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{$arr1.0}-{$arr1.1}-{$arr1.2}-{$arr1.3}&lt;hr/&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">键值数组：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{$arr2[\'art1\']}-{$arr2[\'art2\']}-{$arr2[\'art3\']}-{$arr2[\'art4\']}&lt;br/&gt;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{$arr2.art1}-{$arr2.art2}-{$arr2.art3}-{$arr2.art4}&lt;hr/&gt;</span><br />\r\n<br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">二维数组：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">{$arr[0][\'name\']}-{$arr[0][\'age\']}-{$arr[0][\'sex\']}或者{$arr.1.name}-{$arr.1.age}-{$arr.1.sex}</span><br />\r\n<br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">对象：</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">支持箭头写法和冒号写法。</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">箭头写法：{$stu -&gt; id} - {$stu -&gt; name} - {$stu -&gt; age}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">冒号写法：{$stu:id} - {$stu:name} - {$stu:age}</span><br />\r\n<br />','ThinkPHP中数组和对象在模版中如何取值？',11),(132,'<span style=\"line-height:1.5;\">在ThinkPHP中为了方便开发，系统支持一些常用的全局变量。</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.server	表示服务器端的一些信息（环境变量等等）等价于$_SERVER</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.get		表示get中的信息，等价于$_GET</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.post	表示post中的信息，等价于$_POST</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.request	是post和get信息的集合，等价于$_REQUEST</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.cookie	表示cookie中的信息，等价于$_COOKIE</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.session	表示session中的信息，等价于$_SESSION</span><br />\r\n<span style=\"line-height:1.5;\">•$Think.config	用于输出ThinkPHP中的配置信息</span><br />\r\n<span style=\"line-height:1.5;\"></span>','ThinkPHP视图中的系统变量有哪些，方便我们在模版中取值？',11),(133,'<span style=\"line-height:1.5;\">一般情况下，在数据库中存放时间的时候存放的格式是时间戳类型，但是读取的时候需要进行格式化，如果在php脚本中进行循环转化是一个比较麻烦的事情，所以我们可以在模版中使用函数进行处理。</span><br />\r\n<span style=\"line-height:1.5;\">•语法：{$name|fn1|fn2=arg1,arg2,###}</span><br />\r\n<span style=\"line-height:1.5;\">$name：模版中的变量；</span><br />\r\n<span style=\"line-height:1.5;\">|：变量修饰器（Linux中也会用到，在Linux中叫管道）</span><br />\r\n<span style=\"line-height:1.5;\">fn1：需要使用的第一个函数名</span><br />\r\n<span style=\"line-height:1.5;\">fn2：需要使用的第二个函数名</span><br />\r\n<span style=\"line-height:1.5;\">arg1：表示函数所使用到的参数</span><br />\r\n<span style=\"line-height:1.5;\">arg2：表示函数所使用到的参数</span><br />\r\n<span style=\"line-height:1.5;\">###：表示变量自身（表示$name），###有个名字叫“占位符”。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">函数名的个数不一定是1个，需要根据实际情况来确定，函数要求要是php内置的函数或者是ThinkPHP函数库文件（系统函数库functions.php，应用层级函数库function.php，分组层级function.php）中声明的函数。</span><br />\r\n<br />\r\n<span style=\"color:#E53333;line-height:1.5;\">特别说明：模版中使用函数的时候，如果函数只有一个参数，则可以不写参数，如果参数不止一个，并且第一个参数是变量自身，则也可以不写。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">使用函数：</span><br />\r\n<span style=\"line-height:1.5;\">{$data.name|md5}&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">编译后的结果是：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php echo (md5($data[\'name\'])); ?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">如果函数有多个参数需要调用，则使用：</span><br />\r\n<span style=\"line-height:1.5;\">{$create_time|date=\"y-m-d\",###}</span><br />\r\n<span style=\"line-height:1.5;\">表示date函数传入两个参数，每个参数用逗号分割，这里第一个参数是y-m-d，第二个参数是前面要输出的create_time变量，因为该变量是第二个参数，因此需要用###标识变量位置，编译后的结果是：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php echo (date(\"y-m-d\",$create_time)); ?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">如果前面输出的变量在后面定义的函数的第一个参数，则可以直接使用：</span><br />\r\n<span style=\"line-height:1.5;\">{$data.name|substr=0,3}</span><br />\r\n<span style=\"line-height:1.5;\">表示输出：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php echo (substr($data[\'name\'],0,3)); ?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">还可以支持多个函数过滤，多个函数之间用“|”分割即可，例如：</span><br />\r\n<span style=\"line-height:1.5;\">{$name|md5|strtoupper|substr=0,3}</span><br />\r\n<span style=\"line-height:1.5;\">编译后的结果是：</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php echo (substr(strtoupper(md5($name)),0,3)); ?&gt;</span><br />\r\n<span style=\"line-height:1.5;\">函数会按照从左到右的顺序依次调用。</span><br />\r\n<br />\r\n<span style=\"color:#E53333;line-height:1.5;\">注：变量输出使用的函数可以支持内置的PHP函数或者用户自定义函数，甚至是静态方法。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\"></span><br />','ThinkPHP中如何在视图中使用函数？',11),(134,'<span style=\"line-height:1.5;\">1、使用D方法实例化：</span><br />\r\n<span style=\"line-height:1.5;\">$model = D(\'模型名\')；表示实例化自定义的模型类</span><br />\r\n<span style=\"line-height:1.5;\">实例化结果跟使用new实例化的结果是一致的。</span><br />\r\n<span style=\"line-height:1.5;\">2、使用M方法实例化：</span><br />\r\n<span style=\"line-height:1.5;\">$model = M(); &nbsp;没有参数，就是实例化模型，但是不关联任何表，一般用他执行原生的sql语句。</span><br />\r\n<span style=\"line-height:1.5;\">$model = M(\'表名\'); &nbsp;表名不带前缀，首字母尽量大写，实例化模型并且关联指定的表。</span><br />\r\n<span style=\"line-height:1.5;\">注意：不带参数实例化父类，会不关联任何表，而带参数实例化则会关联相关的数据表</span><br />\r\n<span style=\"line-height:1.5;\">3、使用new实例化：</span><br />\r\n<span style=\"line-height:1.5;\">$model = new \\Admin\\Model\\UserModel();	这种方式实例化的时候系统会自动为我们关联user这张表，和$model = M(\'表名\');实例化的结果一致</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"><span style=\"color:#E53333;\">D</span><span style=\"color:#E53333;\">方法是实例化自定义的模型类，而M方法可以实例化父类模型。</span></span><br />\r\n<span style=\"line-height:1.5;\"></span>','ThinkPHP中实例化模型D方法和M方法以及new实例化模型的区别？',11),(135,'<span style=\"line-height:1.5;\">$_FILES[\"file\"][\"error\"]是错误代码，0表示没有错误，下面几个数字</span><span style=\"line-height:1.5;\">对应不同的错误</span><br />\r\n<span style=\"line-height:1.5;\">1 : 上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值.</span><br />\r\n<span style=\"line-height:1.5;\">2 : 上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。</span><br />\r\n<span style=\"line-height:1.5;\">3 : 文件只有部分被上传</span><br />\r\n<span style=\"line-height:1.5;\">4 : 没有文件被上传</span><br />\r\n<span style=\"line-height:1.5;\">$_FILES[\"file\"][\"error\"] &gt;0就是表示有错误发生</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">总结:php.ini配置文件中的默认文件上传大小为2M，　默认upload_max_filesize = 2M，即文件上传的大小为2M，如果你想上传超过8M的文件，比如20M，你必须设定upload_max_filesize = 20M。但是光设置upload_max_filesize = 20M还是无法实现大文件的上传功能，你必须修改php.ini配置文件中的post_max_size选项，其代表允许POST的数据最大字节长度，默 认为8M。如果POST数据超出限制，那么$_POST和$_FILES将会为空。要上传大文件，你必须设定该选项值大于 upload_max_filesize指令的值，我一般设定upload_max_filesize和post_max_size值相等。另外如果启用 了内存限制，那么该值应当小于memory_limit选项的值。</span><br />\r\n<span style=\"line-height:1.5;\">文件上传的其他注意事项：</span><br />\r\n<span style=\"line-height:1.5;\">在上传大文件时，你会有上传速度慢的感觉，当超过一定的时间，会报脚本执行超过30秒的错误，这是因为在php.ini配置文件中max_execution_time配置选项在作怪，其表示每个脚本最大允许执行时间(秒)，0 表示没有限制。你可以适当调整max_execution_time的值，不推荐设定为0。</span><br />\r\n<div>\r\n	<br />\r\n</div>','php 上传大文件如何配置upload_max_filesize和post_max_size选项？',5),(136,'<span style=\"line-height:1.5;\">方法1：</span><br />\r\n<span style=\"line-height:1.5;\">echo file_get_contents(\"http://www.phpres.com/index.html\");</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">方法2 (对于PHP5 及更高版本)：</span><br />\r\n<span style=\"line-height:1.5;\">$readcontents = fopen(\"http://www.phpres.com/index.html\", \"rb\");</span><br />\r\n<span style=\"line-height:1.5;\">$contents = stream_get_contents($readcontents);</span><br />\r\n<span style=\"line-height:1.5;\">fclose($readcontents);</span><br />\r\n<span style=\"line-height:1.5;\">echo $contents;</span><br />','有一个网页地址, 比如PHP开发资源网主页: http://www.phpres.com/index.html,如何得到它的内容?',17),(137,'<span style=\"line-height:1.5;\">function test($str){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$arr = explode(\'_\',$str);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//array_map() 函数将用户自定义函数作用到数	组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$arr = array_map(\'ucfirst\',$arr);&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return implode(\'\',$arr);</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">$str1 = \'open_door\';</span><br />\r\n<span style=\"line-height:1.5;\">echo test($str1);</span><br />\r\n<br />','请写一个函数， 实现以下功能： 字符串\"open_door\" 转换成\"OpenDoor\" 、\"make_by_id\" 转换成\"MakeById\"。',17),(138,'<span style=\"line-height:1.5;\">$path = str_replace(\'\\\\\',\'/\',__FILE__); //__FILE__代表当前网页文件的完整物理路径</span><br />\r\n<span style=\"line-height:1.5;\">//方法1</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name1($path){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return strrchr($path,\'.\');</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//方法2</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name2($path){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return substr($path,strrpos($path,\'.\'));</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//方法3</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name3($path){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$path_parts = pathinfo($path);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//pathinfo 返回文件路径的信息,如果没有传入 options ，将会返回包括以下单元的数组array：dirname，basename 和</span><span style=\"line-height:1.5;\">extension（如果有），以及filename。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return $path_parts[\'extension\'];&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//方法4</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name4($path){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$arr = explode(\'.\',$path);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return $arr[count($arr)-1];</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">//方法5</span><br />\r\n<span style=\"line-height:1.5;\">function ext_name5($path){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">$pattern = \'/^[^\\.]+\\.([\\w]+)$/\';</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//basename 返回路径中的文件名部分，${1}捕获组1的内容，也就是从左往右第一个括号内的内容</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">return preg_replace($pattern,\'${1}\',basename($path)); &nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">/*最前面的/和最后面的/表示正则表达式的开始和结束，没实际意义，正则表达式/^[^\\.]+\\.([\\w]+)$/</span><br />\r\n<span style=\"line-height:1.5;\">第一个^表示匹配文本的开头，[]表示匹配满足内部条件的字符，[]里面的^\\.表示除了.以外的任意字符，[]后面的+表示匹配的次数为1次或大于1次，一直到.才匹配结束，\\.表示对.转义，([\\w]+)表示匹配大小写字母、数字、下划线一个或多个，最后一个$表示匹配文本的结束*/</span><br />','写5个不同的函数，来获取一个全路径的文件的扩展名，允许封装 php库中已有的函数。（新浪）',17),(139,'<span style=\"line-height:1.5;\">strlen 和mb_strlen 都是用于获取字符串长度的，其中strlen 只针对单字节编码字符，</span><br />\r\n<span style=\"line-height:1.5;\">也就是说它计算的是字符串的总字节数，如果是多字节编码，如gbk 和utf8，使用strlen 得到的不是字符的个数，而是该字符的总字节数，可以使用mb_strlen 获取其字符个数，使用mb_strlen 要注意两点，一是要开启mbstring 扩展，二是要指定字符集。</span><br />\r\n<span style=\"line-height:1.5;\">示例：</span><br />\r\n<span style=\"line-height:1.5;\">$str1 = \"php\";</span><br />\r\n<span style=\"line-height:1.5;\">echo strlen($str1);	//输出3</span><br />\r\n<span style=\"line-height:1.5;\">$str2 = \"传智博客PHP学院\";</span><br />\r\n<span style=\"line-height:1.5;\">echo strlen($str2);	//输出21	 当前页面是utf8字符集，如果是gbk，则结果为15</span><br />\r\n<span style=\"line-height:1.5;\">echo mb_strlen($str2,\'utf8\'); //输出9 	注意要指定字符集utf8</span><br />','strlen( )与 mb_strlen( )的作用分别是什么(新浪网技术部)？',17),(140,'<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">header(\"Content-Type:text/html;charset=utf-8\");&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">function cleanWords($text) {</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$badword = \"敏感字|非法字|过滤\";</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;$badword = explode(\'|\',$badword);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;foreach($badword as $v){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$text = str_replace($v,\'**\',$text);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;return $text;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">$string = \"这句话里包含了敏感字符和一些非法字符，需要将它们过滤掉\";</span><br />\r\n<span style=\"line-height:1.5;\">$result = cleanWords($string);</span><br />\r\n<span style=\"line-height:1.5;\">echo $result;</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">结果为：这句话里包含了**符和一些**符，需要将它们**掉</span><br />\r\n<span style=\"line-height:1.5;\"></span>','写一个方法，替换一个字符串中出现的敏感关键字？',17),(141,'<span style=\"line-height:1.5;\"><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">方法1：使用mb_substr函数截取，但是需要在php.ini在把php_mbstring.dll扩展打开。</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">echo mb_substr(\'这样一来中文字符串就不会有乱码\', 0, 7, \'utf-8\');</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">方法2：自己写函数实现，但效率不如用mbstring扩展库来得高。（面试时回答第一种就可以了）</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">function substr2($string, $start, $length){</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">if(strlen($string) &gt; $length){</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">$str = \'\';</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">$len1 = $start + $length;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">for($i=$start; $i&lt;$len1; $i++){</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">//在ASCII中，0xa0表示汉字的开始，ord()函数返回字符的 ASCII 码值</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">if(ord(substr($string, $i, 2)) &gt; 0xa0){&nbsp;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;$str.=substr($string, $i, 2);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;$i++;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:normal;\">&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}else{</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:normal;\">&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;$str.=substr($string, $i, 1);</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;return $str.\'...\';</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}else{</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">return $string;</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span><br />\r\n<span style=\"font-family:Simsun;font-size:medium;line-height:1.5;\">}</span></span><span style=\"line-height:1.5;\"></span><br />','实现中文字串截取无乱码的方法？',17),(142,'<span style=\"line-height:1.5;\">GD 库提供了一系列用来处理图片的API，使用GD 库可以处理图片，或者生成图片。</span><br />\r\n<span style=\"line-height:1.5;\">在网站上GD 库通常用来生成缩略图或者用来对图片加水印或者对网站数据生成报表。</span><br />\r\n<span style=\"line-height:1.5;\">自从PHP 4.3.0 版本后GD 便内建在PHP 系统中。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','php中的GD库是做什么用的？',17),(143,'<span style=\"line-height:1.5;\">方法一：php 函数跳转，缺点，header 头之前不能有输出，跳转后的程序继续执行，可用exit 中断执行后面的程序。</span><br />\r\n<span style=\"line-height:1.5;\">header(\"Location: 网址\"); //直接跳转</span><br />\r\n<span style=\"line-height:1.5;\">header(\"refresh:3;url=http://axgle.za.net\"); //三秒后跳转</span><br />\r\n<span style=\"line-height:1.5;\">方法二：利用meta</span><br />\r\n<span style=\"line-height:1.5;\">echo \"&lt;meta http-equiv=refresh content=\'0; url=网址\'&gt;\";</span><br />\r\n<span style=\"line-height:1.5;\"></span>','PHP如何实现页面跳转？',17),(144,'<span style=\"line-height:1.5;\">上传文件的表单使用post 方式，并且要在form 中添加enctype=\'multipart/form-data\'。</span><br />\r\n<span style=\"line-height:1.5;\">一般可以加上隐藏域：&lt;input type=hidden name=\'MAX_FILE_SIZE\' value=dddddd&gt;，位置在file 域前面。value 的值是上传文件的客户端字节限制。可以避免用户在花时间等待上传大文件之后才发现文件过大上传失败的麻烦。</span><br />\r\n<span style=\"line-height:1.5;\">使用file 文件域来选择要上传的文件，当点击提交按钮之后，文件会被上传到服务器中的临时目录，在脚本运行结束时会被销毁，所以应该在脚本结束之前，将其移动到服务器上的某个目录下，可以通过函数move_uploaded_file()来移动临时文件，要获取临时文件的信息，使用$_FILES。</span><br />\r\n<span style=\"line-height:1.5;\">限制上传文件大小的因素有：</span><br />\r\n<span style=\"line-height:1.5;\">1) 客户端的隐藏域MAX_FILE_SIZE 的数值（可以被绕开）。</span><br />\r\n<span style=\"line-height:1.5;\">2) 服务器端的upload_max_filesize，post_max_size 和memory_limit。这几项不能够用脚本来设置。</span><br />\r\n<span style=\"line-height:1.5;\">3) 自定义文件大小限制逻辑。即使服务器的限制是能自己决定，也会有需要个别考虑的情况。所以这个限制方式经常是必要的。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','php中WEB 上传文件的原理是什么，如何限制上传文件的大小？',17),(145,'<span style=\"line-height:1.5;\">TCP 是主机对主机层的传输控制协议，提供可靠的连接服务，采用三次握手确认建立一个连接：</span><br />\r\n<span style=\"line-height:1.5;\">第一次握手：建立连接时，客户端发送syn 包(syn=j)到服务器，并进入SYN_SEND 状态，等待服务器确认；</span><br />\r\n<span style=\"line-height:1.5;\">第二次握手：服务器收到syn 包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN 包（syn=k），即SYN+ACK 包，此时服务器进入SYN_RECV 状态；</span><br />\r\n<span style=\"line-height:1.5;\">第三次握手：客户端收到服务器的SYN＋ACK 包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED 状态，完成三次握手。</span><br />\r\n<span style=\"line-height:1.5;\">完成三次握手，客户端与服务器开始传送数据。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','简述 Tcp协议的三次握手过程？',17),(146,'<span style=\"line-height:1.5;\">200 OK 服务器成功处理了请求</span><br />\r\n<span style=\"line-height:1.5;\">301 Moved Permanently（重定向）请求的URL 已移走</span><br />\r\n<span style=\"line-height:1.5;\">304 Not Modified（未修改）客户的缓存资源是最新的，要客户端使用缓存</span><br />\r\n<span style=\"line-height:1.5;\">403 Forbidden（禁止）请求被服务器拒绝了</span><br />\r\n<span style=\"line-height:1.5;\">404 Not Found 未找到资源</span><br />\r\n<span style=\"line-height:1.5;\">500 Internal Server Error(内部服务器错误)服务器遇到一个错误，使其无法为请求提供服务</span><br />','HTTP/1.0中，状态码 200 301 304 403 404 500的含义？ （小米）',17),(147,'<p>\r\n	<span style=\"line-height:1.5;\">allow_call_time_pass_reference</span><br />\r\n<span style=\"line-height:1.5;\"> 是否启用在函数调用时强制参数被按照引用传递</span>\r\n</p>','一个函数的参数不能是对变量的引用，除非在 php.ini中把（ ）设为on。',17),(148,'<span style=\"line-height:1.5;\">Memcache：</span><br />\r\n<span style=\"line-height:1.5;\">每个key支持1M，不支持持久化，支持数据类型字符串，支持session和TP框架， Window、linux下都可以运行，</span><span style=\"line-height:1.5;\">是一种分布式内存缓存技术</span><br />\r\n<span style=\"line-height:1.5;\">Radis：</span><br />\r\n<span style=\"line-height:1.5;\">每个key支持1G，支持持久化，支持多种数据类型，常用于集合计算，Linux下运行，采用主从模式（一主多从）</span><br />\r\n<span style=\"line-height:1.5;\">联系：</span><br />\r\n<span style=\"line-height:1.5;\">数据存储在内存当中，数据模型都是key-value</span><br />','简述memcache和redis的区别与联系？',17),(149,'<span style=\"line-height:1.5;\">可以自己设置上传文件的保存目录， 与文件名拼凑形成一个文件路径， 使用move_uploaded_file()，就可以完成将文件保存到指定目录。可以通过上传的文件名获取到文件后缀，然后使用时间戳+随机数+文件后缀的方式为文件重新命名，这样就避免了重名。</span>','怎么把文件保存到指定目录？怎么避免上传文件重名问题？',17),(150,'<span style=\"line-height:1.5;\">class Deque{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;private $queue = array();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;public function addFirst($item){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array_unshift($this-&gt;queue, $item);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;public function addLast($item){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array_push($this-&gt;queue, $item);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;public function removeFirst(){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array_shift($this-&gt;queue);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;public function removeLast(){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return array_pop($this-&gt;queue);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\"></span>','用 PHP实现一个双向队列？（腾讯）',17),(151,'<span style=\"line-height:1.5;\">75%，每只老鼠都有顺时针、逆时钟两种运动方向，3只老鼠共有8种运动情况，</span><br />\r\n<span style=\"line-height:1.5;\">只有当3只老鼠都为顺时针或者逆时钟，它们才不会相遇，剩余的6中情况都会相遇，</span><br />\r\n<span style=\"line-height:1.5;\">故相遇的概率为6/8 = 75%。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','一个三角形三个顶点有3只老鼠，一声枪响，3只老鼠开始沿三角形的边匀速运动，请问 他们相遇的概率是（小米）',17),(152,'<span style=\"line-height:1.5;\">没有固定答案，简单洗牌算法参考</span><br />\r\n<span style=\"line-height:1.5;\">$card_num=54; //牌数</span><br />\r\n<span style=\"line-height:1.5;\">function wash_card($card_num){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;$cards=$tmp=array();</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;for($i=0;$i&lt;$card_num;$i++){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp[$i]=$i;</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;for($i=0;$i&lt;$card_num;$i++){</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$index=rand(0,$card_num-$i-1);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$cards[$i]=$tmp[$index];</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset($tmp[$index]);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmp=array_values($tmp);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;return $cards;</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">测试：print_r(wash_card($card_num));</span><br />\r\n<span style=\"line-height:1.5;\"></span>','我们希望开发一款扑克游戏，请给出一套洗牌算法，公平的洗牌并将洗好的牌存储 在一个整形数组里。（鑫众人云）',17),(153,'<span style=\"line-height:1.5;\">cookie 的总数量没有限制，但是每个域名的COOKIE 数量和每个COOKIE 的大小是有限制的！</span><br />\r\n<span style=\"line-height:1.5;\">IE 每个域名限制为50 个。</span><br />\r\n<span style=\"line-height:1.5;\">Firefox 每个域名cookie 限制为50 个。</span><br />\r\n<span style=\"line-height:1.5;\">Opera 每个域名cookie 限制为30 个。</span><br />\r\n<span style=\"line-height:1.5;\">Safari/webkit 貌似没有cookie 限制。但是假如cookie 很多，则会使header 大小超过服务器的处理的限制，会导致错误发生。</span><br />\r\n<span style=\"line-height:1.5;\">不同浏览器间每个cookie 文件大小也不同：</span><br />\r\n<span style=\"line-height:1.5;\">Firefox 和safari 是4097 个字节，包括名（name）、值（value）和等号。</span><br />\r\n<span style=\"line-height:1.5;\">Opera 是4096 个字节，包括：名（name）、值（value）和等号。</span><br />\r\n<span style=\"line-height:1.5;\">IE 是4095 个字节，包括：名（name）、值（value）和等号。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','一个浏览器最多可以产生多少个 cookie，每个 cookie 文件最大不能超过多少？',17),(154,'<span style=\"line-height:1.5;\">POST www.10086.cn HTTP/1.1</span><br />\r\n<span style=\"line-height:1.5;\">Accept: text/html, application/xhtml+xml, */*</span><br />\r\n<span style=\"line-height:1.5;\">Referer: http://localhost/a.html</span><br />\r\n<span style=\"line-height:1.5;\">Accept-Language: zh-CN</span><br />\r\n<span style=\"line-height:1.5;\">User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0;KB974487)</span><br />\r\n<span style=\"line-height:1.5;\">Content-Type: application/x-www-form-urlencoded</span><br />\r\n<span style=\"line-height:1.5;\">Accept-Encoding: gzip, deflate</span><br />\r\n<span style=\"line-height:1.5;\">Host: localhost</span><br />\r\n<span style=\"line-height:1.5;\">Content-Length: 25</span><br />\r\n<span style=\"line-height:1.5;\">Connection: Keep-Alive</span><br />\r\n<span style=\"line-height:1.5;\">username=abc&amp;password=123</span><br />\r\n<span style=\"line-height:1.5;\"></span>','通过页面输入用户名 abc 和密码 123登录到www.10086.cn，请写出该次请求的 HTTP协议报文(包括请求行、消息报头、请求正文)。(卓望)',17),(155,'<span style=\"line-height:1.5;\">未经授权：访问由于凭据无效被拒绝</span><br />\r\n<span style=\"line-height:1.5;\">header(\"HTTP/1.0 404 Not Found\")</span><br />\r\n<span style=\"line-height:1.5;\"></span>','在 HTTP 1.0中，状态码 401的含义是（）;如果返回“找不到文件”的提示，则可用 header 函数，其语句为（）;',17),(156,'<span></span><span style=\"line-height:1.5;color:#E53333;\">核心思路：加锁 <br />\r\n</span><span style=\"line-height:1.5;\">$fp = fopen(\"lock.txt\",\"w+\");</span><br />\r\n<span style=\"line-height:1.5;\">if(flock($fp,LOCK_EX)){&nbsp; &nbsp; //&nbsp;<span style=\"color:#E53333;\">LOCK_SH	读锁&nbsp;&nbsp;&nbsp;&nbsp;	LOCK_EX	写锁</span><span></span></span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;//获得写锁，写数据</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;fwrite($fp,\"write something\");</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;//解除锁定</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;flock($fp,LOCK_UN); &nbsp;//强制解锁</span><br />\r\n<span style=\"line-height:1.5;\">} else {</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp;&nbsp;&nbsp;&nbsp;echo \"file is locking...\";</span><br />\r\n<span style=\"line-height:1.5;\">}</span><br />\r\n<span style=\"line-height:1.5;\">fclose($fp);</span><br />\r\n<span style=\"line-height:1.5;\"></span>','请写一段 PHP代码，确保多个进程同时写入同一个文件成功？（腾讯）',17),(157,'<span style=\"line-height:1.5;\">safe_mode，php 安全模式，它提供一个基本安全的共享环境，在一个有多个用户账户存在的php 开发的web 服务器上。当安全模式打开的时候，一些函数将被完全的禁止，而另一些函数的功能将会受到限制，如：chdir,move_uploaded_file,chgrp,parse_ini_file, chown, rmdir, copy, rename, fopen,require,mkdir,unlink 等。</span><br />\r\n<span style=\"line-height:1.5;\">注意，在php5.3 以上版本，safe_mode 被弃用，在php5.4 以上版本，则将此特性完全去除了。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','打开 php.ini中的 safe_mode，会影响哪些函数？至少说出 6个。（新浪）',17),(158,'<span style=\"line-height:1.5;\">用到的函数ignore_user_abort(),set_time_limit(0),sleep($interval)，此代码只要运行一次后关闭浏览器即可。</span><br />\r\n<span style=\"line-height:1.5;\">&lt;?php</span><br />\r\n<span style=\"line-height:1.5;\">ignore_user_abort(); //关掉浏览器，PHP 脚本也可以继续执行.</span><br />\r\n<span style=\"line-height:1.5;\">set_time_limit(0); // 通过set_time_limit(0)可以让程序无限制的执行下去</span><br />\r\n<span style=\"line-height:1.5;\">$interval=60*5; // 每隔5 分钟运行</span><br />\r\n<span style=\"line-height:1.5;\">do{</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">//这里是你要执行的代码</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"line-height:1.5;\">sleep($interval); // 等待5 分钟</span><br />\r\n<span style=\"line-height:1.5;\">}while(true);</span><br />','如果要求每隔 5分钟执行一次脚本 five.php，如何实现？ （卓望）',17),(159,'<span style=\"line-height:1.5;\">流行的Ajax 框架有jQuery，Prototype，Dojo，MooTools。</span><br />\r\n<span style=\"line-height:1.5;\">Ajax 的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到数据库中的返回数据信息了。所以Ajax 技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。</span><br />\r\n<span style=\"line-height:1.5;\">在使用Ajax 时，涉及到数据传输，即将数据从服务器返回到客户端，服务器端和客户端分别使用不同的脚步语言来处理数据，这就需要一种通用的数据格式，XML 和json 就是最常用的两种，而json 比XML 更简单。</span><br />','列举流行的Ajax框架？说明Ajax实现原理是什么及json在Ajax中起什么作用？（鑫众人云）',17),(160,'<span style=\"line-height:1.5;\">主要是数据库的设计系统的架构思想</span><br />\r\n<span style=\"line-height:1.5;\">分页算法的原理是limit offset, pagesize</span><br />\r\n<span style=\"line-height:1.5;\">其中，pagesize 是设定好的，而offset 则要通过计算得到，不同的页数对应的offset 也不同，</span><br />\r\n<span style=\"line-height:1.5;\">设当前页为currentpage，则offset = (currentpage - 1) * pagesize。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','现在请你设计一个留言板系统，请简要的写出你设计的其中分页算法的思路。（奇矩互动）',17),(161,'<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">$memcache_obj=new memcache;</span><br />\r\n<span style=\"line-height:1.5;\">$memcache_obj-&gt;connect(‘memcache_host,11211’);</span><br />\r\n<span style=\"line-height:1.5;\">$memcache_obj-&gt;set(‘varKey’,’varValue’,0,____);</span><br />\r\n<span style=\"line-height:1.5;\">?&gt;</span><br />\r\n<span style=\"color:#E53333;\"><span style=\"line-height:1.5;\">答案：</span><span style=\"line-height:1.5;\">time() + 3600 * 24 * 31</span></span><br />\r\n</span>','需要设置一个有效期为 31天的 memcach值，请补充下面的代码 （奇矩互动）',17),(162,'<span style=\"line-height:1.5;\">Memcahce 是把所有的数据保存在内存当中，采用hash 表的方式，每条数据由key 和value 组成，</span><br />\r\n<span style=\"line-height:1.5;\">每个key 是独一无二的，当要访问某个值的时候先按照key找到值，然后返回结果。</span><br />\r\n<span style=\"line-height:1.5;\">Memcahce 采用LRU 算法来逐渐把过期数据清除掉。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？',17),(163,'<span style=\"line-height:1.5;\">一是首先提高数据库的查询速度，比如增加索引，优化表的结构。</span><br />\r\n<span style=\"line-height:1.5;\">二是优化程序代码，如果查询比较多，可以尽量用条件查询，减少查询语句，比如能用一条查询语句就不用两条。</span><br />\r\n<span style=\"line-height:1.5;\">三就是提高服务器的速度，优化服务器，把不必要的进程关掉。</span><br />','如果某段与数据库交互的程序运行较慢你将如何处理?',17),(164,'<span style=\"line-height:1.5;\">有一个内容管理系统，当用户提交内容后，系统生成静态 HTML页面，写出实现的基本思路。</span><br />\r\n<span style=\"line-height:1.5;\">要生成静态HTML 页面，需要使用输出缓冲output buffering 及文件操作，首先使用ob_start()函数开启输出缓冲，在页面内容执行完成时，使用ob_get_contents()函数获取保存在输出缓冲区中的内容，然后使用file_put_contents()函数，生成静态HTML 页面即可。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','有一个内容管理系统，当用户提交内容后，系统生成静态 HTML页面，写出实现页面静态化的基本思路。',17),(165,'<span style=\"line-height:1.5;\">$str = file_get_contents(\'doc.txt\');</span><br />\r\n<span style=\"line-height:1.5;\">$str = ucwords($str);</span><br />\r\n<span style=\"line-height:1.5;\">file_put_contents(\'doc.txt\', $str);</span><br />\r\n<span style=\"line-height:1.5;\"></span>','把一篇英文文档中所有单词的首字母转为大写，文档存在 doc.txt 中。可以在多种编程语言中选择（C\\C++,JAVA,PHP...)写出你的思路，尽量优化你的程序。',17),(166,'<span style=\"line-height:1.5;\">1) 确认服务器硬件能否支持当前的流量</span><br />\r\n<span style=\"line-height:1.5;\">对于普通的pc server 来说，它能够独立支持每天10 万个独立ip 访问，如果访问量过大，最好更好性能更高的专用服务器。</span><br />\r\n<span style=\"line-height:1.5;\">2) 优化数据库的访问</span><br />\r\n<span style=\"line-height:1.5;\">服务器的负载过大，一个重要的原因就是CPU 和内存负载过高，而读写数据在这块占据较多的资源。可以从页面静态化、memcache 缓存和mysql 优化几个方面着手。</span><br />\r\n<span style=\"line-height:1.5;\">3) 禁止外部盗链</span><br />\r\n<span style=\"line-height:1.5;\">占用较大的流量，防盗链，使用reference 来判断一下。如果是图片的话，使用添加水印即可很好的防止。</span><br />\r\n<span style=\"line-height:1.5;\">4) 控制大文件的下载</span><br />\r\n<span style=\"line-height:1.5;\">最好把文件下载的容量控制为相对较小的一个值，如果有大文件下载，最好使用专用的服务器。</span><br />\r\n<span style=\"line-height:1.5;\">5) 使用多台主机实现分流，集群（面试时不建议说集群，除非你对此有比较深的认识和了解）</span><br />\r\n<span style=\"line-height:1.5;\">6) 使用流量分析软件进行分析统计谷歌和百度</span><br />','对于大流量的网站, 您采用什么样的方法来解决访问量问题？',17),(167,'<span style=\"line-height:1.5;\">this.value 获取 dom对象的值 如 text radio checkbox select 等</span><br />\r\n<span style=\"line-height:1.5;\">text():获取或者改变指定元素的文本</span><br />\r\n<span style=\"line-height:1.5;\">html():获取或改变指定元素的html元素以及文本</span><br />\r\n<span style=\"line-height:1.5;\">val():获取或者改变指定元素的value值（一般是表单元素）</span><br />\r\n<span style=\"line-height:1.5;\">以上3个都是jquery类库中的语法</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">二者基本没有什么区别，作用都是获得当前对象的value值（一般是表单元素）</span><br />\r\n<span style=\"line-height:1.5;\">只是，this.value是js的原生语法，$(this).val()是jquery的语法</span><br />\r\n<span style=\"line-height:1.5;\">使用this.value无需引入任何库文件，而$(this).val()则需要引入jquery库文件</span><br />','jQuery中的text(),html(),val()有什么区别？this.value和$(this).val()都可以获取值，那么这两中方式有什么区别？',15),(168,'<span style=\"line-height:1.5;\">控制台（Console）是Firebug的第一个面板，也是最重要的面板，主要作用是显示网页加载过程中产生各类信息。</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">一、显示信息的命令</span><br />\r\n<span style=\"line-height:1.5;\">Firebug内置一个console对象，提供5种方法，用来显示信息。</span><br />\r\n<span style=\"line-height:1.5;\">最简单的方法是console.log()，可以用来取代alert()或document.write()。比如，在网页脚本中使用console.log(\"Hello World\")，加载时控制台就会自动显示上述内容。</span><br />\r\n<span style=\"line-height:1.5;\">另外，根据信息的不同性质，console对象还有4种显示信息的方法，分别是一般信息console.info()、除错信息console.debug()、警告提示console.warn()、错误提示console.error()。</span><br />\r\n<span style=\"line-height:1.5;\">比如，在网页脚本中插入下面四行：</span><br />\r\n<span style=\"line-height:1.5;\">　　console.info(\"这是info\");</span><br />\r\n<span style=\"line-height:1.5;\">　　console.debug(\"这是debug\");</span><br />\r\n<span style=\"line-height:1.5;\">　　console.warn(\"这是warn\");</span><br />\r\n<span style=\"line-height:1.5;\">　　console.error(\"这是error\");</span><br />\r\n<span style=\"line-height:1.5;\">加载时，控制台会显示上述</span><span></span><span style=\"line-height:1.5;\">内容。</span><br />\r\n<span style=\"line-height:1.5;\">可以看到，不同性质的信息前面有不同的图标，并且每条信息后面都有超级链接，点击后跳转到网页源码的相应行。</span><br />\r\n<span style=\"line-height:1.5;\"></span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">二、占位符</span><br />\r\n<span style=\"line-height:1.5;\">console对象的上面5种方法，都可以使用printf风格的占位符。不过，占位符的种类比较少，只支持字符（%s）、整数（%d或%i）、浮点数（%f）和对象（%o）四种。</span><br />\r\n<span style=\"line-height:1.5;\">比如，</span><br />\r\n<span style=\"line-height:1.5;\">　　console.log(\"%d年%d月%d日\",2011,3,26);</span><br />\r\n<span style=\"line-height:1.5;\">　　</span><span style=\"line-height:1.5;\">console.log(\"圆周率是%f\",3.1415926);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">%o占位符，可以用来查看一个对象内部情况。比如，有这样一个对象：</span><br />\r\n<span style=\"line-height:1.5;\">　　var dog = {} ;</span><br />\r\n<span style=\"line-height:1.5;\">　　dog.name = \"大毛\" ;</span><br />\r\n<span style=\"line-height:1.5;\">　　dog.color = \"黄色\";</span><br />\r\n<span style=\"line-height:1.5;\">然后，对它使用%o占位符。</span><br />\r\n<span style=\"line-height:1.5;\">　　console.log(\"%o\",dog);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">三、分组显示</span><br />\r\n<span style=\"line-height:1.5;\">如果信息太多，可以分组显示，用到的方法是console.group()和console.groupEnd()。</span><br />\r\n<span style=\"line-height:1.5;\">　　console.group(\"第一组信息\");</span><br />\r\n<span style=\"line-height:1.5;\">　　　　console.log(\"第一组第一条\");</span><br />\r\n<span style=\"line-height:1.5;\">　　　　console.log(\"第一组第二条\");</span><br />\r\n<span style=\"line-height:1.5;\">　　console.groupEnd();</span><br />\r\n<span style=\"line-height:1.5;\">　　console.group(\"第二组信息\");</span><br />\r\n<span style=\"line-height:1.5;\">　　　　console.log(\"第二组第一条\");</span><br />\r\n<span style=\"line-height:1.5;\">　　　　console.log(\"第二组第二条\");</span><br />\r\n<span style=\"line-height:1.5;\">　　console.groupEnd();</span><br />\r\n<span style=\"line-height:1.5;\">点击组标题，该组信息会折叠或展开。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">四、console.dir()</span><br />\r\n<span style=\"line-height:1.5;\">console.dir()可以显示一个对象所有的属性和方法。</span><br />\r\n<span style=\"line-height:1.5;\">比如，现在为第二节的dog对象，添加一个bark()方法。</span><br />\r\n<span style=\"line-height:1.5;\">　　dog.bark = function(){alert(\"汪汪汪\");};</span><br />\r\n<span style=\"line-height:1.5;\">然后，显示该对象的内容，</span><br />\r\n<span style=\"line-height:1.5;\">　　console.dir(dog);</span><br />\r\n<span></span><span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">五、console.dirxml()</span><br />\r\n<span style=\"line-height:1.5;\">console.dirxml()用来显示网页的某个节点（node）所包含的html/xml代码。</span><br />\r\n<span style=\"line-height:1.5;\">比如，先获取一个表格节点，</span><br />\r\n<span style=\"line-height:1.5;\">　　var table = document.getElementById(\"table1\");</span><br />\r\n<span style=\"line-height:1.5;\">然后，显示该节点包含的代码。</span><br />\r\n<span style=\"line-height:1.5;\">　　console.dirxml(table);</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">六、console.assert()</span><br />\r\n<span style=\"line-height:1.5;\">console.assert()用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。</span><br />\r\n<span style=\"line-height:1.5;\">比如，下面两个判断的结果都为否。</span><br />\r\n<span style=\"line-height:1.5;\">　　var result = 0;</span><br />\r\n<span style=\"line-height:1.5;\">　　console.assert( result );</span><br />\r\n<span style=\"line-height:1.5;\">　　var year = 2000;</span><br />\r\n<span style=\"line-height:1.5;\">　　console.assert(year == 2011 );</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">七、console.trace()</span><br />\r\n<span style=\"line-height:1.5;\">console.trace()用来追踪函数的调用轨迹。</span><br />\r\n<span style=\"line-height:1.5;\">比如，有一个加法器函数。</span><br />\r\n<span style=\"line-height:1.5;\">　　function add(a,b){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　return a+b;</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">我想知道这个函数是如何被调用的，在其中加入console.trace()方法就可以了。</span><br />\r\n<span style=\"line-height:1.5;\">　　function add(a,b){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　console.trace();</span><br />\r\n<span style=\"line-height:1.5;\">　　　　return a+b;</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">假定这个函数的调用代码如下：</span><br />\r\n<span style=\"line-height:1.5;\">　　var x = add3(1,1);</span><br />\r\n<span style=\"line-height:1.5;\">　　function add3(a,b){return add2(a,b);}</span><br />\r\n<span style=\"line-height:1.5;\">　　function add2(a,b){return add1(a,b);}</span><br />\r\n<span style=\"line-height:1.5;\">　　function add1(a,b){return add(a,b);}</span><br />\r\n<span style=\"line-height:1.5;\">运行后，会显示add()的调用轨迹，从上到下依次为add()、add1()、add2()、add3()。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">八、计时功能</span><br />\r\n<span style=\"line-height:1.5;\">console.time()和console.timeEnd()，用来显示代码的运行时间。</span><br />\r\n<span style=\"line-height:1.5;\">　　console.time(\"计时器一\");</span><br />\r\n<span style=\"line-height:1.5;\">　　for(var i=0;i&lt;1000;i++){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　for(var j=0;j&lt;1000;j++){}</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">　　console.timeEnd(\"计时器一\");</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">九、性能分析</span><br />\r\n<span style=\"line-height:1.5;\">性能分析（Profiler）就是分析程序各个部分的运行时间，找出瓶颈所在，使用的方法是console.profile()。</span><br />\r\n<span style=\"line-height:1.5;\">假定有一个函数Foo()，里面调用了另外两个函数funcA()和funcB()，其中funcA()调用10次，funcB()调用1次。</span><br />\r\n<span style=\"line-height:1.5;\">　　function Foo(){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　for(var i=0;i&lt;10;i++){funcA(1000);}</span><br />\r\n<span style=\"line-height:1.5;\">　　　　funcB(10000);</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">　　function funcA(count){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　for(var i=0;i&lt;count;i++){}</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">　　function funcB(count){</span><br />\r\n<span style=\"line-height:1.5;\">　　　　for(var i=0;i&lt;count;i++){}</span><br />\r\n<span style=\"line-height:1.5;\">　　}</span><br />\r\n<span style=\"line-height:1.5;\">然后，就可以分析Foo()的运行性能了。</span><br />\r\n<span style=\"line-height:1.5;\">　　console.profile(\'性能分析器一\');</span><br />\r\n<span style=\"line-height:1.5;\">　　Foo();</span><br />\r\n<span style=\"line-height:1.5;\">　　console.profileEnd();</span><br />\r\n<span style=\"line-height:1.5;\">控制台会显示一张性能分析表。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">标题栏提示，一共运行了12个函数，共耗时2.656毫秒。其中funcA()运行10次，耗时1.391毫秒，最短运行时间0.123毫秒，最长0.284毫秒，平均0.139毫秒；funcB()运行1次，耗时1.229ms毫秒。</span><br />\r\n<span style=\"line-height:1.5;\">除了使用console.profile()方法，firebug还提供了一个\"概况\"（Profiler）按钮。第一次点击该按钮，\"性能分析\" 开始，你可以对网页进行某种操作（比如ajax操作），然后第二次点击该按钮，\"性能分析\"结束，该操作引发的所有运算就会进行性能分析。</span><br />\r\n<span style=\"line-height:1.5;\">&nbsp;</span><br />\r\n<span style=\"color:#E53333;line-height:1.5;\">十、属性菜单</span><br />\r\n<span style=\"line-height:1.5;\">控制台面板的名称后面，有一个倒三角，点击后会显示属性菜单。</span><br />\r\n<span style=\"line-height:1.5;\">默认情况下，控制台只显示Javascript错误。如果选中Javascript警告、CSS错误、XML错误都送上，则相关的提示信息都会显示。</span><br />\r\n<span style=\"line-height:1.5;\">这里比较有用的是\"显示XMLHttpRequests\"，也就是显示ajax请求。选中以后，网页的所有ajax请求，都会在控制台面板显示出来。</span><br />\r\n<span style=\"line-height:1.5;\">比如，点击一个button</span><span style=\"line-height:1.5;\">，控制台就会告诉我们，它用ajax方式发出了一个GET请求，http请求和响应的头信息和内容主体，也都可以看到。</span><br />','javascript和jquery对于console的调试方法说明？',15),(169,'<span><span style=\"line-height:1.5;\">ImageMagick是一个用来创建、编辑、合成图片的软件。它可以读取、转换、写入多种格式的图片。图片切割、颜色替换、各种效果的应用,图片的旋转、组合,文本,直线,多边形,椭圆,曲线,附加到图片伸展旋转。</span><br />\r\n</span><span></span><br />\r\n<span style=\"line-height:1.5;\"> Sphinx是一个基于SQL的全文检索引擎，可以结合MySQL,PostgreSQL做全文搜索，它可以提供比数据库本身更专业</span><br />\r\n<span style=\"line-height:1.5;\"> 的搜索功能，使得应用程序更容易实现专业化的全文检索。Sphinx特别为一些脚本语言设计搜索API接口，如</span><br />\r\n<span style=\"line-height:1.5;\"> PHP,Python,Perl,Ruby等，同时为MySQL也设计了一个存储引擎插件。</span><br />\r\n<span style=\"line-height:1.5;\"> Sphinx单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建索引的</span><br />\r\n<span style=\"line-height:1.5;\"> 速度为：创建100万条记录的索引只需 3～4分钟，创建1000万条记录的索引可以在50分钟内完成，而只包含最新10</span><br />\r\n<span style=\"line-height:1.5;\"> 万条记录的增量索引，重建一次只需几十秒。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"> 为什么要用ImageMagick?</span><br />\r\n<span style=\"line-height:1.5;\"> ImageMagick是免费软件:全部源码开放,可以自由使用,复制,修改,发布。支持大多数的操作系统。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\"> 为什么要用Sphinx?</span><br />\r\n<span style=\"line-height:1.5;\"> 1、大量数据量查询like%name，速度慢</span><br />\r\n<span style=\"line-height:1.5;\"> 2、水平分表的情况下，查询慢</span><br />\r\n<span style=\"line-height:1.5;\"> 3、查询时中文分词的需求</span><br />\r\n<span style=\"line-height:1.5;\"> 4、sphinx查询速度快</span>','您是否使用过ImageMagick和Sphinx？做什么用的？为什么使用？',17),(170,'<span style=\"line-height:1.5;\">count -- 计算数组中的单元数目或对象中的属性个数</span><br />\r\n<span style=\"line-height:1.5;\">foreach -- 遍历数组</span><br />\r\n<span style=\"line-height:1.5;\">list -- 遍历数组</span><br />\r\n<span style=\"line-height:1.5;\">explode -- 将字符串转成数组</span><br />\r\n<span style=\"line-height:1.5;\">implode -- 将数组转成一个新字符串</span><br />\r\n<span style=\"line-height:1.5;\">is_array -- 检查是否是数组</span><br />\r\n<span style=\"line-height:1.5;\">print_r -- 输出数组</span><br />\r\n<span style=\"line-height:1.5;\">sort -- 数组排序</span><br />\r\n<span style=\"line-height:1.5;\">array_keys -- 返回数组中所有的键名</span><br />\r\n<span style=\"line-height:1.5;\">array_values -- 返回数组中所有的值</span><br />\r\n<span style=\"line-height:1.5;\">key -- 从关联数组中取得键名</span><br />\r\n<span style=\"line-height:1.5;\">array()----创建数组</span><br />\r\n<span style=\"line-height:1.5;\">array_combine()----通过合并两个数组来创建一个新数组</span><br />\r\n<span style=\"line-height:1.5;\">range()----创建并返回一个包含指定范围的元素的数组</span><br />\r\n<span style=\"line-height:1.5;\">array_merge()----把两个或多个数组合并成一个数组</span><br />\r\n<span style=\"line-height:1.5;\">array_slice()----在数组中根据条件取出一段值</span><br />\r\n<span style=\"line-height:1.5;\">array_diff()----返回两个数组的差集数组</span><br />\r\n<span style=\"line-height:1.5;\">array_intersect()----计算数组的交集</span><br />\r\n<span style=\"line-height:1.5;\">array_search()----在数组中搜索给定的值</span><br />\r\n<span style=\"line-height:1.5;\">array_splice()----移除数组的一部分且替代它</span><br />\r\n<span style=\"line-height:1.5;\">array_key_exists()----判断某个数组中是否存在指定的key</span><br />\r\n<span style=\"line-height:1.5;\">shuffle()----把数组中的元素按随机顺序重新排列</span><br />\r\n<span style=\"line-height:1.5;\">array_flip()----交换数组中的键和值</span><br />\r\n<span style=\"line-height:1.5;\">array_reverse()----将原数组中的元素顺序翻转，创建新的数组并返回</span><br />\r\n<span style=\"line-height:1.5;\">array_unique()----移除数组中重复的值</span><br />\r\n<span style=\"line-height:1.5;\"></span>','说出数组常用的处理函数，至少10个？',17),(171,'<span style=\"line-height:1.5;\">strpos()---查找字符串位置</span><br />\r\n<span style=\"line-height:1.5;\">str_replace(search,replace,$str):从$str中查找search用replace来替换</span><br />\r\n<span style=\"line-height:1.5;\">str_split($str,len):把$str按len长度进行分割返回数组</span><br />\r\n<span style=\"line-height:1.5;\">ltrim、rtrim 去除左侧和右侧空格\\字符</span><br />\r\n<span style=\"line-height:1.5;\">strtolower($str) 字符串转换为小写</span><br />\r\n<span style=\"line-height:1.5;\">strtoupper($str) 字符串转换为大写</span><br />\r\n<span style=\"line-height:1.5;\">ucfirst($str) 将字符串的第一个字符转换为大写</span><br />\r\n<span style=\"line-height:1.5;\">trim() -- 去除字符串首尾处的空白字符（或者其他字符）</span><br />\r\n<span style=\"line-height:1.5;\">strlen() -- 字符串长度</span><br />\r\n<span style=\"line-height:1.5;\">substr() -- 截取字符串</span><br />\r\n<span style=\"line-height:1.5;\">substr_replace() -- 对指定字符串中的部分字符串进行替换</span><br />\r\n<span style=\"line-height:1.5;\">strstr() -- 检索字符串函数</span><br />\r\n<span style=\"line-height:1.5;\">explode() -- 分割字符串函数</span><br />\r\n<span style=\"line-height:1.5;\">implode() -- 将数组合并成字符串</span><br />\r\n<span style=\"line-height:1.5;\">str_repeat() -- 重复一个字符串</span><br />\r\n<span style=\"line-height:1.5;\">addslashes(); -- 转义字符串</span><br />\r\n<span style=\"line-height:1.5;\">htmlspecialchars() -- HTML 实体转义</span><br />\r\n<span style=\"line-height:1.5;\"></span><span style=\"line-height:1.5;\"></span><br />\r\n<span style=\"line-height:1.5;\"></span>','说出常用字符串处理函数，至少10个？',17),(172,'<span style=\"line-height:1.5;\">1) 尽量选择较小的列</span><br />\r\n<span style=\"line-height:1.5;\">2) 将where中用的比较频繁的字段建立索引</span><br />\r\n<span style=\"line-height:1.5;\">3) select子句中避免使用‘*’</span><br />\r\n<span style=\"line-height:1.5;\">4) 避免在索引列上使用计算、not in 和&lt;&gt;等操作</span><br />\r\n<span style=\"line-height:1.5;\">5) 当只需要一行数据的时候使用limit 1</span><br />\r\n<span style=\"line-height:1.5;\">6) 保证单表数据不超过200W，适时分割表。</span><br />\r\n<span style=\"line-height:1.5;\">7) 尽量不要使用子查询，用连表查询代替</span><br />\r\n<span style=\"line-height:1.5;\">针对查询较慢的语句，可以使用explain 来分析该语句具体的执行情况。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','请简述项目中优化sql 语句执行效率的方法,从哪些方面,sql 语句性能如何分析？',17),(173,'<span style=\"line-height:1.5;\">ftp：File Transfer Protocol，文件传输协议，是应用层的协议，它基于传输层，为用户服务，它们负责进行文件的传输，其默认端口是21。</span><br />\r\n<span style=\"line-height:1.5;\">ssh：Secure Shell，安全外壳协议，建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，其默端口是22。</span><br />\r\n<span style=\"line-height:1.5;\">http：hypertext transport protocol，超文本传送协议，是一种详细规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议，其默认端口是80。</span><br />\r\n<span style=\"line-height:1.5;\">telnet：Telnet 协议是TCP/IP 协议族中的一员，是Internet 远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力，其默认端口是23。</span><br />\r\n<span style=\"line-height:1.5;\">https：Hypertext Transfer Protocol over Secure Socket Layer，是以安全为目标的HTTP 通道，用于安全的HTTP 数据传输，它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性，其默认端口是443。</span><br />','写出下列服务的用途和默认端口？ftp、ssh、http、telnet、https（新浪网技术部）',17),(174,'<span style=\"line-height:1.5;\">使用key() 可以获得数组中当前元素的键名，使用current()则可以返回当前元素的值。</span><br />\r\n<span style=\"line-height:1.5;\">使用array_keys() 则可以得到数组中所有的键名。</span><br />\r\n<span style=\"line-height:1.5;\">使用foreach 结构foreach($arr as $key=&gt;$value) 可以通过$key 和$value 分别获取键名和值。</span><br />\r\n<span style=\"line-height:1.5;\"></span>','PHP中，如何获得一个数组的键值？',17),(175,'<span style=\"line-height:1.5;\">getElementById,这是最常见的方法,根据id定位对象</span><br />\r\n<span style=\"line-height:1.5;\">getElementsByName,根据name名称获取一组对象的集合</span><br />\r\n<span style=\"line-height:1.5;\">getElementsByTagName,根据标签名获取一组对象的集合</span><br />\r\n<span style=\"line-height:1.5;\">主要是以上3个,其他:</span><br />\r\n<span style=\"line-height:1.5;\">parentElement:获取当前元素的父对象</span><br />\r\n<span style=\"line-height:1.5;\">children:所有子元素对象的集合</span><br />\r\n<span style=\"line-height:1.5;\">firstChild：第一个子节点</span><br />\r\n<span style=\"line-height:1.5;\">lastChild:最后一个子节点</span><br />\r\n<span style=\"line-height:1.5;\">parentNode:父节点</span><br />\r\n<span style=\"line-height:1.5;\">childNodes:所有子节点的集合</span><br />\r\n<span style=\"line-height:1.5;\"></span>','Javascript查找dom有哪些方式?',15),(176,'<span style=\"line-height:1.5;\">require 的使用方法如 require(\"MyRequireFile.php\"); 。这个函数通常放在 PHP 程序的 &nbsp;最前面，PHP 程序在执行前，就会先读入 require 所指定引入的文件，使它变成 PHP 程序网页的一部份。常用的函数，亦可以这个方法将它引入网页中。</span><br />\r\n<span style=\"line-height:1.5;\">include 使用方法如 include(\"MyIncludeFile.php\"); 。这个函数一般是放在流程控制的处理部分中。PHP 程序网页在读到 include 的文件时，才将它读进来。这种方式，可以把程序执行时的流程简单化。</span><br />\r\n<span style=\"line-height:1.5;\">他们两个的用途是完全一样的，不一定非得哪个放在最前面哪个放在中间。他们最根本的区别在于错误处理的方式不一样。&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">require一个文件存在错误的话，那么程序就会中断执行了，并显示致命错误&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\">include一个文件存在错误的话，那么程序不会中端，而是继续执行，并显示一个警告错误。</span><br />','请简述include和require包含文件的区别?',17),(177,'<span style=\"line-height:1.5;\"><span></span>答案有点多,关键是其实是rewrite重写,原理是请求头的referer,破解方法也就是伪造referer<span></span></span><br />\r\n<span style=\"line-height:1.5;\">使用.htaccess禁止盗链</span><br />\r\n<span></span><span style=\"line-height:1.5;\">通过.htaccess来防止网站的图片、压缩文件、或视频等非Html文件被盗链的方法相当简单，通过在该文件中加入几句命令即可保护我们宝贵的带宽。例如本站的设置如下:<em>&nbsp;</em></span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><span style=\"color:#003399;\">RewriteEngine on</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !^$ [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !webeta.cn [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !ikuaizi.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !zhuaxia.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !xianguo.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !google.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !bloglines.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !feedburner.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteCond %{HTTP_REFERER} !feedsky.com [NC]</span><br />\r\n<span style=\"color:#003399;\">RewriteRule .*.(gif|jpg)$ http://domain.com/no.png [R,NC,L]</span></span><span></span><br />\r\n<span style=\"line-height:1.5;\">简单的解释一下上述语句：</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><em><strong>1、RewriteCond %{HTTP_REFERER} !^$ [NC]</strong></em></span><br />\r\n<span style=\"line-height:1.5;\">允许空“HTTP_REFERER”的访问，即允许用户在浏览器地址栏中<span></span>直接输入图片地址时图片文件的显示。一般而言，这是可选的，不过，建议这么设置，如果强迫必须具有“HTTP_REFERER”才能访问，可能会带来某些问题，比如说在用户通过代理服务器访问时。</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><em><strong>2、RewriteCond %{HTTP_REFERER} !domain.com [NC]</strong></em></span><br />\r\n<span style=\"line-height:1.5;\">设置允许访问的HTTP来源，包括我们的站点自身、Google、Baidu、Bloglines、Feedburner等。</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><em><strong>3、RewriteRule .*.(gif|jpg|png)$ http://domain.com/no.png [R,NC,L]</strong></em></span><br />\r\n<span style=\"line-height:1.5;\">定义被盗链时替代的图片，让所有盗链 jpg、gif、png 等文件的网页，显示根目录下的 no.png 文件。注意：替换显示的图片不要放在设置防盗链的目录中，并且该图片文件体积越小越好。当然你也可以不设置替换图片，而是使用下面的语句即可：</span><br />\r\n<span style=\"line-height:1.5;\">RewriteRule .*.(gif|jpg|png)$ - [F]</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><em><strong>4、说明一下其中的R、NC 和 L</strong></em></span><br />\r\n<span style=\"line-height:1.5;\">R 就是转向的意思</span><br />\r\n<span style=\"line-height:1.5;\">NC 指的是不区分大小写</span><br />\r\n<span style=\"line-height:1.5;\">L 的作用是指明本次转向到此结束，后续的转向不受先前判断语句的影响</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\"><em><strong>5、防止盗链的文件类型</strong></em></span><br />\r\n<span style=\"line-height:1.5;\">上例中是 gif、jpg、png，而根据需要，可更改或添加其他文件类型，如rar、mov等，不同文件扩展名间使用“|”分割。</span><br />\r\n<span style=\"line-height:1.5;\">这样的话，就可以基本做到简单的防止被盗链情况的发生，而且可以尽最大可能的减少服务器流量的无畏消耗，当然了，如果你不在意这点流量的话，那么可以不用考虑上述设置啦！</span><br />\r\n<span style=\"line-height:1.5;\"></span>','一般图片的防盗链实现以及突破技术?',17),(178,'<span style=\"line-height:1.5;\">__LINE__，文件中当前行号</span><br />\r\n<span style=\"line-height:1.5;\">__FILE__，文件的完整路径和文件名</span><br />\r\n<span style=\"line-height:1.5;\">__DIR_，文件所在的目录</span><br />\r\n<span style=\"line-height:1.5;\">__FUNCTION__，函数名称</span><br />\r\n<span style=\"line-height:1.5;\">__CLASS__，类的名称</span><br />\r\n<span style=\"line-height:1.5;\">__TRAIT__，Trait的名字</span><br />\r\n<span style=\"line-height:1.5;\">__METHOD__，类的方法名</span><br />\r\n<span style=\"line-height:1.5;\">__NAMESPACE__，当前命名空间的名字</span><br />\r\n<span style=\"line-height:1.5;\"></span>','说出PHP常见的魔术常量有哪些？',17),(179,'<span><span style=\"line-height:1.5;\">一群猴子排成一圈，按1，2，...，n依次编号。然后从第 1只开始数，数到第m只，把它踢出圈，从它后面再开始数，再数到第 m只，在把它踢出去...，如此不停的进行下去，直 到最后只剩下一只猴子为止，那只猴子就叫做大王。要求编程模拟此过程，输入 m、n, 输出最后那个大王的编号？</span><br />\r\n<span style=\"line-height:1.5;\"> <span style=\"line-height:1.5;\">//这是著名的约瑟夫环问题，使用php 来模拟这个过程</span></span><br />\r\n<span style=\"line-height:1.5;\"> function king($n,$m){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; $monkey = range(1,$n);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; $i = 0;</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; while(count($monkey) &gt; 1){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; $i += 1;</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; $head = array_shift($monkey); //一个个出列最前面的猴子，array_shift将数组开头的单元移出数组&nbsp;</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; if($i % $m != 0){</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //如果不是m的倍数，则把该猴子返回尾部，否则就抛掉，也就是出列了</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; array_push($monkey,$head);</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; &nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; }</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; //剩下的最后一个就是大王</span><br />\r\n<span style=\"line-height:1.5;\"> &nbsp; &nbsp; return $monkey[0];</span><br />\r\n<span style=\"line-height:1.5;\"> }</span><br />\r\n<span style=\"line-height:1.5;\"> //测试</span><br />\r\n<span style=\"line-height:1.5;\"> echo king(10,7);</span><br />\r\n</span>','猴子选大王--经典面试题',17),(180,'<span style=\"line-height:1.5;\">mysql_fetch_row() 把数据库的一列储存在一个以零为基数的数组中，第一栏在数组的索引0，第二栏在索引1，依此类推。</span><br />\r\n<span style=\"line-height:1.5;\">mysql_fetch_assoc() 把数据库的一列储存在一个关联数组中，数组的索引就是字段名称，</span><br />\r\n<span style=\"line-height:1.5;\">例如我的数据库查询送回“first_name”、“last_name”、“email”三个字段，数组的索引便是“first_name”、“last_name”和“email”。</span><br />\r\n<span style=\"line-height:1.5;\">mysql_fetch_array()可以同时送回mysql_fetch_row()和mysql_fetch_assoc() 的值。</span><br />','mysql_fetch_row() 和 mysql_fetch_array() 有什么分别？',17),(181,'<p>\r\n	<span style=\"line-height:1.5;\">1. 模式修正符就是几个字母，我们在每个正则表达式中可以一次使用一个，也可以连续使用多个，每一个具一定的意义,模式修正符是对整个正则表达式调优使用，也可以说是对正则表达式功能的扩展。</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">2. 贪婪与非贪婪模式影响的是被量词修饰的子表达式的匹配行为，贪婪模式在整个表达式匹配成功的前提下，尽可能多的匹配，而非贪婪模式在整个表达式匹配成功的前提下，尽可能少的匹配。</span></span> \r\n</p>\r\n<span style=\"line-height:1.5;\"><span style=\"line-height:1.5;\">&nbsp; &nbsp;</span><span></span><strong>默认是贪婪模式；在量词后面直接加上一个问号？就是非贪婪模式。</strong><span></span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">　量词：{m,n}：m到n个</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">　　　　　*：任意多个</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">　　　　　+：一个到多个</span><br />\r\n<span style=\"line-height:1.5;color:#E53333;\">　　　　　？：0或一个</span><span style=\"color:#E53333;\"></span></span><br />\r\n<img src=\"/Public/Admin/js/editor/attached/image/20160619/20160619170822_87080.bmp\" alt=\"\" /><br />\r\n<br />','常用的正则模式修正符有哪些?什么是贪婪模式?什么是非贪婪模式?什么是子组模式?',17),(182,'<span style=\"line-height:1.5;\">1. application/x-www-form-urlencoded</span><br />\r\n<span style=\"line-height:1.5;\">这应该是最常见的 POST 提交数据的方式了。浏览器的原生 &lt;form&gt; 表单，如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">2. multipart/form-data</span><br />\r\n<span style=\"line-height:1.5;\">这又是一个常见的 POST 数据提交的方式。我们使用表单上传文件时，必须让 &lt;form&gt; 表单的 enctyped 等于 multipart/form-data</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">3. application/json</span><br />\r\n<span style=\"line-height:1.5;\">application/json 这个 Content-Type 作为响应头大家肯定不陌生。实际上，现在越来越多的人把它作为请求头，用来告诉服务端消息主体是序列化后的 JSON 字符串。</span><br />\r\n<br />\r\n<span style=\"line-height:1.5;\">4. text/xml</span><br />\r\n<div>\r\n	<br />\r\n</div>\r\n<span style=\"line-height:1.5;\">5.还可以使用curl和fsockopen函数来发送POST请求，使用curl要注意开启curl扩展</span>','写出你使用过的发送POST请求的方式？',17);
/*!40000 ALTER TABLE `sc_message` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sc_user`
--

DROP TABLE IF EXISTS `sc_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sc_user` (
  `user_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_name` varchar(20) NOT NULL COMMENT '用户姓名',
  `user_pwd` varchar(30) NOT NULL COMMENT '密码',
  `user_hobby` varchar(32) DEFAULT NULL COMMENT '爱好',
  `user_qq` int(11) DEFAULT NULL COMMENT 'QQ号码',
  `user_email` varchar(20) DEFAULT NULL COMMENT '电子邮箱',
  `user_tel` int(11) DEFAULT NULL COMMENT '手机号码',
  `create_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '添加时间',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sc_user`
--

LOCK TABLES `sc_user` WRITE;
/*!40000 ALTER TABLE `sc_user` DISABLE KEYS */;
INSERT INTO `sc_user` VALUES (1,'user','123456',NULL,895559225,'user@163.com',2147483647,1444528144);
/*!40000 ALTER TABLE `sc_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-06-19 18:39:24
